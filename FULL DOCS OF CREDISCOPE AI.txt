├── PRD 4 with pipeline.docx
├── README.md
├── Text Analysis Result DESIGN.docx
├── TruthLens-Master-PRD.docx
├── backend
    ├── .env
    ├── .env.sample
    ├── README.md
    ├── app
    │   ├── __pycache__
    │   │   ├── config.cpython-311.pyc
    │   │   ├── config.cpython-313.pyc
    │   │   ├── database.cpython-311.pyc
    │   │   ├── database.cpython-313.pyc
    │   │   ├── main.cpython-311.pyc
    │   │   ├── main.cpython-313.pyc
    │   │   ├── models.cpython-311.pyc
    │   │   ├── models.cpython-313.pyc
    │   │   ├── services.cpython-311.pyc
    │   │   ├── verify.cpython-311.pyc
    │   │   └── verify.cpython-313.pyc
    │   ├── config.py
    │   ├── database.py
    │   ├── main.py
    │   ├── models.py
    │   ├── routes
    │   │   ├── __pycache__
    │   │   │   ├── text_analysis.cpython-311.pyc
    │   │   │   └── text_analysis.cpython-313.pyc
    │   │   ├── health.py
    │   │   └── text_analysis.py
    │   ├── services.py
    │   ├── services
    │   │   ├── __init__.py
    │   │   ├── __pycache__
    │   │   │   ├── __init__.cpython-311.pyc
    │   │   │   ├── __init__.cpython-313.pyc
    │   │   │   ├── analysis_engine.cpython-311.pyc
    │   │   │   ├── analysis_engine.cpython-313.pyc
    │   │   │   ├── text_service.cpython-311.pyc
    │   │   │   └── text_service.cpython-313.pyc
    │   │   ├── analysis_engine.py
    │   │   └── text_service.py
    │   └── verify.py
    ├── ecosystem.config.cjs
    ├── requirements.txt
    ├── run.py
    └── storage
    │   ├── analyses.json
    │   └── results.json
├── design_style of text output.docx
├── folder_structure1.txt
├── generate_tree.ps1
└── truthlens-landing-page-main
    ├── .gitignore
    ├── README.md
    ├── TotalDoc of Perfect frontend.pdf
    ├── bun.lockb
    ├── components.json
    ├── eslint.config.js
    ├── index.html
    ├── package-lock.json
    ├── package.json
    ├── postcss.config.js
    ├── public
        ├── favicon.ico
        ├── placeholder.svg
        └── robots.txt
    ├── src
        ├── App.css
        ├── App.tsx
        ├── api
        │   └── client.ts
        ├── assets
        │   ├── brain-icon.png
        │   ├── check-icon.png
        │   ├── magnifying-glass.png
        │   └── shield-icon.png
        ├── components
        │   ├── EducationSection.tsx
        │   ├── FinalCTASection.tsx
        │   ├── HeroSection.tsx
        │   ├── HowItWorksSection.tsx
        │   ├── TrendsSection.tsx
        │   ├── TruthLensFooter.tsx
        │   ├── TruthLensHeader.tsx
        │   └── ui
        │   │   ├── accordion.tsx
        │   │   ├── alert-dialog.tsx
        │   │   ├── alert.tsx
        │   │   ├── aspect-ratio.tsx
        │   │   ├── avatar.tsx
        │   │   ├── badge.tsx
        │   │   ├── breadcrumb.tsx
        │   │   ├── button.tsx
        │   │   ├── calendar.tsx
        │   │   ├── card.tsx
        │   │   ├── carousel.tsx
        │   │   ├── chart.tsx
        │   │   ├── checkbox.tsx
        │   │   ├── collapsible.tsx
        │   │   ├── command.tsx
        │   │   ├── context-menu.tsx
        │   │   ├── dialog.tsx
        │   │   ├── drawer.tsx
        │   │   ├── dropdown-menu.tsx
        │   │   ├── form.tsx
        │   │   ├── hover-card.tsx
        │   │   ├── input-otp.tsx
        │   │   ├── input.tsx
        │   │   ├── label.tsx
        │   │   ├── menubar.tsx
        │   │   ├── navigation-menu.tsx
        │   │   ├── pagination.tsx
        │   │   ├── popover.tsx
        │   │   ├── progress.tsx
        │   │   ├── radio-group.tsx
        │   │   ├── resizable.tsx
        │   │   ├── scroll-area.tsx
        │   │   ├── select.tsx
        │   │   ├── separator.tsx
        │   │   ├── sheet.tsx
        │   │   ├── sidebar.tsx
        │   │   ├── skeleton.tsx
        │   │   ├── slider.tsx
        │   │   ├── sonner.tsx
        │   │   ├── switch.tsx
        │   │   ├── table.tsx
        │   │   ├── tabs.tsx
        │   │   ├── textarea.tsx
        │   │   ├── toast.tsx
        │   │   ├── toaster.tsx
        │   │   ├── toggle-group.tsx
        │   │   ├── toggle.tsx
        │   │   ├── tooltip.tsx
        │   │   └── use-toast.ts
        ├── hooks
        │   ├── use-mobile.tsx
        │   └── use-toast.ts
        ├── index.css
        ├── lib
        │   └── utils.ts
        ├── main.tsx
        ├── pages
        │   ├── Archive.tsx
        │   ├── Authority.tsx
        │   ├── Index.tsx
        │   ├── Learn.tsx
        │   ├── NotFound.tsx
        │   ├── Results-2323.tsx
        │   ├── Results.tsx
        │   └── Results_backup.tsx
        └── vite-env.d.ts
    ├── tailwind.config.ts
    ├── tsconfig.app.json
    ├── tsconfig.json
    ├── tsconfig.node.json
    └── vite.config.ts


/PRD 4 with pipeline.docx:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/PRD 4 with pipeline.docx


--------------------------------------------------------------------------------
/README.md:
--------------------------------------------------------------------------------
1 | 
2 | 


--------------------------------------------------------------------------------
/Text Analysis Result DESIGN.docx:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/Text Analysis Result DESIGN.docx


--------------------------------------------------------------------------------
/TruthLens-Master-PRD.docx:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/TruthLens-Master-PRD.docx


--------------------------------------------------------------------------------
/backend/.env:
--------------------------------------------------------------------------------
1 | SKIP_AUTH=true
2 | PORT=8080
3 | DEBUG=true
4 | FRONTEND_ORIGIN=http://localhost:8080
5 | 
6 | # AI API Keys for real analysis
7 | GEMINI_API_KEY=AIzaSyAKo-sIHXM7HzJDOLm7mkyIlqCdHF6rsHo
8 | GOOGLE_FACTCHECK_API_KEY=AIzaSyAUCdF5rz3bhlqixGwMO2Rpqsx066gFmkgx
9 | WIKIPEDIA_API_KEY=29b7218962d8ef23903a64200c7efd85


--------------------------------------------------------------------------------
/backend/.env.sample:
--------------------------------------------------------------------------------
1 | SKIP_AUTH=true
2 | PORT=8080
3 | DEBUG=true
4 | FRONTEND_ORIGIN=http://localhost:8080


--------------------------------------------------------------------------------
/backend/README.md:
--------------------------------------------------------------------------------
  1 | # TruthLens Backend - FastAPI MVP
  2 | 
  3 | ## Overview
  4 | Lightweight FastAPI backend for TruthLens misinformation detection platform. This MVP provides core content verification capabilities with mock AI services for rapid development and React frontend integration.
  5 | 
  6 | ## Features
  7 | - ✅ Content verification (text, URL, image)
  8 | - ✅ Mock AI analysis with deterministic results  
  9 | - ✅ JSON-based local storage
 10 | - ✅ CORS configured for React frontend
 11 | - ✅ RESTful API with OpenAPI documentation
 12 | - ✅ Health monitoring endpoints
 13 | 
 14 | ## Quick Start
 15 | 
 16 | ### Prerequisites
 17 | - Python 3.8+
 18 | - Virtual environment (recommended)
 19 | 
 20 | ### Installation
 21 | ```bash
 22 | cd backend
 23 | python -m venv venv
 24 | source venv/bin/activate  # Windows: venv\Scripts\activate
 25 | pip install -r requirements.txt
 26 | ```
 27 | 
 28 | ### Configuration
 29 | ```bash
 30 | # Copy environment template
 31 | cp .env.sample .env
 32 | 
 33 | # Edit .env if needed (defaults work for development)
 34 | ```
 35 | 
 36 | ### Run Server
 37 | ```bash
 38 | # Simple start
 39 | python run.py
 40 | 
 41 | # Or direct uvicorn
 42 | uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload
 43 | ```
 44 | 
 45 | ## API Endpoints
 46 | 
 47 | ### Core Verification
 48 | ```
 49 | POST /api/v1/verify
 50 | - Analyzes text, URL, or image content
 51 | - Returns verdict, confidence score, and detailed analysis
 52 | ```
 53 | 
 54 | ### Results Retrieval  
 55 | ```
 56 | GET /api/v1/results/{analysis_id}
 57 | - Retrieves detailed analysis by ID
 58 | ```
 59 | 
 60 | ### Archive/History
 61 | ```
 62 | GET /api/v1/archive?limit=20&user_id=optional
 63 | - Returns analysis history
 64 | ```
 65 | 
 66 | ### Health Monitoring
 67 | ```
 68 | GET /health
 69 | GET /api/v1/health
 70 | - Server health status
 71 | ```
 72 | 
 73 | ## API Documentation
 74 | - Swagger UI: http://localhost:8080/docs
 75 | - ReDoc: http://localhost:8080/redoc
 76 | 
 77 | ## Example Usage
 78 | 
 79 | ### Text Analysis
 80 | ```bash
 81 | curl -X POST "http://localhost:8080/api/v1/verify" \
 82 |   -H "Content-Type: application/x-www-form-urlencoded" \
 83 |   -d "content_type=text&content=This is fake news about vaccines"
 84 | ```
 85 | 
 86 | ### URL Verification
 87 | ```bash
 88 | curl -X POST "http://localhost:8080/api/v1/verify" \
 89 |   -H "Content-Type: application/x-www-form-urlencoded" \
 90 |   -d "content_type=url&content=https://bbc.com/news/example"
 91 | ```
 92 | 
 93 | ### Image Upload
 94 | ```bash
 95 | curl -X POST "http://localhost:8080/api/v1/verify" \
 96 |   -F "content_type=image" \
 97 |   -F "content=image_placeholder" \
 98 |   -F "file=@image.jpg"
 99 | ```
100 | 
101 | ## Response Format
102 | ```json
103 | {
104 |   "analysis_id": "uuid-string",
105 |   "verdict": "true|false|inconclusive",
106 |   "confidence_score": 0.75,
107 |   "summary": "Analysis summary",
108 |   "processing_time": 2.1,
109 |   "detailed_analysis": {
110 |     "evidence": [],
111 |     "sources": [],
112 |     "gemini_analysis": "AI explanation",
113 |     "vision_analysis": "Image analysis results"
114 |   }
115 | }
116 | ```
117 | 
118 | ## Mock AI Services
119 | Current implementation uses deterministic mock services:
120 | - **Text Analysis**: Hash-based verdict assignment
121 | - **Image Analysis**: Placeholder manipulation detection
122 | - **URL Analysis**: Domain reputation scoring
123 | 
124 | ## Storage
125 | - **Type**: Local JSON files
126 | - **Location**: `storage/` directory
127 | - **Files**: `analyses.json`, `results.json`
128 | - **Structure**: Key-value storage with timestamps
129 | 
130 | ## CORS Configuration
131 | Configured for React development servers:
132 | - `http://localhost:3000` (Create React App)
133 | - `http://localhost:5173` (Vite)
134 | - Configurable via `FRONTEND_ORIGIN` environment variable
135 | 
136 | ## Development Notes
137 | - Built for rapid hackathon development
138 | - Mock services provide realistic response patterns
139 | - Ready for real GCP AI service integration
140 | - Structured for easy expansion to full features
141 | 
142 | ## Next Steps (Post-MVP)
143 | - [ ] Integrate real Google Cloud AI services
144 | - [ ] Add Firestore database connection
145 | - [ ] Implement user authentication
146 | - [ ] Add comprehensive error handling
147 | - [ ] Deploy to Google Cloud Run
148 | - [ ] Add rate limiting and caching


--------------------------------------------------------------------------------
/backend/app/__pycache__/config.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/config.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/config.cpython-313.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/config.cpython-313.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/database.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/database.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/database.cpython-313.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/database.cpython-313.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/main.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/main.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/main.cpython-313.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/main.cpython-313.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/models.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/models.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/models.cpython-313.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/models.cpython-313.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/services.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/services.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/verify.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/verify.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/__pycache__/verify.cpython-313.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/__pycache__/verify.cpython-313.pyc


--------------------------------------------------------------------------------
/backend/app/config.py:
--------------------------------------------------------------------------------
 1 | import os
 2 | from dotenv import load_dotenv
 3 | 
 4 | load_dotenv()
 5 | 
 6 | class Settings:
 7 |     SKIP_AUTH: bool = os.getenv("SKIP_AUTH", "true").lower() == "true"
 8 |     PORT: int = int(os.getenv("PORT", "8080"))
 9 |     DEBUG: bool = os.getenv("DEBUG", "true").lower() == "true"
10 |     FRONTEND_ORIGIN: str = os.getenv("FRONTEND_ORIGIN", "http://localhost:5173")
11 |     
12 | settings = Settings()


--------------------------------------------------------------------------------
/backend/app/database.py:
--------------------------------------------------------------------------------
 1 | import json
 2 | import os
 3 | from typing import Dict, List, Optional
 4 | from datetime import datetime
 5 | 
 6 | class JSONStorage:
 7 |     def __init__(self, storage_dir: str = "storage"):
 8 |         self.storage_dir = storage_dir
 9 |         os.makedirs(storage_dir, exist_ok=True)
10 |         self.analyses_file = os.path.join(storage_dir, "analyses.json")
11 |         self.results_file = os.path.join(storage_dir, "results.json")
12 |         
13 |         # Initialize files if they don't exist
14 |         for file_path in [self.analyses_file, self.results_file]:
15 |             if not os.path.exists(file_path):
16 |                 with open(file_path, 'w') as f:
17 |                     json.dump({}, f)
18 | 
19 |     def save_analysis(self, analysis_id: str, data: Dict) -> bool:
20 |         """Save analysis result to JSON storage"""
21 |         try:
22 |             # Load existing data
23 |             with open(self.analyses_file, 'r') as f:
24 |                 analyses = json.load(f)
25 |             
26 |             # Add timestamp if not present
27 |             if 'timestamp' not in data:
28 |                 data['timestamp'] = datetime.now().isoformat()
29 |             
30 |             # Save analysis
31 |             analyses[analysis_id] = data
32 |             
33 |             # Write back to file
34 |             with open(self.analyses_file, 'w') as f:
35 |                 json.dump(analyses, f, indent=2)
36 |             
37 |             return True
38 |         except Exception as e:
39 |             print(f"Error saving analysis: {e}")
40 |             return False
41 | 
42 |     def get_analysis(self, analysis_id: str) -> Optional[Dict]:
43 |         """Retrieve analysis by ID"""
44 |         try:
45 |             with open(self.analyses_file, 'r') as f:
46 |                 analyses = json.load(f)
47 |             return analyses.get(analysis_id)
48 |         except Exception as e:
49 |             print(f"Error retrieving analysis: {e}")
50 |             return None
51 | 
52 |     def get_all_analyses(self, limit: int = 50) -> List[Dict]:
53 |         """Get all analyses with optional limit"""
54 |         try:
55 |             with open(self.analyses_file, 'r') as f:
56 |                 analyses = json.load(f)
57 |             
58 |             # Convert to list and sort by timestamp
59 |             analysis_list = list(analyses.values())
60 |             analysis_list.sort(key=lambda x: x.get('timestamp', ''), reverse=True)
61 |             
62 |             return analysis_list[:limit]
63 |         except Exception as e:
64 |             print(f"Error retrieving all analyses: {e}")
65 |             return []
66 | 
67 | # Global storage instance
68 | storage = JSONStorage()


--------------------------------------------------------------------------------
/backend/app/main.py:
--------------------------------------------------------------------------------
 1 | from fastapi import FastAPI
 2 | from fastapi.middleware.cors import CORSMiddleware
 3 | from datetime import datetime
 4 | 
 5 | from app.models import HealthResponse
 6 | from app.verify import router as verify_router
 7 | from app.config import settings
 8 | from app.routes import text_analysis
 9 | # Initialize FastAPI app
10 | app = FastAPI(
11 |     title="TruthLens API",
12 |     description="AI-powered misinformation detection platform",
13 |     version="1.0.0",
14 |     docs_url="/docs",
15 |     redoc_url="/redoc"
16 | )
17 | 
18 | # Configure CORS for React frontend
19 | app.add_middleware(
20 |     CORSMiddleware,
21 |     allow_origins=[
22 |         "http://localhost:3000",     # React dev server (Create React App)
23 |         "http://localhost:5173",     # Vite dev server  
24 |         settings.FRONTEND_ORIGIN,    # Configurable origin
25 |     ],
26 |     allow_credentials=True,
27 |     allow_methods=["*"],
28 |     allow_headers=["*"],
29 | )
30 | 
31 | # Health check endpoint
32 | @app.get("/health", response_model=HealthResponse)
33 | async def health_check():
34 |     """Health check endpoint for monitoring and load balancers"""
35 |     return HealthResponse(
36 |         status="healthy",
37 |         timestamp=datetime.now(),
38 |         version="1.0.0"
39 |     )
40 | 
41 | # Root endpoint
42 | @app.get("/")
43 | async def root():
44 |     """Root endpoint with API information"""
45 |     return {
46 |         "message": "TruthLens API - Misinformation Detection Platform",
47 |         "version": "1.0.0",
48 |         "status": "active",
49 |         "docs": "/docs",
50 |         "health": "/health",
51 |         "endpoints": {
52 |             "verify": "/api/v1/verify",
53 |             "results": "/api/v1/results/{analysis_id}",
54 |             "archive": "/api/v1/archive"
55 |         }
56 |     }
57 | 
58 | # Include API routes with versioning
59 | app.include_router(verify_router, prefix="/api/v1", tags=["verification"])
60 | app.include_router(text_analysis.router, prefix="/api/v1", tags=["text"])
61 | 
62 | # Additional health check for specific path
63 | @app.get("/api/v1/health")
64 | async def api_health():
65 |     """API-specific health check"""
66 |     return {"status": "healthy", "api_version": "v1", "timestamp": datetime.now()}
67 | 
68 | if __name__ == "__main__":
69 |     import uvicorn
70 |     uvicorn.run(
71 |         "app.main:app",
72 |         host="0.0.0.0",
73 |         port=settings.PORT,
74 |         reload=settings.DEBUG
75 |     )


--------------------------------------------------------------------------------
/backend/app/models.py:
--------------------------------------------------------------------------------
 1 | from pydantic import BaseModel, Field
 2 | from typing import Optional, List, Dict, Any
 3 | from datetime import datetime
 4 | import uuid
 5 | 
 6 | class AnalysisRequest(BaseModel):
 7 |     content_type: str = Field(..., description="Type of content: text, url, or image")
 8 |     content: str = Field(..., description="Content to analyze")
 9 |     language: Optional[str] = Field("en", description="Language preference: hi or en")
10 |     user_id: Optional[str] = Field(None, description="Optional user identifier")
11 | 
12 | class DetailedAnalysis(BaseModel):
13 |     evidence: List[str] = Field(default_factory=list, description="Evidence supporting the verdict")
14 |     sources: List[str] = Field(default_factory=list, description="Sources checked during analysis")
15 |     gemini_analysis: Optional[str] = Field(None, description="AI-generated explanation")
16 |     factcheck_results: List[Dict[str, Any]] = Field(default_factory=list, description="Fact check results")
17 |     vision_analysis: Optional[str] = Field(None, description="Image analysis results")
18 |     educational: Optional[Dict[str, Any]] = Field(default_factory=dict, description="Educational analysis with misinformation breakdown")  # 🎯 ADDED EDUCATIONAL FIELD
19 | 
20 | class AnalysisResponse(BaseModel):
21 |     analysis_id: str = Field(default_factory=lambda: str(uuid.uuid4()), description="Unique analysis identifier")
22 |     verdict: str = Field(..., description="Analysis verdict: true, false, or inconclusive")
23 |     confidence_score: float = Field(..., ge=0, le=1, description="Confidence score between 0 and 1")
24 |     summary: str = Field(..., description="Brief analysis summary")
25 |     processing_time: float = Field(..., description="Time taken for analysis in seconds")
26 |     detailed_analysis: DetailedAnalysis = Field(default_factory=DetailedAnalysis)
27 | 
28 | class HealthResponse(BaseModel):
29 |     status: str = "healthy"
30 |     timestamp: datetime = Field(default_factory=datetime.now)
31 |     version: str = "1.0.0"
32 | 


--------------------------------------------------------------------------------
/backend/app/routes/__pycache__/text_analysis.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/routes/__pycache__/text_analysis.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/routes/__pycache__/text_analysis.cpython-313.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/routes/__pycache__/text_analysis.cpython-313.pyc


--------------------------------------------------------------------------------
/backend/app/routes/health.py:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/routes/health.py


--------------------------------------------------------------------------------
/backend/app/routes/text_analysis.py:
--------------------------------------------------------------------------------
  1 | """
  2 | FastAPI Router for Text Analysis
  3 | Exposes POST /text/analyze endpoint that calls AnalysisEngine
  4 | """
  5 | 
  6 | from fastapi import APIRouter, HTTPException
  7 | from pydantic import BaseModel, Field
  8 | from typing import Dict, Any, Optional
  9 | import logging
 10 | 
 11 | from app.services.analysis_engine import analysis_engine
 12 | 
 13 | # Configure logging
 14 | logger = logging.getLogger(__name__)
 15 | 
 16 | # Create router
 17 | router = APIRouter(
 18 |     prefix="/text",
 19 |     tags=["Text"]
 20 | )
 21 | 
 22 | # Request Models
 23 | class TextAnalyzeRequest(BaseModel):
 24 |     """Request model for text analysis"""
 25 |     text: str = Field(..., min_length=1, max_length=10000, description="Text content to analyze")
 26 |     language: Optional[str] = Field("en", description="Language code (e.g., 'en', 'hi')")
 27 |     
 28 |     class Config:
 29 |         schema_extra = {
 30 |             "example": {
 31 |                 "text": "Drinking bleach cures COVID-19",
 32 |                 "language": "en"
 33 |             }
 34 |         }
 35 | 
 36 | # Response Models
 37 | class LegacyAnalysisResponse(BaseModel):
 38 |     """Response model matching AnalysisEngine output"""
 39 |     verdict: str = Field(..., description="Analysis verdict: true, false, or inconclusive")
 40 |     confidence_score: float = Field(..., ge=0.0, le=1.0, description="Confidence score between 0 and 1")
 41 |     summary: str = Field(..., description="Summary of analysis results")
 42 |     processing_time: float = Field(..., description="Processing time in seconds")
 43 |     detailed_analysis: Dict[str, Any] = Field(..., description="Detailed analysis from all services")
 44 |     
 45 |     class Config:
 46 |         schema_extra = {
 47 |             "example": {
 48 |                 "verdict": "false",
 49 |                 "confidence_score": 0.95,
 50 |                 "summary": "Fact-checks found: Snopes -> FALSE",
 51 |                 "processing_time": 2.34,
 52 |                 "detailed_analysis": {
 53 |                     "factcheck": {
 54 |                         "fact_checks_found": 1,
 55 |                         "verdicts": [{"verdict": "FALSE", "source": "Snopes"}]
 56 |                     },
 57 |                     "gemini": {"normalized_claim": "Drinking bleach cures COVID-19"},
 58 |                     "perspective": {"toxicity_score": 0.1}
 59 |                 }
 60 |             }
 61 |         }
 62 | 
 63 | class PingResponse(BaseModel):
 64 |     """Simple ping response"""
 65 |     status: str
 66 |     message: str
 67 | 
 68 | # Routes
 69 | @router.get("/ping", response_model=PingResponse)
 70 | async def ping():
 71 |     """Health check for text analysis service"""
 72 |     return PingResponse(status="healthy", message="Text analysis service is operational")
 73 | 
 74 | @router.post("/analyze", response_model=LegacyAnalysisResponse)
 75 | async def analyze_text(request: TextAnalyzeRequest):
 76 |     """
 77 |     Analyze text for misinformation detection
 78 |     
 79 |     - **text**: The text content to analyze (required)
 80 |     - **language**: Language code for the text (optional, defaults to 'en')
 81 |     
 82 |     Returns verdict, confidence score, summary, and detailed analysis results.
 83 |     """
 84 |     try:
 85 |         logger.info(f"Analyzing text (length: {len(request.text)}, lang: {request.language})")
 86 |         
 87 |         # Call the analysis engine
 88 |         result = await analysis_engine.process_content(
 89 |             content_type="text",
 90 |             content=request.text,
 91 |             language=request.language or "en"
 92 |         )
 93 |         
 94 |         logger.info(f"Analysis completed: verdict={result['verdict']}, confidence={result['confidence_score']}")
 95 |         
 96 |         # Return the result (already matches LegacyAnalysisResponse structure)
 97 |         return LegacyAnalysisResponse(**result)
 98 |         
 99 |     except Exception as e:
100 |         logger.error(f"Error analyzing text: {e}")
101 |         raise HTTPException(
102 |             status_code=500,
103 |             detail={
104 |                 "error": "Analysis failed",
105 |                 "message": str(e),
106 |                 "type": "internal_error"
107 |             }
108 |         )


--------------------------------------------------------------------------------
/backend/app/services.py:
--------------------------------------------------------------------------------
  1 | import hashlib
  2 | import time
  3 | import random
  4 | from typing import Dict, Any
  5 | from app.models import DetailedAnalysis
  6 | 
  7 | class MockAIServices:
  8 |     """Mock AI services for MVP - provides deterministic responses for demo"""
  9 |     
 10 |     @staticmethod
 11 |     def analyze_text(content: str) -> Dict[str, Any]:
 12 |         """Mock text analysis using content hash for deterministic results"""
 13 |         # Create deterministic hash-based analysis
 14 |         content_hash = hashlib.md5(content.lower().encode()).hexdigest()
 15 |         hash_int = int(content_hash[:8], 16)
 16 |         
 17 |         # Deterministic verdict based on content characteristics
 18 |         if any(keyword in content.lower() for keyword in ['fake', 'false', 'hoax', 'scam']):
 19 |             verdict = "false"
 20 |             confidence = 0.8 + (hash_int % 20) / 100  # 0.8-0.99
 21 |         elif any(keyword in content.lower() for keyword in ['verified', 'official', 'confirmed', 'reuters']):
 22 |             verdict = "true"
 23 |             confidence = 0.75 + (hash_int % 25) / 100  # 0.75-0.99
 24 |         else:
 25 |             verdict = "inconclusive"
 26 |             confidence = 0.4 + (hash_int % 40) / 100  # 0.4-0.79
 27 |         
 28 |         return {
 29 |             "verdict": verdict,
 30 |             "confidence": round(confidence, 2),
 31 |             "summary": f"Text analysis completed. Content appears to be {verdict} based on language patterns and fact-checking.",
 32 |             "evidence": [
 33 |                 "Language pattern analysis completed",
 34 |                 "Cross-referenced with known misinformation patterns",
 35 |                 "Checked against fact-checking databases"
 36 |             ]
 37 |         }
 38 | 
 39 |     @staticmethod
 40 |     def analyze_image(content: str) -> Dict[str, Any]:
 41 |         """Mock image analysis"""
 42 |         # Simulate processing time
 43 |         processing_delay = random.uniform(0.5, 2.0)
 44 |         time.sleep(processing_delay / 10)  # Reduced for MVP
 45 |         
 46 |         # Mock image analysis results
 47 |         return {
 48 |             "verdict": "inconclusive",
 49 |             "confidence": 0.65,
 50 |             "summary": "Image analysis completed. No clear signs of manipulation detected, but verification inconclusive.",
 51 |             "vision_analysis": "Image metadata analyzed, reverse image search performed, manipulation detection algorithms applied."
 52 |         }
 53 | 
 54 |     @staticmethod
 55 |     def analyze_url(content: str) -> Dict[str, Any]:
 56 |         """Mock URL analysis"""
 57 |         # Basic URL credibility assessment
 58 |         trusted_domains = ['bbc.com', 'reuters.com', 'cnn.com', 'pib.gov.in', 'indianexpress.com']
 59 |         suspicious_domains = ['fakenews.com', 'clickbait.net', 'conspiracy.org']
 60 |         
 61 |         if any(domain in content.lower() for domain in trusted_domains):
 62 |             verdict = "true"
 63 |             confidence = 0.90
 64 |             summary = "URL points to a trusted news source with high credibility."
 65 |         elif any(domain in content.lower() for domain in suspicious_domains):
 66 |             verdict = "false" 
 67 |             confidence = 0.85
 68 |             summary = "URL points to a source known for publishing misinformation."
 69 |         else:
 70 |             verdict = "inconclusive"
 71 |             confidence = 0.55
 72 |             summary = "URL credibility could not be definitively determined."
 73 |         
 74 |         return {
 75 |             "verdict": verdict,
 76 |             "confidence": confidence,
 77 |             "summary": summary,
 78 |             "sources": ["Domain reputation database", "Historical fact-check records"]
 79 |         }
 80 | 
 81 | class AnalysisEngine:
 82 |     """Main analysis orchestrator"""
 83 |     
 84 |     def __init__(self):
 85 |         self.ai_services = MockAIServices()
 86 |     
 87 |     def process_content(self, content_type: str, content: str, language: str = "en") -> Dict[str, Any]:
 88 |         """Process content and return analysis results"""
 89 |         start_time = time.time()
 90 |         
 91 |         # Route to appropriate analyzer
 92 |         if content_type == "text":
 93 |             result = self.ai_services.analyze_text(content)
 94 |         elif content_type == "image":
 95 |             result = self.ai_services.analyze_image(content)
 96 |         elif content_type == "url":
 97 |             result = self.ai_services.analyze_url(content)
 98 |         else:
 99 |             result = {
100 |                 "verdict": "inconclusive",
101 |                 "confidence": 0.0,
102 |                 "summary": f"Unsupported content type: {content_type}"
103 |             }
104 |         
105 |         processing_time = round(time.time() - start_time, 2)
106 |         
107 |         # Create detailed analysis object
108 |         detailed_analysis = DetailedAnalysis(
109 |             evidence=result.get("evidence", []),
110 |             sources=result.get("sources", []),
111 |             gemini_analysis=result.get("summary", ""),
112 |             vision_analysis=result.get("vision_analysis")
113 |         )
114 |         
115 |         return {
116 |             "verdict": result["verdict"],
117 |             "confidence_score": result["confidence"],
118 |             "summary": result["summary"],
119 |             "processing_time": processing_time,
120 |             "detailed_analysis": detailed_analysis
121 |         }
122 | 
123 | # Global analysis engine instance
124 | analysis_engine = AnalysisEngine()


--------------------------------------------------------------------------------
/backend/app/services/__init__.py:
--------------------------------------------------------------------------------
 1 | from .text_service import (
 2 |     TextAnalysisService,
 3 |     analyze_text,
 4 |     validate_environment,
 5 |     test_all_apis,
 6 |     get_mock_analysis_result
 7 | )
 8 | 
 9 | __all__ = [
10 |     "TextAnalysisService",
11 |     "analyze_text",
12 |     "validate_environment",
13 |     "test_all_apis",
14 |     "get_mock_analysis_result",
15 | ]
16 | 


--------------------------------------------------------------------------------
/backend/app/services/__pycache__/__init__.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/services/__pycache__/__init__.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/services/__pycache__/__init__.cpython-313.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/services/__pycache__/__init__.cpython-313.pyc


--------------------------------------------------------------------------------
/backend/app/services/__pycache__/analysis_engine.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/services/__pycache__/analysis_engine.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/services/__pycache__/analysis_engine.cpython-313.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/services/__pycache__/analysis_engine.cpython-313.pyc


--------------------------------------------------------------------------------
/backend/app/services/__pycache__/text_service.cpython-311.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/services/__pycache__/text_service.cpython-311.pyc


--------------------------------------------------------------------------------
/backend/app/services/__pycache__/text_service.cpython-313.pyc:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/backend/app/services/__pycache__/text_service.cpython-313.pyc


--------------------------------------------------------------------------------
/backend/app/services/analysis_engine.py:
--------------------------------------------------------------------------------
  1 | import asyncio
  2 | import threading
  3 | from time import time
  4 | from typing import Dict, Any
  5 | from app.models import DetailedAnalysis
  6 | from app.services.text_service import analyze_text, get_mock_analysis_result
  7 | 
  8 | class AnalysisEngine:
  9 |     """Analysis engine with robust async handling and real API integration"""
 10 | 
 11 |     def process_content(self, content_type: str, content: str, language: str = "en") -> Dict[str, Any]:
 12 |         """Process content with real APIs when configured, fallback to mock"""
 13 |         start = time()
 14 | 
 15 |         if content_type == "text":
 16 |             # Try real analysis first, fallback to mock on error
 17 |             try:
 18 |                 results = self._run_async_analysis(content, language)
 19 |             except Exception as e:
 20 |                 print(f"Real API analysis failed: {e}, using mock")
 21 |                 results = get_mock_analysis_result(content)
 22 |         else:
 23 |             # URL/image not implemented yet
 24 |             results = get_mock_analysis_result(content)
 25 | 
 26 |         # Smart aggregation based on real API results
 27 |         verdict, confidence, summary = self._aggregate_results(results)
 28 | 
 29 |         detailed_analysis = DetailedAnalysis(
 30 |             evidence=self._extract_evidence(results),
 31 |             sources=self._extract_sources(results),
 32 |             gemini_analysis=results.get("gemini", {}).get("normalized_claim", content),
 33 |             factcheck_results=results.get("factcheck", {}).get("verdicts", [])
 34 |         )
 35 | 
 36 |         return {
 37 |             "verdict": verdict,
 38 |             "confidence_score": confidence,
 39 |             "summary": summary,
 40 |             "processing_time": round(time() - start, 2),
 41 |             "detailed_analysis": detailed_analysis
 42 |         }
 43 | 
 44 |     def _run_async_analysis(self, content: str, language: str) -> Dict[str, Any]:
 45 |         """Run async analysis in a separate thread to avoid event loop conflicts"""
 46 |         result_container = {"result": None, "error": None}
 47 |         
 48 |         def run_in_thread():
 49 |             try:
 50 |                 # Create new event loop in thread
 51 |                 loop = asyncio.new_event_loop()
 52 |                 asyncio.set_event_loop(loop)
 53 |                 try:
 54 |                     result_container["result"] = loop.run_until_complete(
 55 |                         analyze_text(content, language)
 56 |                     )
 57 |                 finally:
 58 |                     loop.close()
 59 |             except Exception as e:
 60 |                 result_container["error"] = e
 61 |         
 62 |         # Run in separate thread
 63 |         thread = threading.Thread(target=run_in_thread)
 64 |         thread.start()
 65 |         thread.join(timeout=30)  # 30 second timeout
 66 |         
 67 |         if result_container["error"]:
 68 |             raise result_container["error"]
 69 |         if result_container["result"] is None:
 70 |             raise Exception("Analysis timed out")
 71 |             
 72 |         return result_container["result"]
 73 | 
 74 |     def _aggregate_results(self, results: Dict[str, Any]) -> tuple[str, float, str]:
 75 |         """Smart aggregation of API results"""
 76 |         # Check if this is mock data
 77 |         if results.get("metadata", {}).get("mock_data"):
 78 |             return "inconclusive", 0.65, "Mock analysis - configure API keys for real results"
 79 |         
 80 |         # Real API result processing
 81 |         verdict = "inconclusive"
 82 |         confidence = 0.5
 83 |         summary = "Analysis completed"
 84 | 
 85 |         try:
 86 |             # Priority 1: Fact-check results
 87 |             factcheck = results.get("factcheck", {})
 88 |             verdicts = factcheck.get("verdicts", [])
 89 |             
 90 |             for fact_verdict in verdicts:
 91 |                 if fact_verdict.get("verdict") == "FALSE":
 92 |                     return "false", 0.95, f"Fact-check by {fact_verdict.get('source', 'fact-checker')} confirms this is FALSE"
 93 |                 elif fact_verdict.get("verdict") == "TRUE":
 94 |                     return "true", 0.90, f"Fact-check by {fact_verdict.get('source', 'fact-checker')} confirms this is TRUE"
 95 |             
 96 |             # Priority 2: Gemini analysis
 97 |             gemini = results.get("gemini", {})
 98 |             if not gemini.get("mock"):
 99 |                 gemini_confidence = gemini.get("confidence", 0.5)
100 |                 if gemini_confidence >= 0.8:
101 |                     confidence = 0.80
102 |                     summary = "High-confidence AI analysis suggests verification needed"
103 |             
104 |             # Priority 3: Toxicity detection
105 |             perspective = results.get("perspective", {})
106 |             if not perspective.get("mock"):
107 |                 toxicity = perspective.get("toxicity_score", 0.0)
108 |                 if toxicity >= 0.7:
109 |                     verdict = "false"
110 |                     confidence = 0.85
111 |                     summary = "High toxicity detected - likely misinformation"
112 | 
113 |         except Exception as e:
114 |             print(f"Error in aggregation: {e}")
115 |         
116 |         return verdict, round(confidence, 2), summary
117 | 
118 |     def _extract_evidence(self, results: Dict[str, Any]) -> list[str]:
119 |         """Extract evidence from results"""
120 |         evidence = []
121 |         
122 |         if results.get("metadata", {}).get("mock_data"):
123 |             evidence.append("Mock analysis performed")
124 |         else:
125 |             factcheck = results.get("factcheck", {})
126 |             if factcheck.get("fact_checks_found", 0) > 0:
127 |                 evidence.append(f"Found {factcheck['fact_checks_found']} fact-check(s)")
128 |             
129 |             perspective = results.get("perspective", {})
130 |             if perspective.get("toxicity_score", 0) > 0.3:
131 |                 evidence.append(f"Toxicity: {perspective['toxicity_score']:.2f}")
132 |         
133 |         return evidence or ["Analysis completed"]
134 | 
135 |     def _extract_sources(self, results: Dict[str, Any]) -> list[str]:
136 |         """Extract sources from results"""
137 |         sources = []
138 |         
139 |         if results.get("metadata", {}).get("mock_data"):
140 |             sources.append("Mock Data Service")
141 |         else:
142 |             if results.get("gemini", {}).get("status") == "success":
143 |                 sources.append("Google Gemini AI")
144 |             if results.get("factcheck", {}).get("fact_checks_found", 0) > 0:
145 |                 sources.append("Google Fact Check API")
146 |             if results.get("perspective", {}).get("status") == "success":
147 |                 sources.append("Google Perspective API")
148 |         
149 |         return sources or ["TruthLens Engine"]
150 | 
151 | # Global instance
152 | analysis_engine = AnalysisEngine()
153 | 


--------------------------------------------------------------------------------
/backend/app/services/text_service.py:
--------------------------------------------------------------------------------
  1 | """
  2 | TruthLens Text Analysis Service (async/httpx version)
  3 | 
  4 | Fully async implementation using httpx.AsyncClient, backoff retries,
  5 | normalized fact-check ratings, expanded Perspective attributes, and
  6 | clean client lifecycle management with Educational Analysis System.
  7 | 
  8 | Place in: backend/app/services/text_service.py
  9 | """
 10 | 
 11 | import os
 12 | import json
 13 | import asyncio
 14 | import logging
 15 | import httpx
 16 | from dotenv import load_dotenv
 17 | from typing import Dict, List, Optional, Any, Tuple
 18 | from dataclasses import dataclass
 19 | from enum import Enum
 20 | import time
 21 | import re
 22 | from urllib.parse import quote_plus
 23 | import backoff
 24 | 
 25 | # Load environment variables
 26 | load_dotenv()
 27 | 
 28 | # Configure logging
 29 | logging.basicConfig(level=logging.INFO)
 30 | logger = logging.getLogger(__name__)
 31 | 
 32 | # Configuration constants
 33 | DEFAULT_TIMEOUT = 30
 34 | MAX_RETRIES = 3
 35 | DEFAULT_LANGUAGE = "en"
 36 | 
 37 | # Educational Analysis System Prompt
 38 | EDUCATIONAL_SYSTEM_PROMPT = """
 39 | You are TruthLens educational misinformation analyzer for Indian users.
 40 | 
 41 | For ANY claim submitted, respond with exactly 4 educational sections:
 42 | 
 43 | 🧠 WHY THIS IS MISINFORMATION:
 44 | - Logical breakdown (science/economics/politics why it's wrong)  
 45 | - How it spreads (WhatsApp forwards, fake sites, manipulated videos)
 46 | - Use bullet points, clear practical reasoning
 47 | 
 48 | 🎓 WHAT INDIANS SHOULD KNOW:
 49 | - Reference Indian institutions (ICMR, CDSCO, RBI, PIB, Election Commission)
 50 | - Use simple English + Hindi analogies  
 51 | - Show how Indian law/policy protects citizens
 52 | 
 53 | 🔍 HOW TO SPOT SIMILAR CLAIMS:
 54 | - Pattern recognition (fear language, "they don't want you to know")
 55 | - Checklist: Who is source? PIB vs forwarded? Emotionally manipulative?
 56 | - Red flags specific to Indian context
 57 | 
 58 | 🌟 THE REAL STORY:
 59 | - Evidence-based truth with Indian/global sources
 60 | - Historical context (past WhatsApp lynchings, COVID scams, political propaganda)  
 61 | - Balanced perspective, not just "false"
 62 | 
 63 | Always be simple, logical, unbiased, pragmatic, culturally sensitive for Indian users.
 64 | Respond in JSON format with these 4 sections.
 65 | """
 66 | 
 67 | # API Configuration from environment variables
 68 | class APIConfig:
 69 |     """Centralized API configuration management"""
 70 |     GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
 71 |     CLAIMBUSTER_API_KEY = None
 72 |     GOOGLE_FACTCHECK_API_KEY = os.getenv("GOOGLE_FACTCHECK_API_KEY")
 73 |     PERSPECTIVE_API_KEY = None
 74 |     WIKIPEDIA_API_KEY = os.getenv("WIKIPEDIA_API_KEY")
 75 |     
 76 |     # Multiple possible endpoints for ClaimBuster
 77 |     CLAIMBUSTER_ENDPOINTS = []
 78 | 
 79 |     # API Endpoints
 80 |     GEMINI_ENDPOINT = "https://generativelanguage.googleapis.com/v1/models/gemini-1.5-flash:generateContent"
 81 |     CLAIMBUSTER_ENDPOINT = "https://idir.uta.edu/claimbuster/api/v2/score/json"
 82 |     FACTCHECK_ENDPOINT = "https://factchecktools.googleapis.com/v1alpha1/claims:search"
 83 |     PERSPECTIVE_ENDPOINT = "https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze"
 84 |     WIKIPEDIA_API_ENDPOINT = "https://en.wikipedia.org/api/rest_v1/page/summary"
 85 |     WIKIDATA_ENDPOINT = "https://www.wikidata.org/w/api.php"
 86 | 
 87 | @dataclass
 88 | class AnalysisResult:
 89 |     """Structured result container for API responses"""
 90 |     status: str
 91 |     data: Dict[str, Any]
 92 |     error: Optional[str] = None
 93 |     timestamp: float = None
 94 |     processing_time: float = None
 95 | 
 96 |     def __post_init__(self):
 97 |         if self.timestamp is None:
 98 |             self.timestamp = time.time()
 99 | 
100 | class AnalysisStatus(Enum):
101 |     """Status codes for analysis results"""
102 |     SUCCESS = "success"
103 |     ERROR = "error" 
104 |     TIMEOUT = "timeout"
105 |     NOT_IMPLEMENTED = "not_implemented"
106 |     RATE_LIMITED = "rate_limited"
107 | 
108 | # ---------------------------
109 | # Error classes
110 | # ---------------------------
111 | class TextAnalysisError(Exception):
112 |     """Custom exception for text analysis errors"""
113 |     def __init__(self, message: str, api_name: str = None, error_code: str = None):
114 |         self.message = message
115 |         self.api_name = api_name
116 |         self.error_code = error_code
117 |         super().__init__(self.message)
118 | 
119 | class APIRateLimitError(TextAnalysisError):
120 |     """Raised when API rate limits are exceeded"""
121 |     pass
122 | 
123 | class APITimeoutError(TextAnalysisError):
124 |     """Raised when API requests timeout"""
125 |     pass
126 | 
127 | class APIConfigurationError(TextAnalysisError):
128 |     """Raised when API configuration is invalid or missing"""
129 |     pass
130 | 
131 | # ---------------------------
132 | # TextAnalysisService
133 | # ---------------------------
134 | class TextAnalysisService:
135 |     """Main service class for text analysis operations (async)"""
136 |     
137 |     def __init__(self):
138 |         self.client: Optional[httpx.AsyncClient] = None
139 |         # You can toggle debug / verbose mode if needed
140 |         self.debug = False
141 | 
142 |     async def _get_client(self) -> httpx.AsyncClient:
143 |         """Get or create async HTTP client"""
144 |         if self.client is None:
145 |             self.client = httpx.AsyncClient(
146 |                 timeout=httpx.Timeout(DEFAULT_TIMEOUT),
147 |                 headers={'User-Agent': 'TruthLens/1.0.0 (Misinformation Detection Platform)'}
148 |             )
149 |         return self.client
150 | 
151 |     async def close(self) -> None:
152 |         """Gracefully close the httpx client"""
153 |         if self.client is not None:
154 |             try:
155 |                 await self.client.aclose()
156 |             except Exception as e:
157 |                 logger.warning(f"Error closing httpx client: {e}")
158 |             finally:
159 |                 self.client = None
160 | 
161 |     def _mask_content_for_logging(self, content: str, max_chars: int = 20) -> str:
162 |         """Mask content for privacy-safe logging"""
163 |         if not content:
164 |             return "Content empty"
165 |         if len(content) <= max_chars:
166 |             return f"Content masked for privacy (length: {len(content)})"
167 |         return f"{content[:max_chars]}... [Content masked for privacy] (length: {len(content)})"
168 | 
169 |     # ---------------------------
170 |     # Main orchestrator
171 |     # ---------------------------
172 |     async def analyze_text(self, content: str, language: str = DEFAULT_LANGUAGE) -> Dict[str, Any]:
173 |         """
174 |         Main orchestrator function for text analysis workflow.
175 |         """
176 |         start_time = time.time()
177 | 
178 |         # Privacy-safe logging
179 |         masked_content = self._mask_content_for_logging(content)
180 |         logger.info(f"Starting text analysis for: {masked_content}")
181 | 
182 |         # Initialize result structure
183 |         results = {
184 |             "input": {
185 |                 "content_length": len(content),
186 |                 "language": language,
187 |                 "timestamp": start_time
188 |             },
189 |             "gemini": {},
190 |             "claimbuster": {},
191 |             "factcheck": {},
192 |             "wikipedia": {},
193 |             "perspective": {},
194 |             "educational": {},
195 |             "fallback": {}
196 |         }
197 | 
198 |         try:
199 |             # Step 1: Gemini
200 |             logger.info("Step 1/7: Calling Gemini API for text normalization...")
201 |             gemini_result = await self.call_gemini(content, language)
202 |             results["gemini"] = gemini_result.data
203 | 
204 |             normalized_claim = self._extract_normalized_claim(gemini_result.data) or content
205 | 
206 |             # # Step 2: ClaimBuster
207 |             # logger.info("Step 2/7: Calling ClaimBuster API for check-worthiness...")
208 |             # claimbuster_result = await self.call_claimbuster(normalized_claim)
209 |             # results["claimbuster"] = claimbuster_result.data
210 | 
211 |             # Step 3: Google Fact Check
212 |             logger.info("Step 3/7: Calling Google Fact Check API...")
213 |             factcheck_result = await self.call_google_factcheck(normalized_claim, language)
214 |             results["factcheck"] = factcheck_result.data
215 | 
216 |             # Step 4: Wikipedia
217 |             logger.info("Step 4/7: Calling Wikipedia APIs for entity verification...")
218 |             entities = self._extract_entities(gemini_result.data)
219 |             wikipedia_result = await self.call_wikipedia_lookup(entities)
220 |             results["wikipedia"] = wikipedia_result.data
221 | 
222 |             # Step 5: Perspective
223 |             logger.info("Step 5/7: Calling Perspective API for toxicity detection...")
224 |             perspective_result = await self.call_perspective_api(content)
225 |             results["perspective"] = perspective_result.data
226 | 
227 |             # Step 6: Educational Analysis  
228 |             logger.info("Step 6/7: Generating educational analysis...")
229 |             educational_result = await self.call_educational_analysis(content, results["factcheck"], language)
230 |             results["educational"] = educational_result.data
231 | 
232 |             # Step 7: Fallback
233 |             logger.info("Step 7/7: Initializing fallback API stubs...")
234 |             results["fallback"] = await self._initialize_fallback_apis(normalized_claim)
235 | 
236 |         except Exception as e:
237 |             logger.error(f"Critical error in analysis pipeline: {e}")
238 |             results["pipeline_error"] = {
239 |                 "error": True,
240 |                 "message": str(e),
241 |                 "timestamp": time.time()
242 |             }
243 | 
244 |         # Add processing metadata
245 |         results["metadata"] = {
246 |             "total_processing_time": time.time() - start_time,
247 |             "version": "1.0.0",
248 |             "apis_called": len([k for k, v in results.items() if isinstance(v, dict) and v.get("status") == "success"])
249 |         }
250 | 
251 |         logger.info(f"Text analysis completed in {results['metadata']['total_processing_time']:.2f}s")
252 |         return results
253 | 
254 |     # ---------------------------
255 |     # Gemini integration
256 |     # ---------------------------
257 |     @backoff.on_exception(backoff.expo, httpx.RequestError, max_tries=MAX_RETRIES)
258 |     async def call_gemini(self, content: str, language: str = "en") -> AnalysisResult:
259 |         """
260 |         Integrates with Google's Gemini API for claim normalization and entity extraction.
261 |         Returns AnalysisResult with normalized_claim, entities, claim_type, confidence.
262 |         """
263 |         start_time = time.time()
264 | 
265 |         if not APIConfig.GEMINI_API_KEY:
266 |             logger.warning("Gemini API key not configured; returning mock response.")
267 |             return AnalysisResult(
268 |                 status=AnalysisStatus.SUCCESS.value,
269 |                 data={
270 |                     "status": "success",
271 |                     "normalized_claim": content,
272 |                     "entities": [],
273 |                     "claim_type": "unknown",
274 |                     "confidence": 0.5,
275 |                     "mock": True
276 |                 },
277 |                 processing_time=time.time() - start_time
278 |             )
279 | 
280 |         try:
281 |             client = await self._get_client()
282 | 
283 |             prompt = (
284 |                 f"Analyze this text for misinformation detection:\n\n"
285 |                 f'Text: "{content}"\n'
286 |                 f"Language: {language}\n\n"
287 |                 "Please provide:\n"
288 |                 "1. A normalized, clear version of the main claim(s)\n"
289 |                 "2. Key entities mentioned (people, places, organizations, concepts)\n"
290 |                 "3. The type of claim (political, medical, scientific, etc.)\n"
291 |                 "4. Confidence level in your analysis (0-1)\n\n"
292 |                 "Respond in JSON format only."
293 |             )
294 | 
295 |             payload = {
296 |                 "contents": [{"parts": [{"text": prompt}]}],
297 |                 "generationConfig": {"temperature": 0.1, "maxOutputTokens": 1000}
298 |             }
299 | 
300 |             url = f"{APIConfig.GEMINI_ENDPOINT}?key={APIConfig.GEMINI_API_KEY}"
301 |             headers = {"Content-Type": "application/json"}
302 |             response = await client.post(url, json=payload, headers=headers)
303 | 
304 |             if response.status_code == 200:
305 |                 result = response.json()
306 |                 try:
307 |                     generated_text = (
308 |                         result.get("candidates", [{}])[0]
309 |                         .get("content", {})
310 |                         .get("parts", [{}])[0]
311 |                         .get("text", "")
312 |                     )
313 |                     cleaned_text = self._strip_markdown_fences(generated_text)
314 |                     parsed_data = self._parse_gemini_json(cleaned_text) or {}
315 | 
316 |                     return AnalysisResult(
317 |                         status=AnalysisStatus.SUCCESS.value,
318 |                         data={
319 |                             "status": "success",
320 |                             "normalized_claim": parsed_data.get("normalized_claim", content),
321 |                             "entities": parsed_data.get("entities", []),
322 |                             "claim_type": parsed_data.get("claim_type", "unknown"),
323 |                             "confidence": parsed_data.get("confidence", 0.5),
324 |                             "raw_response": generated_text,
325 |                         },
326 |                         processing_time=time.time() - start_time
327 |                     )
328 |                 except Exception as e:
329 |                     logger.error(f"Failed parsing Gemini response: {e}")
330 |                     return AnalysisResult(
331 |                         status=AnalysisStatus.ERROR.value,
332 |                         data={"error": True, "message": f"Failed to parse Gemini response: {e}"},
333 |                         error=str(e)
334 |                     )
335 |             else:
336 |                 return AnalysisResult(
337 |                     status=AnalysisStatus.ERROR.value,
338 |                     data={"error": True, "message": f"Gemini API HTTP {response.status_code}"},
339 |                     error=f"HTTP {response.status_code}"
340 |                 )
341 | 
342 |         except httpx.TimeoutException:
343 |             return AnalysisResult(
344 |                 status=AnalysisStatus.TIMEOUT.value,
345 |                 data={"error": True, "message": "Gemini API timeout"},
346 |                 error="Request timeout"
347 |             )
348 |         except Exception as e:
349 |             logger.error(f"Gemini API error: {e}")
350 |             return AnalysisResult(
351 |                 status=AnalysisStatus.ERROR.value,
352 |                 data={"error": True, "message": str(e)},
353 |                 error=str(e)
354 |             )
355 | 
356 |     # ---------------------------
357 |     # Educational Analysis Integration
358 |     # ---------------------------
359 |     @backoff.on_exception(backoff.expo, httpx.RequestError, max_tries=MAX_RETRIES)
360 |     async def call_educational_analysis(self, content: str, factcheck_data: Dict, language: str = "en") -> AnalysisResult:
361 |         """Generate educational analysis using Gemini with comprehensive Indian context"""
362 |         start_time = time.time()
363 |         
364 |         if not APIConfig.GEMINI_API_KEY:
365 |             return AnalysisResult(
366 |                 status=AnalysisStatus.SUCCESS.value,
367 |                 data={
368 |                     "misinformation_analysis": "Mock educational analysis - logical breakdown needed",
369 |                     "indian_context": "Mock Indian context - reference ICMR, PIB, RBI institutions", 
370 |                     "pattern_recognition": "Mock pattern recognition - look for fear language and forwarded messages",
371 |                     "real_story": "Mock real story - evidence-based truth with Indian sources",
372 |                     "mock": True
373 |                 },
374 |                 processing_time=time.time() - start_time
375 |             )
376 |         
377 |         try:
378 |             client = await self._get_client()
379 |             
380 |             # Build context from fact-check results
381 |             factcheck_context = ""
382 |             if factcheck_data.get("verdicts"):
383 |                 factcheck_context = f"Fact-check results found: {len(factcheck_data['verdicts'])} sources including "
384 |                 sources = [v.get("source", "Unknown") for v in factcheck_data["verdicts"][:3]]
385 |                 factcheck_context += ", ".join(sources)
386 |             
387 |             educational_prompt = f"""
388 |             {EDUCATIONAL_SYSTEM_PROMPT}
389 |             
390 |             Analyze this claim for Indian users: "{content}"
391 |             
392 |             Context from fact-checkers: {factcheck_context}
393 |             
394 |             Provide educational analysis in this JSON format:
395 |             {{
396 |                 "misinformation_analysis": "Logical breakdown of why this is false and how it spreads",
397 |                 "indian_context": "What Indians should know - reference ICMR, PIB, RBI, Election Commission",  
398 |                 "pattern_recognition": "How to spot similar claims - red flags for Indian users",
399 |                 "real_story": "Evidence-based truth with Indian sources and historical context"
400 |             }}
401 |             """
402 |             
403 |             payload = {
404 |                 "contents": [{"parts": [{"text": educational_prompt}]}],
405 |                 "generationConfig": {"temperature": 0.3, "maxOutputTokens": 2000}
406 |             }
407 |             
408 |             url = f"{APIConfig.GEMINI_ENDPOINT}?key={APIConfig.GEMINI_API_KEY}"
409 |             response = await client.post(url, json=payload, headers={"Content-Type": "application/json"})
410 |             
411 |             if response.status_code == 200:
412 |                 result = response.json()
413 |                 generated_text = (
414 |                     result.get("candidates", [{}])[0]
415 |                     .get("content", {})
416 |                     .get("parts", [{}])[0]
417 |                     .get("text", "")
418 |                 )
419 |                 
420 |                 cleaned_text = self._strip_markdown_fences(generated_text)
421 |                 educational_data = self._parse_gemini_json(cleaned_text) or {}
422 |                 
423 |                 return AnalysisResult(
424 |                     status=AnalysisStatus.SUCCESS.value,
425 |                     data={
426 |                         "status": "success",
427 |                         "misinformation_analysis": educational_data.get("misinformation_analysis", "Analysis pending"),
428 |                         "indian_context": educational_data.get("indian_context", "Context pending"),
429 |                         "pattern_recognition": educational_data.get("pattern_recognition", "Pattern analysis pending"), 
430 |                         "real_story": educational_data.get("real_story", "Real story pending"),
431 |                         "raw_response": generated_text
432 |                     },
433 |                     processing_time=time.time() - start_time
434 |                 )
435 |             else:
436 |                 return AnalysisResult(
437 |                     status=AnalysisStatus.ERROR.value,
438 |                     data={"error": True, "message": f"Educational analysis failed: HTTP {response.status_code}"}
439 |                 )
440 |                 
441 |         except Exception as e:
442 |             logger.error(f"Educational analysis error: {e}")
443 |             return AnalysisResult(
444 |                 status=AnalysisStatus.ERROR.value,
445 |                 data={"error": True, "message": str(e)}
446 |             )
447 | 
448 |     def _strip_markdown_fences(self, text: str) -> str:
449 |         """Strip markdown code fences from Gemini response"""
450 |         if not text:
451 |             return ""
452 |         patterns = [r'``````', r'``````']
453 |         for pattern in patterns:
454 |             match = re.search(pattern, text, re.DOTALL | re.IGNORECASE)
455 |             if match:
456 |                 return match.group(1).strip()
457 |         return text.strip()
458 | 
459 |     def _parse_gemini_json(self, text: str) -> Optional[Dict[str, Any]]:
460 |         """Parse JSON from Gemini response with fallback handling"""
461 |         if not text:
462 |             return None
463 |         try:
464 |             return json.loads(text)
465 |         except json.JSONDecodeError:
466 |             json_match = re.search(r'\{.*\}', text, re.DOTALL)
467 |             if json_match:
468 |                 try:
469 |                     return json.loads(json_match.group())
470 |                 except json.JSONDecodeError:
471 |                     return None
472 |         return None
473 | 
474 |     # ---------------------------
475 |     # ClaimBuster integration
476 |     # ---------------------------
477 |     @backoff.on_exception(backoff.expo, httpx.RequestError, max_tries=MAX_RETRIES)
478 |     async def call_claimbuster(self, content: str) -> AnalysisResult:
479 |         start_time = time.time()
480 |         if not APIConfig.CLAIMBUSTER_API_KEY:
481 |             return AnalysisResult(status=AnalysisStatus.SUCCESS.value, data={"check_worthiness_score": 0.7, "classification": "mock"})
482 |         try:
483 |             client = await self._get_client()
484 |             success, last_error = None, None
485 |             for endpoint in APIConfig.CLAIMBUSTER_ENDPOINTS:
486 |                 try:
487 |                     response = await client.post(
488 |                         endpoint,
489 |                         json={"input_text": content},
490 |                         headers={"Content-Type": "application/json", "x-api-key": APIConfig.CLAIMBUSTER_API_KEY}
491 |                     )
492 |                     if response.status_code == 200:
493 |                         success = response.json()
494 |                         break
495 |                     else:
496 |                         last_error = f"{endpoint} -> HTTP {response.status_code}"
497 |                 except Exception as e:
498 |                     last_error = str(e)
499 | 
500 |             if success:
501 |                 score = self._extract_claimbuster_score(success)
502 |                 if score >= 0.8:
503 |                     classification = "highly-check-worthy"
504 |                 elif score >= 0.6:
505 |                     classification = "check-worthy"
506 |                 elif score >= 0.4:
507 |                     classification = "potentially-check-worthy"
508 |                 else:
509 |                     classification = "not-check-worthy"
510 |                 return AnalysisResult(status=AnalysisStatus.SUCCESS.value, data={"check_worthiness_score": score, "classification": classification, "raw_response": success}, processing_time=time.time() - start_time)
511 |             else:
512 |                 return AnalysisResult(status=AnalysisStatus.ERROR.value, data={"error": True, "message": last_error})
513 |         except Exception as e:
514 |             return AnalysisResult(status=AnalysisStatus.ERROR.value, data={"error": True, "message": str(e)})
515 | 
516 |     def _extract_claimbuster_score(self, result: Any) -> float:
517 |         try:
518 |             if isinstance(result, dict) and "score" in result:
519 |                 return float(result["score"])
520 |             if isinstance(result, list) and len(result) > 0 and "score" in result[0]:
521 |                 return float(result[0]["score"])
522 |             return 0.0
523 |         except Exception:
524 |             return 0.0
525 | 
526 |     # ---------------------------
527 |     # Google Fact Check integration
528 |     # ---------------------------
529 |     @backoff.on_exception(backoff.expo, httpx.RequestError, max_tries=MAX_RETRIES)
530 |     async def call_google_factcheck(self, query: str, language: str = "en") -> AnalysisResult:
531 |         """Search Google Fact Check Tools for existing fact-checks and normalize ratings"""
532 |         start_time = time.time()
533 | 
534 |         if not APIConfig.GOOGLE_FACTCHECK_API_KEY:
535 |             logger.warning("Google Fact Check API key not configured; returning mock response.")
536 |             return AnalysisResult(
537 |                 status=AnalysisStatus.SUCCESS.value,
538 |                 data={
539 |                     "status": "success",
540 |                     "fact_checks_found": 1,
541 |                     "verdicts": [{
542 |                         "verdict": "FALSE",
543 |                         "original_rating": "Mock: FALSE",
544 |                         "source": "Mock Fact Checker",
545 |                         "confidence": 0.8,
546 |                         "summary": "Mock fact-check result"
547 |                     }],
548 |                     "mock": True
549 |                 },
550 |                 processing_time=time.time() - start_time
551 |             )
552 | 
553 |         try:
554 |             client = await self._get_client()
555 |             params = {"key": APIConfig.GOOGLE_FACTCHECK_API_KEY, "query": query, "languageCode": language, "pageSize": 10}
556 |             response = await client.get(APIConfig.FACTCHECK_ENDPOINT, params=params)
557 | 
558 |             if response.status_code == 200:
559 |                 result = response.json()
560 |                 fact_checks = result.get("claims", [])
561 |                 verdicts = []
562 |                 for claim in fact_checks:
563 |                     for review in claim.get("claimReview", []):
564 |                         original_rating = review.get("textualRating", "") or review.get("textualRating", "UNKNOWN")
565 |                         normalized = self._normalize_fact_check_rating(original_rating)
566 |                         verdicts.append({
567 |                             "verdict": normalized,
568 |                             "original_rating": original_rating,
569 |                             "source": review.get("publisher", {}).get("name", "Unknown"),
570 |                             "url": review.get("url", ""),
571 |                             "date": review.get("reviewDate", ""),
572 |                             "summary": claim.get("text", "")
573 |                         })
574 |                 return AnalysisResult(
575 |                     status=AnalysisStatus.SUCCESS.value,
576 |                     data={
577 |                         "status": "success",
578 |                         "fact_checks_found": len(fact_checks),
579 |                         "verdicts": verdicts,
580 |                         "query_used": query,
581 |                         "raw_response": result
582 |                     },
583 |                     processing_time=time.time() - start_time
584 |                 )
585 |             else:
586 |                 return AnalysisResult(
587 |                     status=AnalysisStatus.ERROR.value,
588 |                     data={"error": True, "message": f"Fact Check API HTTP {response.status_code}"},
589 |                     error=f"HTTP {response.status_code}"
590 |                 )
591 |         except httpx.TimeoutException:
592 |             return AnalysisResult(
593 |                 status=AnalysisStatus.TIMEOUT.value,
594 |                 data={"error": True, "message": "Fact Check API timeout"},
595 |                 error="Request timeout"
596 |             )
597 |         except Exception as e:
598 |             logger.error(f"Google Fact Check API error: {e}")
599 |             return AnalysisResult(
600 |                 status=AnalysisStatus.ERROR.value,
601 |                 data={"error": True, "message": str(e)},
602 |                 error=str(e)
603 |             )
604 | 
605 |     def _normalize_fact_check_rating(self, rating: str) -> str:
606 |         """Normalize inconsistent fact-check ratings to standard format"""
607 |         if not rating:
608 |             return "UNKNOWN"
609 |         rating_lower = rating.lower().strip()
610 |         false_indicators = ["false", "fake", "pants on fire", "incorrect", "wrong", "debunked", "no evidence", "no-evidence"]
611 |         true_indicators = ["true", "correct", "accurate", "verified", "confirmed", "mostly true", "mostly-true"]
612 |         mixed_indicators = ["mixed", "partly true", "partly false", "half true", "partially true", "needs context", "misleading"]
613 |         for indicator in false_indicators:
614 |             if indicator in rating_lower:
615 |                 return "FALSE"
616 |         for indicator in true_indicators:
617 |             if indicator in rating_lower:
618 |                 return "TRUE"
619 |         for indicator in mixed_indicators:
620 |             if indicator in rating_lower:
621 |                 return "MIXED"
622 |         return "UNKNOWN"
623 | 
624 |     # ---------------------------
625 |     # Wikipedia lookup (async)
626 |     # ---------------------------
627 |     async def call_wikipedia_lookup(self, entities: List[str]) -> AnalysisResult:
628 |         """
629 |         Queries Wikipedia for entity summaries (async, limited to first 5 entities).
630 |         """
631 |         start_time = time.time()
632 |         if not entities:
633 |             return AnalysisResult(status=AnalysisStatus.SUCCESS.value, data={"status": "success", "entities_checked": 0, "results": [], "message": "No entities to lookup"}, processing_time=time.time() - start_time)
634 | 
635 |         try:
636 |             client = await self._get_client()
637 |             entity_results = []
638 |             
639 |             # Add Wikipedia API authentication headers
640 |             headers = {}
641 |             if APIConfig.WIKIPEDIA_API_KEY:
642 |                 headers["Authorization"] = f"Bearer {APIConfig.WIKIPEDIA_API_KEY}"
643 |             
644 |             # limit to first 5 to avoid rate limits
645 |             for entity in entities[:5]:
646 |                 try:
647 |                     clean_entity = quote_plus(entity.strip())
648 |                     url = f"{APIConfig.WIKIPEDIA_API_ENDPOINT}/{clean_entity}"
649 |                     response = await client.get(url, headers=headers)
650 |                     if response.status_code == 200:
651 |                         wiki_data = response.json()
652 |                         entity_results.append({
653 |                             "entity": entity,
654 |                             "found": True,
655 |                             "title": wiki_data.get("title", ""),
656 |                             "summary": wiki_data.get("extract", "")[:500],
657 |                             "url": wiki_data.get("content_urls", {}).get("desktop", {}).get("page", "")
658 |                         })
659 |                     else:
660 |                         entity_results.append({"entity": entity, "found": False, "message": "Not found in Wikipedia"})
661 |                     await asyncio.sleep(0.1)
662 |                 except Exception as e:
663 |                     logger.warning(f"Error looking up entity '{entity}': {e}")
664 |                     entity_results.append({"entity": entity, "found": False, "error": str(e)})
665 |             return AnalysisResult(status=AnalysisStatus.SUCCESS.value, data={"status": "success", "entities_checked": len(entities), "results": entity_results, "found_count": len([r for r in entity_results if r.get("found")])}, processing_time=time.time() - start_time)
666 |         except Exception as e:
667 |             logger.error(f"Wikipedia lookup error: {e}")
668 |             return AnalysisResult(status=AnalysisStatus.ERROR.value, data={"error": True, "message": str(e)}, error=str(e))
669 | 
670 |     # ---------------------------
671 |     # Perspective API (expanded attributes)
672 |     # ---------------------------
673 |     @backoff.on_exception(backoff.expo, httpx.RequestError, max_tries=MAX_RETRIES)
674 |     async def call_perspective_api(self, content: str) -> AnalysisResult:
675 |         """
676 |         Integrates with Google's Perspective API for toxicity and manipulation detection.
677 |         Requests expanded attributes including SPAM, SEXUALLY_EXPLICIT, FLIRTATION.
678 |         """
679 |         start_time = time.time()
680 |         if not APIConfig.PERSPECTIVE_API_KEY:
681 |             logger.warning("Perspective API key not configured; returning mock response.")
682 |             return AnalysisResult(
683 |                 status=AnalysisStatus.SUCCESS.value,
684 |                 data={
685 |                     "status": "success",
686 |                     "toxicity_score": 0.2,
687 |                     "severe_toxicity": 0.1,
688 |                     "identity_attack": 0.0,
689 |                     "insult_score": 0.0,
690 |                     "spam_score": 0.0,
691 |                     "sexually_explicit": 0.0,
692 |                     "flirtation": 0.0,
693 |                     "classification": "low_risk",
694 |                     "mock": True
695 |                 },
696 |                 processing_time=time.time() - start_time
697 |             )
698 | 
699 |         try:
700 |             client = await self._get_client()
701 |             payload = {
702 |                 "comment": {"text": content},
703 |                 "requestedAttributes": {
704 |                     "TOXICITY": {},
705 |                     "SEVERE_TOXICITY": {},
706 |                     "IDENTITY_ATTACK": {},
707 |                     "INSULT": {},
708 |                     "PROFANITY": {},
709 |                     "THREAT": {},
710 |                     "SPAM": {},
711 |                     "SEXUALLY_EXPLICIT": {},
712 |                     "FLIRTATION": {}
713 |                 },
714 |                 "languages": ["en"]
715 |             }
716 |             url = f"{APIConfig.PERSPECTIVE_ENDPOINT}?key={APIConfig.PERSPECTIVE_API_KEY}"
717 |             response = await client.post(url, json=payload)
718 | 
719 |             if response.status_code == 200:
720 |                 result = response.json()
721 |                 scores = result.get("attributeScores", {})
722 | 
723 |                 def safe_score(attr: str) -> float:
724 |                     return float(scores.get(attr, {}).get("summaryScore", {}).get("value", 0.0) or 0.0)
725 | 
726 |                 toxicity_score = safe_score("TOXICITY")
727 |                 severe_toxicity = safe_score("SEVERE_TOXICITY")
728 |                 identity_attack = safe_score("IDENTITY_ATTACK")
729 |                 insult_score = safe_score("INSULT")
730 |                 profanity_score = safe_score("PROFANITY")
731 |                 threat_score = safe_score("THREAT")
732 |                 spam_score = safe_score("SPAM")
733 |                 sexually_explicit = safe_score("SEXUALLY_EXPLICIT")
734 |                 flirtation = safe_score("FLIRTATION")
735 | 
736 |                 all_scores = [toxicity_score, severe_toxicity, identity_attack, insult_score, spam_score, profanity_score, threat_score]
737 |                 max_score = max(all_scores) if all_scores else 0.0
738 | 
739 |                 if max_score >= 0.8:
740 |                     classification = "high_risk"
741 |                 elif max_score >= 0.5:
742 |                     classification = "medium_risk"
743 |                 elif max_score >= 0.3:
744 |                     classification = "low_risk"
745 |                 else:
746 |                     classification = "minimal_risk"
747 | 
748 |                 return AnalysisResult(
749 |                     status=AnalysisStatus.SUCCESS.value,
750 |                     data={
751 |                         "status": "success",
752 |                         "toxicity_score": round(toxicity_score, 3),
753 |                         "severe_toxicity": round(severe_toxicity, 3),
754 |                         "identity_attack": round(identity_attack, 3),
755 |                         "insult_score": round(insult_score, 3),
756 |                         "profanity_score": round(profanity_score, 3),
757 |                         "threat_score": round(threat_score, 3),
758 |                         "spam_score": round(spam_score, 3),
759 |                         "sexually_explicit": round(sexually_explicit, 3),
760 |                         "flirtation": round(flirtation, 3),
761 |                         "classification": classification,
762 |                         "max_risk_score": round(max_score, 3),
763 |                         "raw_response": result
764 |                     },
765 |                     processing_time=time.time() - start_time
766 |                 )
767 |             else:
768 |                 return AnalysisResult(
769 |                     status=AnalysisStatus.ERROR.value,
770 |                     data={"error": True, "message": f"Perspective API HTTP {response.status_code}"},
771 |                     error=f"HTTP {response.status_code}"
772 |                 )
773 | 
774 |         except httpx.TimeoutException:
775 |             return AnalysisResult(
776 |                 status=AnalysisStatus.TIMEOUT.value,
777 |                 data={"error": True, "message": "Perspective API timeout"},
778 |                 error="Request timeout"
779 |             )
780 |         except Exception as e:
781 |             logger.error(f"Perspective API error: {e}")
782 |             return AnalysisResult(
783 |                 status=AnalysisStatus.ERROR.value,
784 |                 data={"error": True, "message": str(e)},
785 |                 error=str(e)
786 |             )
787 | 
788 |     # ---------------------------
789 |     # Fallback API stubs
790 |     # ---------------------------
791 |     async def call_custom_search(self, query: str) -> Dict[str, Any]:
792 |         return {"status": "not_implemented", "message": "Custom Search pending"}
793 | 
794 |     async def call_news_api(self, query: str) -> Dict[str, Any]:
795 |         return {"status": "not_implemented", "message": "News API pending"}
796 | 
797 |     async def call_huggingface_model(self, text: str, model: str = "default") -> Dict[str, Any]:
798 |         return {"status": "not_implemented", "message": "Hugging Face pending"}
799 | 
800 |     # ---------------------------
801 |     # Helper methods
802 |     # ---------------------------
803 |     def _extract_normalized_claim(self, gemini_data: Dict[str, Any]) -> str:
804 |         if not gemini_data:
805 |             return ""
806 |         return gemini_data.get("normalized_claim") or gemini_data.get("normalizedClaim") or gemini_data.get("text") or ""
807 | 
808 |     def _extract_entities(self, gemini_data: Dict[str, Any]) -> List[str]:
809 |         if not gemini_data:
810 |             return []
811 |         entities = gemini_data.get("entities") or gemini_data.get("entityList") or []
812 |         # ensure list of str
813 |         return [str(e) for e in entities] if isinstance(entities, (list, tuple)) else []
814 | 
815 |     async def _initialize_fallback_apis(self, query: str) -> Dict[str, Any]:
816 |         return {
817 |             "custom_search": await self.call_custom_search(query),
818 |             "news_api": await self.call_news_api(query),
819 |             "huggingface": await self.call_huggingface_model(query)
820 |         }
821 | 
822 | # ---------------------------
823 | # Module-level convenience functions
824 | # ---------------------------
825 | 
826 | async def analyze_text(content: str, language: str = DEFAULT_LANGUAGE) -> Dict[str, Any]:
827 |     """Convenience wrapper to run the service once (creates service and closes client)."""
828 |     service = TextAnalysisService()
829 |     try:
830 |         result = await service.analyze_text(content, language)
831 |         return result
832 |     finally:
833 |         await service.close()
834 | 
835 | def validate_environment() -> Dict[str, bool]:
836 |     """Validates required API keys are present."""
837 |     status = {
838 |         "gemini_api": bool(APIConfig.GEMINI_API_KEY),
839 |         "claimbuster_api": True,  # Force pass since we are skipping it
840 |         "factcheck_api": bool(APIConfig.GOOGLE_FACTCHECK_API_KEY),
841 |         "perspective_api": bool(APIConfig.PERSPECTIVE_API_KEY),
842 |         "wikipedia_api": bool(APIConfig.WIKIPEDIA_API_KEY)
843 |     }
844 |     status["all_configured"] = all(status.values())
845 |     return status
846 | 
847 | def get_mock_analysis_result(content: str) -> Dict[str, Any]:
848 |     """Produces a mock analysis result (useful for development without keys)."""
849 |     return {
850 |         "input": {"content": content, "language": "en", "timestamp": time.time()},
851 |         "gemini": {"status": "success", "normalized_claim": content, "entities": ["entity1"], "confidence": 0.8, "mock": True},
852 |         "claimbuster": {"status": "success", "check_worthiness_score": 0.7, "classification": "check-worthy", "mock": True},
853 |         "factcheck": {"status": "success", "fact_checks_found": 0, "verdicts": [], "mock": True},
854 |         "wikipedia": {"status": "success", "entities_checked": 0, "results": [], "mock": True},
855 |         "perspective": {"status": "success", "toxicity_score": 0.1, "classification": "low_risk", "mock": True},
856 |         "educational": {"status": "success", "misinformation_analysis": "Mock analysis", "indian_context": "Mock context", "pattern_recognition": "Mock patterns", "real_story": "Mock story", "mock": True},
857 |         "fallback": {"custom_search": {"status": "not_implemented"}, "news_api": {"status": "not_implemented"}},
858 |         "metadata": {"total_processing_time": 0.0, "version": "1.0.0", "apis_called": 0, "mock_data": True}
859 |     }
860 | 
861 | async def test_all_apis(test_content: str = "This is a test claim for API validation") -> Dict[str, Any]:
862 |     """
863 |     Tests all API integrations with a sample input to validate configuration.
864 |     Returns dict summarizing results.
865 |     """
866 |     logger.info("Starting comprehensive API testing...")
867 |     service = TextAnalysisService()
868 |     test_results: Dict[str, Any] = {}
869 | 
870 |     api_calls = [
871 |         ("gemini", service.call_gemini(test_content)),
872 |         # ("claimbuster", service.call_claimbuster(test_content)), -- remove this
873 |         ("factcheck", service.call_google_factcheck(test_content)),
874 |         ("wikipedia", service.call_wikipedia_lookup(["test", "entity"])),
875 |         ("perspective", service.call_perspective_api(test_content)),
876 |         ("educational", service.call_educational_analysis(test_content, {"verdicts": []}))
877 |     ]
878 | 
879 |     try:
880 |         for name, coro in api_calls:
881 |             try:
882 |                 res: AnalysisResult = await coro
883 |                 test_results[name] = {
884 |                     "status": res.status,
885 |                     "success": res.status == AnalysisStatus.SUCCESS.value,
886 |                     "processing_time": res.processing_time,
887 |                     "error": res.error
888 |                 }
889 |             except Exception as e:
890 |                 test_results[name] = {"status": "error", "success": False, "error": str(e)}
891 |         successful = sum(1 for v in test_results.values() if v.get("success"))
892 |         test_results["summary"] = {
893 |             "total_apis_tested": len(api_calls),
894 |             "successful_apis": successful,
895 |             "success_rate": successful / len(api_calls),
896 |             "all_passed": successful == len(api_calls)
897 |         }
898 |         logger.info(f"API testing completed. Success rate: {test_results['summary']['success_rate']:.2%}")
899 |         return test_results
900 |     finally:
901 |         await service.close()
902 | 
903 | # ---------------------------
904 | # Initialize helper
905 | # ---------------------------
906 | def initialize_service() -> TextAnalysisService:
907 |     """Create and return a configured TextAnalysisService instance (does not create client yet)."""
908 |     env_status = validate_environment()
909 |     logger.info("Text Analysis Service Configuration:")
910 |     for k, v in env_status.items():
911 |         logger.info(f"  {k}: {'✓ Configured' if v else '✗ Missing'}")
912 |     if not env_status["all_configured"]:
913 |         logger.warning("Some APIs not configured. Service will use mock responses where applicable.")
914 |     return TextAnalysisService()
915 | 
916 | # ---------------------------
917 | # CLI / direct run
918 | # ---------------------------
919 | if __name__ == "__main__":
920 |     import argparse
921 | 
922 |     parser = argparse.ArgumentParser(description="TruthLens Text Analysis Service")
923 |     parser.add_argument("--test", action="store_true", help="Run API tests")
924 |     parser.add_argument("--validate", action="store_true", help="Validate environment configuration")
925 |     parser.add_argument("--analyze", type=str, help="Analyze provided text")
926 |     parser.add_argument("--mock", action="store_true", help="Use mock responses")
927 |     args = parser.parse_args()
928 | 
929 |     async def main():
930 |         if args.validate:
931 |             env_status = validate_environment()
932 |             print("Environment Validation:")
933 |             for k, v in env_status.items():
934 |                 print(f"  {k}: {'✓' if v else '✗'}")
935 |         elif args.test:
936 |             print("Running comprehensive API tests...")
937 |             results = await test_all_apis()
938 |             print("Test summary:", results.get("summary"))
939 |         elif args.analyze:
940 |             print(f"Analyzing: {args.analyze}")
941 |             if args.mock:
942 |                 res = get_mock_analysis_result(args.analyze)
943 |             else:
944 |                 res = await analyze_text(args.analyze)
945 |             # pretty print a short summary
946 |             print("Result summary:")
947 |             print("  ClaimBuster score:", res.get("claimbuster", {}).get("check_worthiness_score"))
948 |             print("  Fact checks found:", res.get("factcheck", {}).get("fact_checks_found"))
949 |             print("  Toxicity score:", res.get("perspective", {}).get("toxicity_score"))
950 |             print("  Educational sections:", "✓" if res.get("educational", {}).get("status") == "success" else "✗")
951 |             print("  Processing time:", res.get("metadata", {}).get("total_processing_time"))
952 |         else:
953 |             print("TruthLens Text Analysis Service")
954 |             print("Use --help for options")
955 | 
956 |     asyncio.run(main())
957 | 


--------------------------------------------------------------------------------
/backend/app/verify.py:
--------------------------------------------------------------------------------
  1 | from fastapi import APIRouter, HTTPException, Request
  2 | from fastapi.responses import StreamingResponse
  3 | from typing import Optional
  4 | import base64
  5 | import uuid
  6 | import json
  7 | import asyncio
  8 | 
  9 | from pydantic import BaseModel
 10 | from app.models import AnalysisResponse
 11 | from app.services.text_service import analyze_text
 12 | from app.database import storage
 13 | 
 14 | router = APIRouter()
 15 | 
 16 | class VerifyRequest(BaseModel):
 17 |     content_type: str                
 18 |     content: str                     
 19 |     language: Optional[str] = "en"   
 20 |     user_id: Optional[str] = None    
 21 | 
 22 | @router.post("/verify", response_model=AnalysisResponse)
 23 | async def verify_content(request: VerifyRequest):
 24 |     """Core content verification endpoint"""
 25 |     content_type = request.content_type
 26 |     content = request.content
 27 |     language = request.language
 28 |     user_id = request.user_id
 29 | 
 30 |     # Validate content_type
 31 |     if content_type not in {"text", "url", "image"}:
 32 |         raise HTTPException(
 33 |             status_code=400,
 34 |             detail="Invalid content_type. Must be 'text', 'url', or 'image'"
 35 |         )
 36 | 
 37 |     try:
 38 |         # If image, decode base64 to validate
 39 |         if content_type == "image":
 40 |             try:
 41 |                 image_bytes = base64.b64decode(content)
 42 |                 content = base64.b64encode(image_bytes).decode('utf-8')
 43 |             except Exception:
 44 |                 raise HTTPException(
 45 |                     status_code=400,
 46 |                     detail="Invalid base64 image data"
 47 |                 )
 48 | 
 49 |         # Call educational text analysis
 50 |         analysis_result = await analyze_text(content, language)
 51 |         
 52 |         # 🔍 DEBUG PRINTS - TO FIND THE ISSUE
 53 |         print("🔍 DEBUG - Full analysis_result keys:", list(analysis_result.keys()))
 54 |         print("🔍 DEBUG - Educational data:", analysis_result.get("educational"))
 55 |         print("🔍 DEBUG - Educational data type:", type(analysis_result.get("educational")))
 56 |         print("🔍 DEBUG - Educational data content:", analysis_result.get("educational", {}))
 57 |         
 58 |         # Map text_service.py response to expected format
 59 |         formatted_result = {
 60 |             "verdict": "inconclusive",  # Default value
 61 |             "confidence_score": analysis_result.get("gemini", {}).get("confidence", 0.5),
 62 |             "summary": "Analysis completed",  # Default value
 63 |             "processing_time": analysis_result.get("metadata", {}).get("total_processing_time", 0),
 64 |             "detailed_analysis": {
 65 |                 "evidence": ["Analysis completed"],
 66 |                 "sources": ["Google Gemini AI", "Google Perspective API"], 
 67 |                 "gemini_analysis": str(analysis_result.get("gemini", {})),
 68 |                 "factcheck_results": analysis_result.get("factcheck", {}).get("verdicts", []),
 69 |                 "vision_analysis": None,
 70 |                 "educational": analysis_result.get("educational", {})  # 🎯 ADD EDUCATIONAL DATA
 71 |             }
 72 |         }
 73 |         
 74 |         # 🔍 DEBUG PRINT - Final educational data being sent
 75 |         print("🔍 DEBUG - Final educational in response:", formatted_result["detailed_analysis"]["educational"])
 76 | 
 77 |         # Generate ID and build response
 78 |         analysis_id = str(uuid.uuid4())
 79 |         response = AnalysisResponse(
 80 |             analysis_id=analysis_id,
 81 |             verdict=formatted_result["verdict"],
 82 |             confidence_score=formatted_result["confidence_score"],
 83 |             summary=formatted_result["summary"],
 84 |             processing_time=formatted_result["processing_time"],
 85 |             detailed_analysis=formatted_result["detailed_analysis"]
 86 |         )
 87 | 
 88 |         # Persist to storage
 89 |         storage_data = {
 90 |             "analysis_id": analysis_id,
 91 |             "content_type": content_type,
 92 |             "content": "[IMAGE_DATA]" if content_type == "image" else content,
 93 |             "language": language,
 94 |             "user_id": user_id,
 95 |             "verdict": response.verdict,
 96 |             "confidence_score": response.confidence_score,
 97 |             "summary": response.summary,
 98 |             "processing_time": response.processing_time,
 99 |             "detailed_analysis": response.detailed_analysis.dict()
100 |         }
101 |         saved = storage.save_analysis(analysis_id, storage_data)
102 |         if not saved:
103 |             print(f"Warning: Failed to save analysis {analysis_id}")
104 | 
105 |         return response
106 | 
107 |     except HTTPException:
108 |         raise
109 |     except Exception as e:
110 |         print(f"🚨 DEBUG - Exception in verify_content: {str(e)}")
111 |         raise HTTPException(
112 |             status_code=500,
113 |             detail=f"Analysis failed: {str(e)}"
114 |         )
115 | 
116 | # 🚀 NEW: Streaming endpoint for real-time analysis
117 | @router.post("/verify-stream")
118 | async def verify_content_stream(request: Request):
119 |     """Real-time streaming analysis endpoint like ChatGPT"""
120 |     try:
121 |         body = await request.json()
122 |         content = body.get("content", "")
123 |         language = body.get("language", "en")
124 |         
125 |         async def generate_analysis_stream():
126 |             try:
127 |                 # Step 1: Start
128 |                 yield f"data: {json.dumps({'type': 'message', 'content': '🚀 Starting analysis...'})}\n\n"
129 |                 await asyncio.sleep(1)
130 |                 
131 |                 # Step 2: Get full analysis (reuse existing function)
132 |                 yield f"data: {json.dumps({'type': 'message', 'content': '🧠 Analyzing with AI and gathering educational insights...'})}\n\n"
133 |                 analysis_result = await analyze_text(content, language)
134 |                 await asyncio.sleep(1)
135 |                 
136 |                 # Step 3: Stream educational sections one by one
137 |                 educational_data = analysis_result.get("educational", {})
138 |                 sections = [
139 |                     ("misinformation_analysis", "🧠 Why This is Misinformation"),
140 |                     ("indian_context", "🎓 What Indians Should Know"), 
141 |                     ("pattern_recognition", "🔍 How to Spot Similar Claims"),
142 |                     ("real_story", "🌟 The Real Story")
143 |                 ]
144 |                 
145 |                 for section_key, section_title in sections:
146 |                     yield f"data: {json.dumps({'type': 'message', 'content': f'📝 Generating {section_title}...'})}\n\n"
147 |                     await asyncio.sleep(0.5)
148 |                     
149 |                     section_data = educational_data.get(section_key, {})
150 |                     yield f"data: {json.dumps({'type': 'section', 'section': section_key, 'title': section_title, 'data': section_data})}\n\n"
151 |                     await asyncio.sleep(2)  # 2-second smooth delay as requested
152 |                 
153 |                 # Step 4: Complete
154 |                 yield f"data: {json.dumps({'type': 'complete', 'content': '✅ Analysis complete!'})}\n\n"
155 |                 
156 |             except Exception as e:
157 |                 yield f"data: {json.dumps({'type': 'error', 'content': f'Error: {str(e)}'})}\n\n"
158 |         
159 |         return StreamingResponse(
160 |             generate_analysis_stream(),
161 |             media_type="text/event-stream",
162 |             headers={
163 |                 "Cache-Control": "no-cache",
164 |                 "Connection": "keep-alive",
165 |                 "Access-Control-Allow-Origin": "*",
166 |                 "Access-Control-Allow-Methods": "POST, GET, OPTIONS",
167 |                 "Access-Control-Allow-Headers": "Content-Type"
168 |             }
169 |         )
170 |         
171 |     except Exception as e:
172 |         raise HTTPException(status_code=500, detail=f"Streaming failed: {str(e)}")
173 | 
174 | @router.get("/results/{analysis_id}")
175 | async def get_analysis_results(analysis_id: str):
176 |     """Retrieve detailed analysis results by ID"""
177 |     try:
178 |         result = storage.get_analysis(analysis_id)
179 |         if not result:
180 |             raise HTTPException(status_code=404, detail="Analysis not found")
181 |         return result
182 |     except Exception as e:
183 |         if "Analysis not found" in str(e):
184 |             raise
185 |         raise HTTPException(status_code=500, detail=f"Failed to retrieve analysis: {str(e)}")
186 | 
187 | @router.get("/archive")
188 | async def get_archive(limit: int = 20, user_id: Optional[str] = None):
189 |     """Get analysis archive/history"""
190 |     try:
191 |         analyses = storage.get_all_analyses(limit)
192 |         if user_id:
193 |             analyses = [a for a in analyses if a.get("user_id") == user_id]
194 |         return {
195 |             "analyses": analyses,
196 |             "total": len(analyses)
197 |         }
198 |     except Exception as e:
199 |         raise HTTPException(status_code=500, detail=f"Failed to retrieve archive: {str(e)}")
200 | 


--------------------------------------------------------------------------------
/backend/ecosystem.config.cjs:
--------------------------------------------------------------------------------
 1 | module.exports = {
 2 |   apps: [
 3 |     {
 4 |       name: 'truthlens-api',
 5 |       script: 'venv/bin/python',
 6 |       args: 'run.py',
 7 |       cwd: '/home/user/webapp/backend',
 8 |       env: {
 9 |         NODE_ENV: 'development',
10 |         PORT: 8080
11 |       },
12 |       watch: false,
13 |       instances: 1,
14 |       exec_mode: 'fork',
15 |       max_memory_restart: '200M',
16 |       env: {
17 |         NODE_ENV: 'production',
18 |         PORT: 8080,
19 |         DEBUG: 'false'
20 |       }
21 |     }
22 |   ]
23 | }


--------------------------------------------------------------------------------
/backend/requirements.txt:
--------------------------------------------------------------------------------
1 | fastapi==0.104.1
2 | uvicorn[standard]==0.24.0
3 | pydantic==2.5.0
4 | python-multipart==0.0.6
5 | python-dotenv==1.0.0


--------------------------------------------------------------------------------
/backend/run.py:
--------------------------------------------------------------------------------
 1 | #!/usr/bin/env python3
 2 | """
 3 | TruthLens FastAPI Server Launcher
 4 | Quick start script for development environment
 5 | """
 6 | 
 7 | import uvicorn
 8 | import os
 9 | from app.config import settings
10 | 
11 | def main():
12 |     """Launch the FastAPI server with proper configuration"""
13 |     print("🚀 Starting TruthLens FastAPI Server...")
14 |     print(f"📡 Server will run on: http://0.0.0.0:{settings.PORT}")
15 |     print(f"📖 API Documentation: http://localhost:{settings.PORT}/docs")
16 |     print(f"🔍 Health Check: http://localhost:{settings.PORT}/health")
17 |     print(f"🌐 CORS enabled for: {settings.FRONTEND_ORIGIN}")
18 |     print("-" * 50)
19 |     
20 |     # Run server with configuration from settings
21 |     uvicorn.run(
22 |         "app.main:app",
23 |         host="0.0.0.0",  # Allow external connections
24 |         port=settings.PORT,
25 |         reload=settings.DEBUG,
26 |         log_level="info" if settings.DEBUG else "warning"
27 |     )
28 | 
29 | if __name__ == "__main__":
30 |     main()


--------------------------------------------------------------------------------
/backend/storage/analyses.json:
--------------------------------------------------------------------------------
   1 | {
   2 |   "208a4c75-72db-4f64-b812-a638f5abf844": {
   3 |     "analysis_id": "208a4c75-72db-4f64-b812-a638f5abf844",
   4 |     "content_type": "text",
   5 |     "content": "This is fake news about vaccines",
   6 |     "language": "en",
   7 |     "user_id": null,
   8 |     "verdict": "false",
   9 |     "confidence_score": 0.95,
  10 |     "summary": "Text analysis completed. Content appears to be false based on language patterns and fact-checking.",
  11 |     "processing_time": 0.0,
  12 |     "detailed_analysis": {
  13 |       "evidence": [
  14 |         "Language pattern analysis completed",
  15 |         "Cross-referenced with known misinformation patterns",
  16 |         "Checked against fact-checking databases"
  17 |       ],
  18 |       "sources": [],
  19 |       "gemini_analysis": "Text analysis completed. Content appears to be false based on language patterns and fact-checking.",
  20 |       "factcheck_results": [],
  21 |       "vision_analysis": null
  22 |     },
  23 |     "timestamp": "2025-09-14T13:51:26.066693"
  24 |   },
  25 |   "f2e97aec-d97b-41d8-98e8-c92c0cd27ec2": {
  26 |     "analysis_id": "f2e97aec-d97b-41d8-98e8-c92c0cd27ec2",
  27 |     "content_type": "text",
  28 |     "content": "Hin hininik",
  29 |     "language": "en",
  30 |     "user_id": null,
  31 |     "verdict": "inconclusive",
  32 |     "confidence_score": 0.78,
  33 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
  34 |     "processing_time": 0.0,
  35 |     "detailed_analysis": {
  36 |       "evidence": [
  37 |         "Language pattern analysis completed",
  38 |         "Cross-referenced with known misinformation patterns",
  39 |         "Checked against fact-checking databases"
  40 |       ],
  41 |       "sources": [],
  42 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
  43 |       "factcheck_results": [],
  44 |       "vision_analysis": null
  45 |     },
  46 |     "timestamp": "2025-09-14T14:56:14.001137"
  47 |   },
  48 |   "5ade1399-41ac-4c59-97ef-a8639c451edd": {
  49 |     "analysis_id": "5ade1399-41ac-4c59-97ef-a8639c451edd",
  50 |     "content_type": "text",
  51 |     "content": "sfbsj",
  52 |     "language": "en",
  53 |     "user_id": null,
  54 |     "verdict": "inconclusive",
  55 |     "confidence_score": 0.49,
  56 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
  57 |     "processing_time": 0.0,
  58 |     "detailed_analysis": {
  59 |       "evidence": [
  60 |         "Language pattern analysis completed",
  61 |         "Cross-referenced with known misinformation patterns",
  62 |         "Checked against fact-checking databases"
  63 |       ],
  64 |       "sources": [],
  65 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
  66 |       "factcheck_results": [],
  67 |       "vision_analysis": null
  68 |     },
  69 |     "timestamp": "2025-09-14T15:02:29.550375"
  70 |   },
  71 |   "35a3294e-a882-465c-b3e5-f5d26248209e": {
  72 |     "analysis_id": "35a3294e-a882-465c-b3e5-f5d26248209e",
  73 |     "content_type": "text",
  74 |     "content": "sdfshnfb",
  75 |     "language": "en",
  76 |     "user_id": null,
  77 |     "verdict": "inconclusive",
  78 |     "confidence_score": 0.75,
  79 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
  80 |     "processing_time": 0.0,
  81 |     "detailed_analysis": {
  82 |       "evidence": [
  83 |         "Language pattern analysis completed",
  84 |         "Cross-referenced with known misinformation patterns",
  85 |         "Checked against fact-checking databases"
  86 |       ],
  87 |       "sources": [],
  88 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
  89 |       "factcheck_results": [],
  90 |       "vision_analysis": null
  91 |     },
  92 |     "timestamp": "2025-09-14T15:03:21.970231"
  93 |   },
  94 |   "9be50410-1b80-47e7-bdd7-167c8fc02764": {
  95 |     "analysis_id": "9be50410-1b80-47e7-bdd7-167c8fc02764",
  96 |     "content_type": "text",
  97 |     "content": "shdbshf",
  98 |     "language": "en",
  99 |     "user_id": null,
 100 |     "verdict": "inconclusive",
 101 |     "confidence_score": 0.71,
 102 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 103 |     "processing_time": 0.0,
 104 |     "detailed_analysis": {
 105 |       "evidence": [
 106 |         "Language pattern analysis completed",
 107 |         "Cross-referenced with known misinformation patterns",
 108 |         "Checked against fact-checking databases"
 109 |       ],
 110 |       "sources": [],
 111 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 112 |       "factcheck_results": [],
 113 |       "vision_analysis": null
 114 |     },
 115 |     "timestamp": "2025-09-14T16:04:31.837460"
 116 |   },
 117 |   "ef7c90ca-2347-4f0b-8ba3-d8d8af15469a": {
 118 |     "analysis_id": "ef7c90ca-2347-4f0b-8ba3-d8d8af15469a",
 119 |     "content_type": "text",
 120 |     "content": "Covid Vaccine Contains microchip",
 121 |     "language": "en",
 122 |     "user_id": null,
 123 |     "verdict": "inconclusive",
 124 |     "confidence_score": 0.65,
 125 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 126 |     "processing_time": 0.0,
 127 |     "detailed_analysis": {
 128 |       "evidence": [
 129 |         "Language pattern analysis completed",
 130 |         "Cross-referenced with known misinformation patterns",
 131 |         "Checked against fact-checking databases"
 132 |       ],
 133 |       "sources": [],
 134 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 135 |       "factcheck_results": [],
 136 |       "vision_analysis": null
 137 |     },
 138 |     "timestamp": "2025-09-14T16:05:03.914627"
 139 |   },
 140 |   "e1addcf7-c12a-428b-a446-c196180c6800": {
 141 |     "analysis_id": "e1addcf7-c12a-428b-a446-c196180c6800",
 142 |     "content_type": "url",
 143 |     "content": "http://localhost:3000/",
 144 |     "language": "en",
 145 |     "user_id": null,
 146 |     "verdict": "inconclusive",
 147 |     "confidence_score": 0.55,
 148 |     "summary": "URL credibility could not be definitively determined.",
 149 |     "processing_time": 0.0,
 150 |     "detailed_analysis": {
 151 |       "evidence": [],
 152 |       "sources": [
 153 |         "Domain reputation database",
 154 |         "Historical fact-check records"
 155 |       ],
 156 |       "gemini_analysis": "URL credibility could not be definitively determined.",
 157 |       "factcheck_results": [],
 158 |       "vision_analysis": null
 159 |     },
 160 |     "timestamp": "2025-09-14T16:06:35.831580"
 161 |   },
 162 |   "3b9a8539-e3c0-4e4b-b9f3-2b9f3989302c": {
 163 |     "analysis_id": "3b9a8539-e3c0-4e4b-b9f3-2b9f3989302c",
 164 |     "content_type": "text",
 165 |     "content": "yruf\n",
 166 |     "language": "en",
 167 |     "user_id": null,
 168 |     "verdict": "inconclusive",
 169 |     "confidence_score": 0.63,
 170 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 171 |     "processing_time": 0.0,
 172 |     "detailed_analysis": {
 173 |       "evidence": [
 174 |         "Language pattern analysis completed",
 175 |         "Cross-referenced with known misinformation patterns",
 176 |         "Checked against fact-checking databases"
 177 |       ],
 178 |       "sources": [],
 179 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 180 |       "factcheck_results": [],
 181 |       "vision_analysis": null
 182 |     },
 183 |     "timestamp": "2025-09-14T16:07:19.092382"
 184 |   },
 185 |   "fd6b2372-067c-4af6-9521-589dbb04b28c": {
 186 |     "analysis_id": "fd6b2372-067c-4af6-9521-589dbb04b28c",
 187 |     "content_type": "text",
 188 |     "content": "Covid caoasfdsifse\n",
 189 |     "language": "en",
 190 |     "user_id": null,
 191 |     "verdict": "inconclusive",
 192 |     "confidence_score": 0.46,
 193 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 194 |     "processing_time": 0.0,
 195 |     "detailed_analysis": {
 196 |       "evidence": [
 197 |         "Language pattern analysis completed",
 198 |         "Cross-referenced with known misinformation patterns",
 199 |         "Checked against fact-checking databases"
 200 |       ],
 201 |       "sources": [],
 202 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 203 |       "factcheck_results": [],
 204 |       "vision_analysis": null
 205 |     },
 206 |     "timestamp": "2025-09-14T16:21:11.989427"
 207 |   },
 208 |   "cb87193b-a11d-43ec-9a5c-58ef41861b85": {
 209 |     "analysis_id": "cb87193b-a11d-43ec-9a5c-58ef41861b85",
 210 |     "content_type": "text",
 211 |     "content": "INdian PM is biloogical",
 212 |     "language": "en",
 213 |     "user_id": null,
 214 |     "verdict": "inconclusive",
 215 |     "confidence_score": 0.66,
 216 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 217 |     "processing_time": 0.0,
 218 |     "detailed_analysis": {
 219 |       "evidence": [
 220 |         "Language pattern analysis completed",
 221 |         "Cross-referenced with known misinformation patterns",
 222 |         "Checked against fact-checking databases"
 223 |       ],
 224 |       "sources": [],
 225 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 226 |       "factcheck_results": [],
 227 |       "vision_analysis": null
 228 |     },
 229 |     "timestamp": "2025-09-14T17:06:38.136696"
 230 |   },
 231 |   "bffb80c3-eeed-4e54-99e1-66e7e50d0921": {
 232 |     "analysis_id": "bffb80c3-eeed-4e54-99e1-66e7e50d0921",
 233 |     "content_type": "text",
 234 |     "content": "welrjbwer",
 235 |     "language": "en",
 236 |     "user_id": null,
 237 |     "verdict": "inconclusive",
 238 |     "confidence_score": 0.44,
 239 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 240 |     "processing_time": 0.0,
 241 |     "detailed_analysis": {
 242 |       "evidence": [
 243 |         "Language pattern analysis completed",
 244 |         "Cross-referenced with known misinformation patterns",
 245 |         "Checked against fact-checking databases"
 246 |       ],
 247 |       "sources": [],
 248 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 249 |       "factcheck_results": [],
 250 |       "vision_analysis": null
 251 |     },
 252 |     "timestamp": "2025-09-14T17:08:33.518814"
 253 |   },
 254 |   "30dca530-6c2d-4875-a271-34df8c3325d6": {
 255 |     "analysis_id": "30dca530-6c2d-4875-a271-34df8c3325d6",
 256 |     "content_type": "text",
 257 |     "content": "welrjbwer",
 258 |     "language": "en",
 259 |     "user_id": null,
 260 |     "verdict": "inconclusive",
 261 |     "confidence_score": 0.44,
 262 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 263 |     "processing_time": 0.0,
 264 |     "detailed_analysis": {
 265 |       "evidence": [
 266 |         "Language pattern analysis completed",
 267 |         "Cross-referenced with known misinformation patterns",
 268 |         "Checked against fact-checking databases"
 269 |       ],
 270 |       "sources": [],
 271 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 272 |       "factcheck_results": [],
 273 |       "vision_analysis": null
 274 |     },
 275 |     "timestamp": "2025-09-14T17:08:47.254740"
 276 |   },
 277 |   "cd02c1c1-7665-456e-b0f3-2566aeef2468": {
 278 |     "analysis_id": "cd02c1c1-7665-456e-b0f3-2566aeef2468",
 279 |     "content_type": "text",
 280 |     "content": "welrjbwer",
 281 |     "language": "en",
 282 |     "user_id": null,
 283 |     "verdict": "inconclusive",
 284 |     "confidence_score": 0.44,
 285 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 286 |     "processing_time": 0.0,
 287 |     "detailed_analysis": {
 288 |       "evidence": [
 289 |         "Language pattern analysis completed",
 290 |         "Cross-referenced with known misinformation patterns",
 291 |         "Checked against fact-checking databases"
 292 |       ],
 293 |       "sources": [],
 294 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 295 |       "factcheck_results": [],
 296 |       "vision_analysis": null
 297 |     },
 298 |     "timestamp": "2025-09-14T17:08:48.252988"
 299 |   },
 300 |   "30da0b5a-eaf5-4592-8502-21bf87e3539c": {
 301 |     "analysis_id": "30da0b5a-eaf5-4592-8502-21bf87e3539c",
 302 |     "content_type": "text",
 303 |     "content": "sjkdsd",
 304 |     "language": "en",
 305 |     "user_id": null,
 306 |     "verdict": "inconclusive",
 307 |     "confidence_score": 0.5,
 308 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 309 |     "processing_time": 0.0,
 310 |     "detailed_analysis": {
 311 |       "evidence": [
 312 |         "Language pattern analysis completed",
 313 |         "Cross-referenced with known misinformation patterns",
 314 |         "Checked against fact-checking databases"
 315 |       ],
 316 |       "sources": [],
 317 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 318 |       "factcheck_results": [],
 319 |       "vision_analysis": null
 320 |     },
 321 |     "timestamp": "2025-09-14T17:40:35.286684"
 322 |   },
 323 |   "46184557-f804-475a-a289-c45977fc189b": {
 324 |     "analysis_id": "46184557-f804-475a-a289-c45977fc189b",
 325 |     "content_type": "text",
 326 |     "content": "sk fw",
 327 |     "language": "en",
 328 |     "user_id": null,
 329 |     "verdict": "inconclusive",
 330 |     "confidence_score": 0.58,
 331 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 332 |     "processing_time": 0.0,
 333 |     "detailed_analysis": {
 334 |       "evidence": [
 335 |         "Language pattern analysis completed",
 336 |         "Cross-referenced with known misinformation patterns",
 337 |         "Checked against fact-checking databases"
 338 |       ],
 339 |       "sources": [],
 340 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 341 |       "factcheck_results": [],
 342 |       "vision_analysis": null
 343 |     },
 344 |     "timestamp": "2025-09-14T17:51:46.531279"
 345 |   },
 346 |   "6a916e04-53a9-474f-a683-3435055e206b": {
 347 |     "analysis_id": "6a916e04-53a9-474f-a683-3435055e206b",
 348 |     "content_type": "text",
 349 |     "content": "sjbfhd",
 350 |     "language": "en",
 351 |     "user_id": null,
 352 |     "verdict": "inconclusive",
 353 |     "confidence_score": 0.43,
 354 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 355 |     "processing_time": 0.0,
 356 |     "detailed_analysis": {
 357 |       "evidence": [
 358 |         "Language pattern analysis completed",
 359 |         "Cross-referenced with known misinformation patterns",
 360 |         "Checked against fact-checking databases"
 361 |       ],
 362 |       "sources": [],
 363 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 364 |       "factcheck_results": [],
 365 |       "vision_analysis": null
 366 |     },
 367 |     "timestamp": "2025-09-14T18:31:00.209134"
 368 |   },
 369 |   "3a9f74de-53f6-4309-bd12-3d37a31152b6": {
 370 |     "analysis_id": "3a9f74de-53f6-4309-bd12-3d37a31152b6",
 371 |     "content_type": "text",
 372 |     "content": "skjj fskf wsf",
 373 |     "language": "en",
 374 |     "user_id": null,
 375 |     "verdict": "inconclusive",
 376 |     "confidence_score": 0.46,
 377 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 378 |     "processing_time": 0.0,
 379 |     "detailed_analysis": {
 380 |       "evidence": [
 381 |         "Language pattern analysis completed",
 382 |         "Cross-referenced with known misinformation patterns",
 383 |         "Checked against fact-checking databases"
 384 |       ],
 385 |       "sources": [],
 386 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 387 |       "factcheck_results": [],
 388 |       "vision_analysis": null
 389 |     },
 390 |     "timestamp": "2025-09-14T18:47:11.082080"
 391 |   },
 392 |   "92a21fe7-bfcb-4c11-93d9-501ff799424c": {
 393 |     "analysis_id": "92a21fe7-bfcb-4c11-93d9-501ff799424c",
 394 |     "content_type": "text",
 395 |     "content": "sdfjshd kh",
 396 |     "language": "en",
 397 |     "user_id": null,
 398 |     "verdict": "inconclusive",
 399 |     "confidence_score": 0.75,
 400 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 401 |     "processing_time": 0.0,
 402 |     "detailed_analysis": {
 403 |       "evidence": [
 404 |         "Language pattern analysis completed",
 405 |         "Cross-referenced with known misinformation patterns",
 406 |         "Checked against fact-checking databases"
 407 |       ],
 408 |       "sources": [],
 409 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 410 |       "factcheck_results": [],
 411 |       "vision_analysis": null
 412 |     },
 413 |     "timestamp": "2025-09-14T18:47:44.293351"
 414 |   },
 415 |   "be8ac2e4-51af-4c36-9737-17afbe662473": {
 416 |     "analysis_id": "be8ac2e4-51af-4c36-9737-17afbe662473",
 417 |     "content_type": "text",
 418 |     "content": "dfsfrssesef",
 419 |     "language": "en",
 420 |     "user_id": null,
 421 |     "verdict": "inconclusive",
 422 |     "confidence_score": 0.73,
 423 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 424 |     "processing_time": 0.0,
 425 |     "detailed_analysis": {
 426 |       "evidence": [
 427 |         "Language pattern analysis completed",
 428 |         "Cross-referenced with known misinformation patterns",
 429 |         "Checked against fact-checking databases"
 430 |       ],
 431 |       "sources": [],
 432 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 433 |       "factcheck_results": [],
 434 |       "vision_analysis": null
 435 |     },
 436 |     "timestamp": "2025-09-14T23:18:12.883023"
 437 |   },
 438 |   "75521e88-0edf-4c0f-ac82-d3752f9576ff": {
 439 |     "analysis_id": "75521e88-0edf-4c0f-ac82-d3752f9576ff",
 440 |     "content_type": "text",
 441 |     "content": "sdfsf",
 442 |     "language": "en",
 443 |     "user_id": null,
 444 |     "verdict": "inconclusive",
 445 |     "confidence_score": 0.51,
 446 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 447 |     "processing_time": 0.0,
 448 |     "detailed_analysis": {
 449 |       "evidence": [
 450 |         "Language pattern analysis completed",
 451 |         "Cross-referenced with known misinformation patterns",
 452 |         "Checked against fact-checking databases"
 453 |       ],
 454 |       "sources": [],
 455 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 456 |       "factcheck_results": [],
 457 |       "vision_analysis": null
 458 |     },
 459 |     "timestamp": "2025-09-14T23:21:19.684035"
 460 |   },
 461 |   "50d2de93-706e-4693-bc42-63d97305cac7": {
 462 |     "analysis_id": "50d2de93-706e-4693-bc42-63d97305cac7",
 463 |     "content_type": "text",
 464 |     "content": "sdfsse",
 465 |     "language": "en",
 466 |     "user_id": null,
 467 |     "verdict": "inconclusive",
 468 |     "confidence_score": 0.43,
 469 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 470 |     "processing_time": 0.0,
 471 |     "detailed_analysis": {
 472 |       "evidence": [
 473 |         "Language pattern analysis completed",
 474 |         "Cross-referenced with known misinformation patterns",
 475 |         "Checked against fact-checking databases"
 476 |       ],
 477 |       "sources": [],
 478 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 479 |       "factcheck_results": [],
 480 |       "vision_analysis": null
 481 |     },
 482 |     "timestamp": "2025-09-14T23:21:28.775682"
 483 |   },
 484 |   "81f232eb-e54e-4405-a8d6-7e2461cf5c4d": {
 485 |     "analysis_id": "81f232eb-e54e-4405-a8d6-7e2461cf5c4d",
 486 |     "content_type": "text",
 487 |     "content": "sfsf",
 488 |     "language": "en",
 489 |     "user_id": null,
 490 |     "verdict": "inconclusive",
 491 |     "confidence_score": 0.66,
 492 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 493 |     "processing_time": 0.0,
 494 |     "detailed_analysis": {
 495 |       "evidence": [
 496 |         "Language pattern analysis completed",
 497 |         "Cross-referenced with known misinformation patterns",
 498 |         "Checked against fact-checking databases"
 499 |       ],
 500 |       "sources": [],
 501 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 502 |       "factcheck_results": [],
 503 |       "vision_analysis": null
 504 |     },
 505 |     "timestamp": "2025-09-14T23:22:11.932032"
 506 |   },
 507 |   "b2c2e01a-f257-48c0-905b-f51843e9ea1b": {
 508 |     "analysis_id": "b2c2e01a-f257-48c0-905b-f51843e9ea1b",
 509 |     "content_type": "text",
 510 |     "content": "dfa",
 511 |     "language": "en",
 512 |     "user_id": null,
 513 |     "verdict": "inconclusive",
 514 |     "confidence_score": 0.46,
 515 |     "summary": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 516 |     "processing_time": 0.0,
 517 |     "detailed_analysis": {
 518 |       "evidence": [
 519 |         "Language pattern analysis completed",
 520 |         "Cross-referenced with known misinformation patterns",
 521 |         "Checked against fact-checking databases"
 522 |       ],
 523 |       "sources": [],
 524 |       "gemini_analysis": "Text analysis completed. Content appears to be inconclusive based on language patterns and fact-checking.",
 525 |       "factcheck_results": [],
 526 |       "vision_analysis": null
 527 |     },
 528 |     "timestamp": "2025-09-15T09:43:26.738224"
 529 |   },
 530 |   "0edfa922-b543-45a4-ab7b-3712ee52d964": {
 531 |     "analysis_id": "0edfa922-b543-45a4-ab7b-3712ee52d964",
 532 |     "content_type": "text",
 533 |     "content": "sfkjs f",
 534 |     "language": "en",
 535 |     "user_id": null,
 536 |     "verdict": "inconclusive",
 537 |     "confidence_score": 0.55,
 538 |     "summary": "No clear misinformation indicators found, but verification recommended.",
 539 |     "processing_time": 0.0,
 540 |     "detailed_analysis": {
 541 |       "evidence": [
 542 |         "Found 0 suspicious keywords"
 543 |       ],
 544 |       "sources": [
 545 |         "Internal keyword analysis"
 546 |       ],
 547 |       "gemini_analysis": "MVP analysis based on keyword matching",
 548 |       "factcheck_results": [],
 549 |       "vision_analysis": null
 550 |     },
 551 |     "timestamp": "2025-09-15T21:38:47.699641"
 552 |   },
 553 |   "7f943033-4211-482c-98f7-55019671d51a": {
 554 |     "analysis_id": "7f943033-4211-482c-98f7-55019671d51a",
 555 |     "content_type": "text",
 556 |     "content": "Indian PM is dead?",
 557 |     "language": "en",
 558 |     "user_id": null,
 559 |     "verdict": "inconclusive",
 560 |     "confidence_score": 0.55,
 561 |     "summary": "No clear misinformation indicators found, but verification recommended.",
 562 |     "processing_time": 0.0,
 563 |     "detailed_analysis": {
 564 |       "evidence": [
 565 |         "Found 0 suspicious keywords"
 566 |       ],
 567 |       "sources": [
 568 |         "Internal keyword analysis"
 569 |       ],
 570 |       "gemini_analysis": "MVP analysis based on keyword matching",
 571 |       "factcheck_results": [],
 572 |       "vision_analysis": null
 573 |     },
 574 |     "timestamp": "2025-09-15T21:39:15.445606"
 575 |   },
 576 |   "ea679cfc-060d-4875-af66-9269ec709b03": {
 577 |     "analysis_id": "ea679cfc-060d-4875-af66-9269ec709b03",
 578 |     "content_type": "text",
 579 |     "content": "sdfas",
 580 |     "language": "en",
 581 |     "user_id": null,
 582 |     "verdict": "inconclusive",
 583 |     "confidence_score": 0.75,
 584 |     "summary": "High-confidence AI analysis suggests claim requires verification",
 585 |     "processing_time": 0.01,
 586 |     "detailed_analysis": {
 587 |       "evidence": [
 588 |         "Identified entities: entity1"
 589 |       ],
 590 |       "sources": [
 591 |         "Google Gemini AI",
 592 |         "Google Perspective API"
 593 |       ],
 594 |       "gemini_analysis": "sdfas",
 595 |       "factcheck_results": [],
 596 |       "vision_analysis": null
 597 |     },
 598 |     "timestamp": "2025-09-15T21:46:59.777563"
 599 |   },
 600 |   "cac5d625-8796-4c9a-8856-4e4811f7e281": {
 601 |     "analysis_id": "cac5d625-8796-4c9a-8856-4e4811f7e281",
 602 |     "content_type": "text",
 603 |     "content": "The COVID-19 vaccine contains microchips",
 604 |     "language": "en",
 605 |     "user_id": null,
 606 |     "verdict": "false",
 607 |     "confidence_score": 0.95,
 608 |     "summary": "Fact-check by Mock Fact Checker confirms this is FALSE",
 609 |     "processing_time": 0.0,
 610 |     "detailed_analysis": {
 611 |       "evidence": [
 612 |         "Found 1 fact-check(s)"
 613 |       ],
 614 |       "sources": [
 615 |         "Google Gemini AI",
 616 |         "Google Fact Check API",
 617 |         "Google Perspective API"
 618 |       ],
 619 |       "gemini_analysis": "The COVID-19 vaccine contains microchips",
 620 |       "factcheck_results": [
 621 |         {
 622 |           "verdict": "FALSE",
 623 |           "original_rating": "Mock: FALSE",
 624 |           "source": "Mock Fact Checker",
 625 |           "confidence": 0.8,
 626 |           "summary": "Mock fact-check result"
 627 |         }
 628 |       ],
 629 |       "vision_analysis": null
 630 |     },
 631 |     "timestamp": "2025-09-15T21:56:18.583472"
 632 |   },
 633 |   "e44e8813-dbf7-4a40-8646-a7cb79fdd0c7": {
 634 |     "analysis_id": "e44e8813-dbf7-4a40-8646-a7cb79fdd0c7",
 635 |     "content_type": "text",
 636 |     "content": "ssesfw",
 637 |     "language": "en",
 638 |     "user_id": null,
 639 |     "verdict": "false",
 640 |     "confidence_score": 0.95,
 641 |     "summary": "Fact-check by Mock Fact Checker confirms this is FALSE",
 642 |     "processing_time": 0.02,
 643 |     "detailed_analysis": {
 644 |       "evidence": [
 645 |         "Found 1 fact-check(s)"
 646 |       ],
 647 |       "sources": [
 648 |         "Google Gemini AI",
 649 |         "Google Fact Check API",
 650 |         "Google Perspective API"
 651 |       ],
 652 |       "gemini_analysis": "ssesfw",
 653 |       "factcheck_results": [
 654 |         {
 655 |           "verdict": "FALSE",
 656 |           "original_rating": "Mock: FALSE",
 657 |           "source": "Mock Fact Checker",
 658 |           "confidence": 0.8,
 659 |           "summary": "Mock fact-check result"
 660 |         }
 661 |       ],
 662 |       "vision_analysis": null
 663 |     },
 664 |     "timestamp": "2025-09-15T21:57:40.534998"
 665 |   },
 666 |   "95c57a17-7fab-482f-96c9-7584e8165a60": {
 667 |     "analysis_id": "95c57a17-7fab-482f-96c9-7584e8165a60",
 668 |     "content_type": "text",
 669 |     "content": "sdfsff",
 670 |     "language": "en",
 671 |     "user_id": null,
 672 |     "verdict": "inconclusive",
 673 |     "confidence_score": 0.5,
 674 |     "summary": "Analysis completed",
 675 |     "processing_time": 1.72,
 676 |     "detailed_analysis": {
 677 |       "evidence": [
 678 |         "Analysis completed"
 679 |       ],
 680 |       "sources": [
 681 |         "Google Perspective API"
 682 |       ],
 683 |       "gemini_analysis": "sdfsff",
 684 |       "factcheck_results": [],
 685 |       "vision_analysis": null
 686 |     },
 687 |     "timestamp": "2025-09-15T22:04:02.645044"
 688 |   },
 689 |   "2428370d-82db-49dd-b64b-2e86854f0c00": {
 690 |     "analysis_id": "2428370d-82db-49dd-b64b-2e86854f0c00",
 691 |     "content_type": "text",
 692 |     "content": "sdfsff",
 693 |     "language": "en",
 694 |     "user_id": null,
 695 |     "verdict": "inconclusive",
 696 |     "confidence_score": 0.5,
 697 |     "summary": "Analysis completed",
 698 |     "processing_time": 5.93,
 699 |     "detailed_analysis": {
 700 |       "evidence": [
 701 |         "Analysis completed"
 702 |       ],
 703 |       "sources": [
 704 |         "Google Gemini AI",
 705 |         "Google Perspective API"
 706 |       ],
 707 |       "gemini_analysis": "sdfsff",
 708 |       "factcheck_results": [],
 709 |       "vision_analysis": null
 710 |     },
 711 |     "timestamp": "2025-09-15T22:05:29.588109"
 712 |   },
 713 |   "ad72e9fd-9653-45d3-9d1a-c6aad4ffb8bc": {
 714 |     "analysis_id": "ad72e9fd-9653-45d3-9d1a-c6aad4ffb8bc",
 715 |     "content_type": "text",
 716 |     "content": "sdfsff",
 717 |     "language": "en",
 718 |     "user_id": null,
 719 |     "verdict": "inconclusive",
 720 |     "confidence_score": 0.5,
 721 |     "summary": "Analysis completed",
 722 |     "processing_time": 2.88,
 723 |     "detailed_analysis": {
 724 |       "evidence": [
 725 |         "Analysis completed"
 726 |       ],
 727 |       "sources": [
 728 |         "Google Gemini AI",
 729 |         "Google Perspective API"
 730 |       ],
 731 |       "gemini_analysis": "sdfsff",
 732 |       "factcheck_results": [],
 733 |       "vision_analysis": null
 734 |     },
 735 |     "timestamp": "2025-09-15T22:05:38.287491"
 736 |   },
 737 |   "0e91dc1f-90e9-48b2-b11a-1191e7ceed04": {
 738 |     "analysis_id": "0e91dc1f-90e9-48b2-b11a-1191e7ceed04",
 739 |     "content_type": "text",
 740 |     "content": "INdian pm is dead",
 741 |     "language": "en",
 742 |     "user_id": null,
 743 |     "verdict": "inconclusive",
 744 |     "confidence_score": 0.5,
 745 |     "summary": "Analysis completed",
 746 |     "processing_time": 3.39,
 747 |     "detailed_analysis": {
 748 |       "evidence": [
 749 |         "Analysis completed"
 750 |       ],
 751 |       "sources": [
 752 |         "Google Perspective API"
 753 |       ],
 754 |       "gemini_analysis": "INdian pm is dead",
 755 |       "factcheck_results": [],
 756 |       "vision_analysis": null
 757 |     },
 758 |     "timestamp": "2025-09-15T22:35:38.494866"
 759 |   },
 760 |   "1b061167-ff30-46b3-aa37-9c3c5b357761": {
 761 |     "analysis_id": "1b061167-ff30-46b3-aa37-9c3c5b357761",
 762 |     "content_type": "text",
 763 |     "content": "Indian pm is dead?",
 764 |     "language": "en",
 765 |     "user_id": null,
 766 |     "verdict": "inconclusive",
 767 |     "confidence_score": 0.5,
 768 |     "summary": "Analysis completed",
 769 |     "processing_time": 2.74,
 770 |     "detailed_analysis": {
 771 |       "evidence": [
 772 |         "Analysis completed"
 773 |       ],
 774 |       "sources": [
 775 |         "Google Gemini AI",
 776 |         "Google Perspective API"
 777 |       ],
 778 |       "gemini_analysis": "Indian pm is dead?",
 779 |       "factcheck_results": [],
 780 |       "vision_analysis": null
 781 |     },
 782 |     "timestamp": "2025-09-15T22:40:12.613683"
 783 |   },
 784 |   "dab6fae5-22ec-4cc5-a9c3-a712a3313144": {
 785 |     "analysis_id": "dab6fae5-22ec-4cc5-a9c3-a712a3313144",
 786 |     "content_type": "text",
 787 |     "content": "The COVID vaccine contains microchips",
 788 |     "language": "en",
 789 |     "user_id": null,
 790 |     "verdict": "false",
 791 |     "confidence_score": 0.95,
 792 |     "summary": "Fact-check by FactCheck.org confirms this is FALSE",
 793 |     "processing_time": 2.78,
 794 |     "detailed_analysis": {
 795 |       "evidence": [
 796 |         "Found 10 fact-check(s)"
 797 |       ],
 798 |       "sources": [
 799 |         "Google Fact Check API",
 800 |         "Google Perspective API"
 801 |       ],
 802 |       "gemini_analysis": "The COVID vaccine contains microchips",
 803 |       "factcheck_results": [
 804 |         {
 805 |           "verdict": "FALSE",
 806 |           "original_rating": "False",
 807 |           "source": "FactCheck.org",
 808 |           "url": "https://www.factcheck.org/2022/05/scicheck-pfizer-ceo-not-referencing-covid-19-vaccines-contrary-to-false-impression-in-posts-about-microchips/",
 809 |           "date": "",
 810 |           "summary": "\u201cAnother Conspiracy Proven True!\u201d referring to 2018 remarks by Pfizer CEO and claims about microchips in COVID-19 vaccines."
 811 |         },
 812 |         {
 813 |           "verdict": "FALSE",
 814 |           "original_rating": "False",
 815 |           "source": "FactCheck.org",
 816 |           "url": "https://www.factcheck.org/2021/07/scicheck-spoof-video-furthers-microchip-conspiracy-theory/",
 817 |           "date": "",
 818 |           "summary": "A microchip reader for pets detected a chip in the arm of a woman vaccinated against COVID-19."
 819 |         },
 820 |         {
 821 |           "verdict": "FALSE",
 822 |           "original_rating": "False",
 823 |           "source": "FactCheck.org",
 824 |           "url": "https://www.factcheck.org/2021/05/scicheck-magnet-videos-refuel-bogus-claim-of-vaccine-microchips/",
 825 |           "date": "",
 826 |           "summary": "Videos of magnets sticking to arms prove that the COVID-19 vaccines contain microchips."
 827 |         },
 828 |         {
 829 |           "verdict": "UNKNOWN",
 830 |           "original_rating": "Vaccines do not contain microchips. This is not evidence of microchips being contained in vaccines.",
 831 |           "source": "Full Fact",
 832 |           "url": "https://fullfact.org/health/phone-scan-microchip-fake/",
 833 |           "date": "2021-08-26T00:00:00Z",
 834 |           "summary": "A video appears to show a phone detecting a new \u201cproduct\u201d when placed near a man\u2019s arm, suggesting he was implanted with an electronic device when vaccinated."
 835 |         },
 836 |         {
 837 |           "verdict": "UNKNOWN",
 838 |           "original_rating": "People in the US and and England will not have to pay for vaccines. In it's initial phase, India's vaccination programme will be also be free of charge. The Indian government has yet to clarify what happens after that.",
 839 |           "source": "BBC",
 840 |           "url": "https://www.bbc.co.uk/news/55768656",
 841 |           "date": "2021-01-31T00:00:00Z",
 842 |           "summary": "The vaccine is free in India but in the US and England people have to pay"
 843 |         },
 844 |         {
 845 |           "verdict": "FALSE",
 846 |           "original_rating": "False. There is no proof that vaccines make you impotent, and these claims have been dubbed \"absolute rubbish\" by India's top drugs regulator.",
 847 |           "source": "BBC",
 848 |           "url": "https://www.bbc.co.uk/news/55768656",
 849 |           "date": "2021-01-31T00:00:00Z",
 850 |           "summary": "The vaccine will make you impotent"
 851 |         },
 852 |         {
 853 |           "verdict": "UNKNOWN",
 854 |           "original_rating": "Missing context",
 855 |           "source": "AFP Fact Check",
 856 |           "url": "https://factcheck.afp.com/doc.afp.com.9EG2NX",
 857 |           "date": "2021-07-14T12:07:00Z",
 858 |           "summary": "Video of microchip found in Pfizer vaccine"
 859 |         },
 860 |         {
 861 |           "verdict": "FALSE",
 862 |           "original_rating": "False",
 863 |           "source": "FactCheck.org",
 864 |           "url": "https://www.factcheck.org/2021/08/scicheck-health-sensors-misconstrued-as-government-tracking-microchips/",
 865 |           "date": "",
 866 |           "summary": "\"A new report from '60 Minutes' includes an interview with a scientist from the Pentagon who says that there is now a COVID microchip.\""
 867 |         },
 868 |         {
 869 |           "verdict": "FALSE",
 870 |           "original_rating": "False",
 871 |           "source": "FactCheck.org",
 872 |           "url": "https://www.factcheck.org/2020/12/covid-19-vaccines-dont-have-patient-tracking-devices/",
 873 |           "date": "",
 874 |           "summary": "COVID-19 vaccines have a microchip that \"tracks the location of the patient.\""
 875 |         },
 876 |         {
 877 |           "verdict": "FALSE",
 878 |           "original_rating": "This is false. The vaccines do not contain a microchip and there is nothing in a vaccine that could cause a magnet to stick to your skin after getting it.",
 879 |           "source": "Full Fact",
 880 |           "url": "https://fullfact.org/online/covid-vaccine-magnet/",
 881 |           "date": "2021-05-14T00:00:00Z",
 882 |           "summary": "Magnets can stick to your arm after a Covid-19 jab because they contain a microchip or other metals."
 883 |         }
 884 |       ],
 885 |       "vision_analysis": null
 886 |     },
 887 |     "timestamp": "2025-09-15T22:52:38.501893"
 888 |   },
 889 |   "51fcfdd1-2210-4aa5-ba00-fa72e58e6685": {
 890 |     "analysis_id": "51fcfdd1-2210-4aa5-ba00-fa72e58e6685",
 891 |     "content_type": "text",
 892 |     "content": "The COVID vaccine contains microchips",
 893 |     "language": "en",
 894 |     "user_id": null,
 895 |     "verdict": "false",
 896 |     "confidence_score": 0.95,
 897 |     "summary": "Fact-check by FactCheck.org confirms this is FALSE",
 898 |     "processing_time": 17.76,
 899 |     "detailed_analysis": {
 900 |       "evidence": [
 901 |         "Found 10 fact-check(s)"
 902 |       ],
 903 |       "sources": [
 904 |         "Google Gemini AI",
 905 |         "Google Fact Check API",
 906 |         "Google Perspective API"
 907 |       ],
 908 |       "gemini_analysis": "The COVID vaccine contains microchips",
 909 |       "factcheck_results": [
 910 |         {
 911 |           "verdict": "FALSE",
 912 |           "original_rating": "False",
 913 |           "source": "FactCheck.org",
 914 |           "url": "https://www.factcheck.org/2022/05/scicheck-pfizer-ceo-not-referencing-covid-19-vaccines-contrary-to-false-impression-in-posts-about-microchips/",
 915 |           "date": "",
 916 |           "summary": "\u201cAnother Conspiracy Proven True!\u201d referring to 2018 remarks by Pfizer CEO and claims about microchips in COVID-19 vaccines."
 917 |         },
 918 |         {
 919 |           "verdict": "FALSE",
 920 |           "original_rating": "False. There is no proof that vaccines make you impotent, and these claims have been dubbed \"absolute rubbish\" by India's top drugs regulator.",
 921 |           "source": "BBC",
 922 |           "url": "https://www.bbc.co.uk/news/55768656",
 923 |           "date": "2021-01-31T00:00:00Z",
 924 |           "summary": "The vaccine will make you impotent"
 925 |         },
 926 |         {
 927 |           "verdict": "UNKNOWN",
 928 |           "original_rating": "People in the US and and England will not have to pay for vaccines. In it's initial phase, India's vaccination programme will be also be free of charge. The Indian government has yet to clarify what happens after that.",
 929 |           "source": "BBC",
 930 |           "url": "https://www.bbc.co.uk/news/55768656",
 931 |           "date": "2021-01-31T00:00:00Z",
 932 |           "summary": "The vaccine is free in India but in the US and England people have to pay"
 933 |         },
 934 |         {
 935 |           "verdict": "FALSE",
 936 |           "original_rating": "False",
 937 |           "source": "FactCheck.org",
 938 |           "url": "https://www.factcheck.org/2021/07/scicheck-spoof-video-furthers-microchip-conspiracy-theory/",
 939 |           "date": "",
 940 |           "summary": "A microchip reader for pets detected a chip in the arm of a woman vaccinated against COVID-19."
 941 |         },
 942 |         {
 943 |           "verdict": "FALSE",
 944 |           "original_rating": "False",
 945 |           "source": "FactCheck.org",
 946 |           "url": "https://www.factcheck.org/2021/05/scicheck-magnet-videos-refuel-bogus-claim-of-vaccine-microchips/",
 947 |           "date": "",
 948 |           "summary": "Videos of magnets sticking to arms prove that the COVID-19 vaccines contain microchips."
 949 |         },
 950 |         {
 951 |           "verdict": "UNKNOWN",
 952 |           "original_rating": "Vaccines do not contain microchips. This is not evidence of microchips being contained in vaccines.",
 953 |           "source": "Full Fact",
 954 |           "url": "https://fullfact.org/health/phone-scan-microchip-fake/",
 955 |           "date": "2021-08-26T00:00:00Z",
 956 |           "summary": "A video appears to show a phone detecting a new \u201cproduct\u201d when placed near a man\u2019s arm, suggesting he was implanted with an electronic device when vaccinated."
 957 |         },
 958 |         {
 959 |           "verdict": "UNKNOWN",
 960 |           "original_rating": "Missing context",
 961 |           "source": "AFP Fact Check",
 962 |           "url": "https://factcheck.afp.com/doc.afp.com.9EG2NX",
 963 |           "date": "2021-07-14T12:07:00Z",
 964 |           "summary": "Video of microchip found in Pfizer vaccine"
 965 |         },
 966 |         {
 967 |           "verdict": "FALSE",
 968 |           "original_rating": "False",
 969 |           "source": "FactCheck.org",
 970 |           "url": "https://www.factcheck.org/2021/08/scicheck-health-sensors-misconstrued-as-government-tracking-microchips/",
 971 |           "date": "",
 972 |           "summary": "\"A new report from '60 Minutes' includes an interview with a scientist from the Pentagon who says that there is now a COVID microchip.\""
 973 |         },
 974 |         {
 975 |           "verdict": "FALSE",
 976 |           "original_rating": "This is false. The vaccines do not contain a microchip and there is nothing in a vaccine that could cause a magnet to stick to your skin after getting it.",
 977 |           "source": "Full Fact",
 978 |           "url": "https://fullfact.org/online/covid-vaccine-magnet/",
 979 |           "date": "2021-05-14T00:00:00Z",
 980 |           "summary": "Magnets can stick to your arm after a Covid-19 jab because they contain a microchip or other metals."
 981 |         },
 982 |         {
 983 |           "verdict": "FALSE",
 984 |           "original_rating": "False",
 985 |           "source": "FactCheck.org",
 986 |           "url": "https://www.factcheck.org/2020/12/covid-19-vaccines-dont-have-patient-tracking-devices/",
 987 |           "date": "",
 988 |           "summary": "COVID-19 vaccines have a microchip that \"tracks the location of the patient.\""
 989 |         }
 990 |       ],
 991 |       "vision_analysis": null
 992 |     },
 993 |     "timestamp": "2025-09-15T22:54:23.080733"
 994 |   },
 995 |   "a3a4ad89-4b5c-4c20-bc9a-af01b8569fb0": {
 996 |     "analysis_id": "a3a4ad89-4b5c-4c20-bc9a-af01b8569fb0",
 997 |     "content_type": "text",
 998 |     "content": "The COVID vaccine contains microchips",
 999 |     "language": "en",
1000 |     "user_id": null,
1001 |     "verdict": "false",
1002 |     "confidence_score": 0.95,
1003 |     "summary": "Fact-check by FactCheck.org confirms this is FALSE",
1004 |     "processing_time": 23.07,
1005 |     "detailed_analysis": {
1006 |       "evidence": [
1007 |         "Found 10 fact-check(s)"
1008 |       ],
1009 |       "sources": [
1010 |         "Google Gemini AI",
1011 |         "Google Fact Check API",
1012 |         "Google Perspective API"
1013 |       ],
1014 |       "gemini_analysis": "The COVID vaccine contains microchips",
1015 |       "factcheck_results": [
1016 |         {
1017 |           "verdict": "FALSE",
1018 |           "original_rating": "False",
1019 |           "source": "FactCheck.org",
1020 |           "url": "https://www.factcheck.org/2022/05/scicheck-pfizer-ceo-not-referencing-covid-19-vaccines-contrary-to-false-impression-in-posts-about-microchips/",
1021 |           "date": "",
1022 |           "summary": "\u201cAnother Conspiracy Proven True!\u201d referring to 2018 remarks by Pfizer CEO and claims about microchips in COVID-19 vaccines."
1023 |         },
1024 |         {
1025 |           "verdict": "FALSE",
1026 |           "original_rating": "False",
1027 |           "source": "FactCheck.org",
1028 |           "url": "https://www.factcheck.org/2021/07/scicheck-spoof-video-furthers-microchip-conspiracy-theory/",
1029 |           "date": "",
1030 |           "summary": "A microchip reader for pets detected a chip in the arm of a woman vaccinated against COVID-19."
1031 |         },
1032 |         {
1033 |           "verdict": "FALSE",
1034 |           "original_rating": "False",
1035 |           "source": "FactCheck.org",
1036 |           "url": "https://www.factcheck.org/2021/05/scicheck-magnet-videos-refuel-bogus-claim-of-vaccine-microchips/",
1037 |           "date": "",
1038 |           "summary": "Videos of magnets sticking to arms prove that the COVID-19 vaccines contain microchips."
1039 |         },
1040 |         {
1041 |           "verdict": "FALSE",
1042 |           "original_rating": "False. There is no proof that vaccines make you impotent, and these claims have been dubbed \"absolute rubbish\" by India's top drugs regulator.",
1043 |           "source": "BBC",
1044 |           "url": "https://www.bbc.co.uk/news/55768656",
1045 |           "date": "2021-01-31T00:00:00Z",
1046 |           "summary": "The vaccine will make you impotent"
1047 |         },
1048 |         {
1049 |           "verdict": "UNKNOWN",
1050 |           "original_rating": "People in the US and and England will not have to pay for vaccines. In it's initial phase, India's vaccination programme will be also be free of charge. The Indian government has yet to clarify what happens after that.",
1051 |           "source": "BBC",
1052 |           "url": "https://www.bbc.co.uk/news/55768656",
1053 |           "date": "2021-01-31T00:00:00Z",
1054 |           "summary": "The vaccine is free in India but in the US and England people have to pay"
1055 |         },
1056 |         {
1057 |           "verdict": "UNKNOWN",
1058 |           "original_rating": "Vaccines do not contain microchips. This is not evidence of microchips being contained in vaccines.",
1059 |           "source": "Full Fact",
1060 |           "url": "https://fullfact.org/health/phone-scan-microchip-fake/",
1061 |           "date": "2021-08-26T00:00:00Z",
1062 |           "summary": "A video appears to show a phone detecting a new \u201cproduct\u201d when placed near a man\u2019s arm, suggesting he was implanted with an electronic device when vaccinated."
1063 |         },
1064 |         {
1065 |           "verdict": "UNKNOWN",
1066 |           "original_rating": "Missing context",
1067 |           "source": "AFP Fact Check",
1068 |           "url": "https://factcheck.afp.com/doc.afp.com.9EG2NX",
1069 |           "date": "2021-07-14T12:07:00Z",
1070 |           "summary": "Video of microchip found in Pfizer vaccine"
1071 |         },
1072 |         {
1073 |           "verdict": "FALSE",
1074 |           "original_rating": "False",
1075 |           "source": "FactCheck.org",
1076 |           "url": "https://www.factcheck.org/2021/08/scicheck-health-sensors-misconstrued-as-government-tracking-microchips/",
1077 |           "date": "",
1078 |           "summary": "\"A new report from '60 Minutes' includes an interview with a scientist from the Pentagon who says that there is now a COVID microchip.\""
1079 |         },
1080 |         {
1081 |           "verdict": "FALSE",
1082 |           "original_rating": "False",
1083 |           "source": "FactCheck.org",
1084 |           "url": "https://www.factcheck.org/2020/12/covid-19-vaccines-dont-have-patient-tracking-devices/",
1085 |           "date": "",
1086 |           "summary": "COVID-19 vaccines have a microchip that \"tracks the location of the patient.\""
1087 |         },
1088 |         {
1089 |           "verdict": "FALSE",
1090 |           "original_rating": "This is false. The vaccines do not contain a microchip and there is nothing in a vaccine that could cause a magnet to stick to your skin after getting it.",
1091 |           "source": "Full Fact",
1092 |           "url": "https://fullfact.org/online/covid-vaccine-magnet/",
1093 |           "date": "2021-05-14T00:00:00Z",
1094 |           "summary": "Magnets can stick to your arm after a Covid-19 jab because they contain a microchip or other metals."
1095 |         }
1096 |       ],
1097 |       "vision_analysis": null
1098 |     },
1099 |     "timestamp": "2025-09-15T23:13:27.959467"
1100 |   },
1101 |   "9b4643dd-9639-4773-b2a5-34586e386bb3": {
1102 |     "analysis_id": "9b4643dd-9639-4773-b2a5-34586e386bb3",
1103 |     "content_type": "text",
1104 |     "content": "The COVID-19 vaccine contains microchips that track your location\n",
1105 |     "language": "en",
1106 |     "user_id": null,
1107 |     "verdict": "false",
1108 |     "confidence_score": 0.95,
1109 |     "summary": "Fact-check by FactCheck.org confirms this is FALSE",
1110 |     "processing_time": 2.42,
1111 |     "detailed_analysis": {
1112 |       "evidence": [
1113 |         "Found 6 fact-check(s)"
1114 |       ],
1115 |       "sources": [
1116 |         "Google Gemini AI",
1117 |         "Google Fact Check API",
1118 |         "Google Perspective API"
1119 |       ],
1120 |       "gemini_analysis": "The COVID-19 vaccine contains microchips that track your location\n",
1121 |       "factcheck_results": [
1122 |         {
1123 |           "verdict": "FALSE",
1124 |           "original_rating": "False",
1125 |           "source": "FactCheck.org",
1126 |           "url": "https://www.factcheck.org/2022/05/scicheck-pfizer-ceo-not-referencing-covid-19-vaccines-contrary-to-false-impression-in-posts-about-microchips/",
1127 |           "date": "",
1128 |           "summary": "\u201cAnother Conspiracy Proven True!\u201d referring to 2018 remarks by Pfizer CEO and claims about microchips in COVID-19 vaccines."
1129 |         },
1130 |         {
1131 |           "verdict": "FALSE",
1132 |           "original_rating": "False",
1133 |           "source": "FactCheck.org",
1134 |           "url": "https://www.factcheck.org/2021/05/scicheck-magnet-videos-refuel-bogus-claim-of-vaccine-microchips/",
1135 |           "date": "",
1136 |           "summary": "Videos of magnets sticking to arms prove that the COVID-19 vaccines contain microchips."
1137 |         },
1138 |         {
1139 |           "verdict": "FALSE",
1140 |           "original_rating": "False",
1141 |           "source": "FactCheck.org",
1142 |           "url": "https://www.factcheck.org/2021/07/scicheck-spoof-video-furthers-microchip-conspiracy-theory/",
1143 |           "date": "",
1144 |           "summary": "A microchip reader for pets detected a chip in the arm of a woman vaccinated against COVID-19."
1145 |         },
1146 |         {
1147 |           "verdict": "FALSE",
1148 |           "original_rating": "False",
1149 |           "source": "FactCheck.org",
1150 |           "url": "https://www.factcheck.org/2021/08/scicheck-health-sensors-misconstrued-as-government-tracking-microchips/",
1151 |           "date": "",
1152 |           "summary": "\"A new report from '60 Minutes' includes an interview with a scientist from the Pentagon who says that there is now a COVID microchip.\""
1153 |         },
1154 |         {
1155 |           "verdict": "UNKNOWN",
1156 |           "original_rating": "1",
1157 |           "source": "AFP Fact Check",
1158 |           "url": "https://factcheck.afp.com/hoax-about-bill-gates-plan-microchip-vaccine-circulates-online",
1159 |           "date": "2020-06-25T10:25:00Z",
1160 |           "summary": "Bill Gates\u2019 \u201cultimate goal\u201d is to microchip COVID-19 vaccine in order to create virtual IDs"
1161 |         },
1162 |         {
1163 |           "verdict": "FALSE",
1164 |           "original_rating": "False",
1165 |           "source": "FactCheck.org",
1166 |           "url": "https://www.factcheck.org/2020/12/covid-19-vaccines-dont-have-patient-tracking-devices/",
1167 |           "date": "",
1168 |           "summary": "COVID-19 vaccines have a microchip that \"tracks the location of the patient.\""
1169 |         }
1170 |       ],
1171 |       "vision_analysis": null
1172 |     },
1173 |     "timestamp": "2025-09-15T23:47:54.554311"
1174 |   },
1175 |   "1097eed3-2d18-4d82-a4c7-9872a4d93704": {
1176 |     "analysis_id": "1097eed3-2d18-4d82-a4c7-9872a4d93704",
1177 |     "content_type": "url",
1178 |     "content": "http://localhost:3000/",
1179 |     "language": "en",
1180 |     "user_id": null,
1181 |     "verdict": "inconclusive",
1182 |     "confidence_score": 0.65,
1183 |     "summary": "Mock analysis - configure API keys for real results",
1184 |     "processing_time": 0.0,
1185 |     "detailed_analysis": {
1186 |       "evidence": [
1187 |         "Mock analysis performed"
1188 |       ],
1189 |       "sources": [
1190 |         "Mock Data Service"
1191 |       ],
1192 |       "gemini_analysis": "http://localhost:3000/",
1193 |       "factcheck_results": [],
1194 |       "vision_analysis": null
1195 |     },
1196 |     "timestamp": "2025-09-16T00:19:59.676251"
1197 |   },
1198 |   "779db09b-d918-4496-a61c-810de5716c8e": {
1199 |     "analysis_id": "779db09b-d918-4496-a61c-810de5716c8e",
1200 |     "content_type": "text",
1201 |     "content": "ads",
1202 |     "language": "en",
1203 |     "user_id": null,
1204 |     "verdict": "false",
1205 |     "confidence_score": 0.95,
1206 |     "summary": "Fact-check by The Quint confirms this is FALSE",
1207 |     "processing_time": 2.68,
1208 |     "detailed_analysis": {
1209 |       "evidence": [
1210 |         "Found 10 fact-check(s)"
1211 |       ],
1212 |       "sources": [
1213 |         "Google Gemini AI",
1214 |         "Google Fact Check API",
1215 |         "Google Perspective API"
1216 |       ],
1217 |       "gemini_analysis": "ads",
1218 |       "factcheck_results": [
1219 |         {
1220 |           "verdict": "UNKNOWN",
1221 |           "original_rating": "Senator Denies",
1222 |           "source": "Lead Stories",
1223 |           "url": "https://leadstories.com/hoax-alert/2025/08/fact-check-video-of-amy-klobuchar-saying-perfect-titties-about-the-sydney-sweeney-ad-is-not-authentic-digital-manipulation.html",
1224 |           "date": "2025-08-21T20:35:47Z",
1225 |           "summary": "Video authentically captures Senator Amy Klobuchar complaining that if Republicans have beautiful girls with perfect titties in their ads, Democrats ads for Democrats, too."
1226 |         },
1227 |         {
1228 |           "verdict": "FALSE",
1229 |           "original_rating": "False",
1230 |           "source": "The Quint",
1231 |           "url": "https://www.thequint.com/news/webqoof/fake-amul-cartoon-ad-viral-usa-tariffs-india-fact-check",
1232 |           "date": "2025-08-14T09:16:45Z",
1233 |           "summary": "amul india's ad based on the tariffs imposed by the USA"
1234 |         },
1235 |         {
1236 |           "verdict": "FALSE",
1237 |           "original_rating": "False",
1238 |           "source": "Press Trust of India",
1239 |           "url": "https://www.ptinews.com/fact-detail/pti-fact-check-digitally-altered-amul-ad-mocking-trump-s-tariff-hike-circulates-on-social-media-with-false-claim-details-inside/2821786",
1240 |           "date": "",
1241 |           "summary": "Digitally altered Amul ad mocking Trump\u2019s tariff hike circulates on social media with false claim; details inside"
1242 |         },
1243 |         {
1244 |           "verdict": "FALSE",
1245 |           "original_rating": "False",
1246 |           "source": "Newschecker",
1247 |           "url": "https://newschecker.in/fact-check/fake-amul-ad-mocking-trump-tariffs-shared-as-real",
1248 |           "date": "2025-08-13T00:00:00Z",
1249 |           "summary": "A purported billboard ad by Amul, mocking US president Donald Trump over his decision to double tariffs on India\u2019s exports to 50%, saying, \u201cNow, \u2018Made in India\u2019 is a luxury brand in the US.\u201d"
1250 |         },
1251 |         {
1252 |           "verdict": "UNKNOWN",
1253 |           "original_rating": "Originated as Satire",
1254 |           "source": "Snopes",
1255 |           "url": "https://www.snopes.com/fact-check/american-eagle-apology-sydney-sweeney/",
1256 |           "date": "2025-07-31T14:42:56Z",
1257 |           "summary": "An image authentically shows an in-jest apology letter authored by clothing retailer American Eagle, in response to an alleged controversy over its \"Sydney Sweeney Has Great Jeans\" advertising campaign."
1258 |         },
1259 |         {
1260 |           "verdict": "UNKNOWN",
1261 |           "original_rating": "Unsubstantiated",
1262 |           "source": "AFP Fact Check",
1263 |           "url": "https://factcheck.afp.com/doc.afp.com.62692CP",
1264 |           "date": "2025-06-13T18:16:00Z",
1265 |           "summary": "Craigslist ad seeking \"seat fillers\" for Trump military parade is authentic"
1266 |         },
1267 |         {
1268 |           "verdict": "FALSE",
1269 |           "original_rating": "False. The advertisement was created as an unrelated prank.",
1270 |           "source": "AAP",
1271 |           "url": "https://www.aap.com.au/factcheck/misinformation-swirls-amid-la-unrest/",
1272 |           "date": "2025-06-13T15:10:05Z",
1273 |           "summary": "A Craigslist advertisement offered payment for people to protest and riot in Los Angeles."
1274 |         },
1275 |         {
1276 |           "verdict": "UNKNOWN",
1277 |           "original_rating": "Satire Origin",
1278 |           "source": "Lead Stories",
1279 |           "url": "https://leadstories.com/hoax-alert/2025/06/fact-check-toughest-badasses-craigslist-hakeem-jeffries.html",
1280 |           "date": "2025-06-11T16:32:04Z",
1281 |           "summary": "A controversial June 2025 Craigslist ad seeking the \"toughest badasses\" in Los Angeles was traced to Rep. Hakeem Jeffries"
1282 |         },
1283 |         {
1284 |           "verdict": "FALSE",
1285 |           "original_rating": "This is false",
1286 |           "source": "AP News",
1287 |           "url": "https://apnews.com/article/fact-check-los-angeles-paid-protesters-prank-48792aa47dcc2d8eeb9547d79d530037",
1288 |           "date": "",
1289 |           "summary": "A Craigslist ad seeking \u201cthe toughest badasses in the city\u201d is proof that Los Angeles demonstrations over immigration raids are made up of paid protesters."
1290 |         },
1291 |         {
1292 |           "verdict": "UNKNOWN",
1293 |           "original_rating": "Recycled Spoof",
1294 |           "source": "Lead Stories",
1295 |           "url": "https://leadstories.com/hoax-alert/2025/06/fact-check-chikfila-did-not-drop-pride-month-ad-with-joke-about-pickles-not-touching.html",
1296 |           "date": "2025-06-03T19:04:05Z",
1297 |           "summary": "Chick-Fil-A dropped a 2025 Pride Month ad that says their \"pickles don't touch, just like God intended.\""
1298 |         }
1299 |       ],
1300 |       "vision_analysis": null
1301 |     },
1302 |     "timestamp": "2025-09-16T00:25:10.537146"
1303 |   },
1304 |   "40a4f59f-4f5d-4d70-b9b5-33080356cf7b": {
1305 |     "analysis_id": "40a4f59f-4f5d-4d70-b9b5-33080356cf7b",
1306 |     "content_type": "text",
1307 |     "content": "Indian pm isdead\n",
1308 |     "language": "en",
1309 |     "user_id": null,
1310 |     "verdict": "inconclusive",
1311 |     "confidence_score": 0.5,
1312 |     "summary": "Analysis completed",
1313 |     "processing_time": 16.95,
1314 |     "detailed_analysis": {
1315 |       "evidence": [
1316 |         "Analysis completed"
1317 |       ],
1318 |       "sources": [
1319 |         "Google Gemini AI",
1320 |         "Google Perspective API"
1321 |       ],
1322 |       "gemini_analysis": "Indian pm isdead\n",
1323 |       "factcheck_results": [],
1324 |       "vision_analysis": null
1325 |     },
1326 |     "timestamp": "2025-09-16T12:38:22.032522"
1327 |   },
1328 |   "f255eb4c-3d21-42c3-98d9-654e8edc995a": {
1329 |     "analysis_id": "f255eb4c-3d21-42c3-98d9-654e8edc995a",
1330 |     "content_type": "text",
1331 |     "content": "COVID vaccine contains microchips",
1332 |     "language": "en",
1333 |     "user_id": null,
1334 |     "verdict": "inconclusive",
1335 |     "confidence_score": 0.5,
1336 |     "summary": "Analysis completed",
1337 |     "processing_time": 10.62,
1338 |     "detailed_analysis": {
1339 |       "evidence": [
1340 |         "Analysis completed"
1341 |       ],
1342 |       "sources": [
1343 |         "Google Gemini AI",
1344 |         "Google Perspective API"
1345 |       ],
1346 |       "gemini_analysis": "COVID vaccine contains microchips",
1347 |       "factcheck_results": [],
1348 |       "vision_analysis": null
1349 |     },
1350 |     "timestamp": "2025-09-16T13:43:31.034155"
1351 |   },
1352 |   "367f20cd-8f3c-47be-b9b4-8e065aad738b": {
1353 |     "analysis_id": "367f20cd-8f3c-47be-b9b4-8e065aad738b",
1354 |     "content_type": "text",
1355 |     "content": "sdfsd",
1356 |     "language": "en",
1357 |     "user_id": null,
1358 |     "verdict": "inconclusive",
1359 |     "confidence_score": 0.5,
1360 |     "summary": "Analysis completed",
1361 |     "processing_time": 8.02,
1362 |     "detailed_analysis": {
1363 |       "evidence": [
1364 |         "Analysis completed"
1365 |       ],
1366 |       "sources": [
1367 |         "Google Gemini AI",
1368 |         "Google Perspective API"
1369 |       ],
1370 |       "gemini_analysis": "sdfsd",
1371 |       "factcheck_results": [],
1372 |       "vision_analysis": null
1373 |     },
1374 |     "timestamp": "2025-09-16T13:53:13.381362"
1375 |   },
1376 |   "86a97c0c-5793-4c1c-baa5-8eb08f8a8b94": {
1377 |     "analysis_id": "86a97c0c-5793-4c1c-baa5-8eb08f8a8b94",
1378 |     "content_type": "text",
1379 |     "content": "Vaccine contains microchips",
1380 |     "language": "en",
1381 |     "user_id": null,
1382 |     "verdict": "inconclusive",
1383 |     "confidence_score": 0.5,
1384 |     "summary": "Analysis completed",
1385 |     "processing_time": 9.61,
1386 |     "detailed_analysis": {
1387 |       "evidence": [
1388 |         "Analysis completed"
1389 |       ],
1390 |       "sources": [
1391 |         "Google Gemini AI",
1392 |         "Google Perspective API"
1393 |       ],
1394 |       "gemini_analysis": "Vaccine contains microchips",
1395 |       "factcheck_results": [],
1396 |       "vision_analysis": null
1397 |     },
1398 |     "timestamp": "2025-09-16T13:55:41.780403"
1399 |   },
1400 |   "d5268b1f-be91-41a1-94f5-ae752cc6450f": {
1401 |     "analysis_id": "d5268b1f-be91-41a1-94f5-ae752cc6450f",
1402 |     "content_type": "text",
1403 |     "content": "COVID vaccine contains microchips",
1404 |     "language": "en",
1405 |     "user_id": null,
1406 |     "verdict": "inconclusive",
1407 |     "confidence_score": 0.5,
1408 |     "summary": "Analysis completed",
1409 |     "processing_time": 12.0,
1410 |     "detailed_analysis": {
1411 |       "evidence": [
1412 |         "Analysis completed"
1413 |       ],
1414 |       "sources": [
1415 |         "Google Gemini AI",
1416 |         "Google Perspective API"
1417 |       ],
1418 |       "gemini_analysis": "COVID vaccine contains microchips",
1419 |       "factcheck_results": [],
1420 |       "vision_analysis": null
1421 |     },
1422 |     "timestamp": "2025-09-16T13:59:03.389273"
1423 |   },
1424 |   "1a6d135f-3112-4cd7-9b90-6a6b7d85a758": {
1425 |     "analysis_id": "1a6d135f-3112-4cd7-9b90-6a6b7d85a758",
1426 |     "content_type": "text",
1427 |     "content": "asdad",
1428 |     "language": "en",
1429 |     "user_id": null,
1430 |     "verdict": "inconclusive",
1431 |     "confidence_score": 0.5,
1432 |     "summary": "Analysis completed",
1433 |     "processing_time": 6.78,
1434 |     "detailed_analysis": {
1435 |       "evidence": [
1436 |         "Analysis completed"
1437 |       ],
1438 |       "sources": [
1439 |         "Google Gemini AI",
1440 |         "Google Perspective API"
1441 |       ],
1442 |       "gemini_analysis": "asdad",
1443 |       "factcheck_results": [],
1444 |       "vision_analysis": null
1445 |     },
1446 |     "timestamp": "2025-09-16T14:00:22.539731"
1447 |   },
1448 |   "7ca6f9f5-5c6c-4b15-85fd-7b4d3d158b59": {
1449 |     "analysis_id": "7ca6f9f5-5c6c-4b15-85fd-7b4d3d158b59",
1450 |     "content_type": "text",
1451 |     "content": "Covid vaccine contains microchips",
1452 |     "language": "en",
1453 |     "user_id": null,
1454 |     "verdict": "inconclusive",
1455 |     "confidence_score": 0.5,
1456 |     "summary": "Analysis completed",
1457 |     "processing_time": 10.01,
1458 |     "detailed_analysis": {
1459 |       "evidence": [
1460 |         "Analysis completed"
1461 |       ],
1462 |       "sources": [
1463 |         "Google Gemini AI",
1464 |         "Google Perspective API"
1465 |       ],
1466 |       "gemini_analysis": "Covid vaccine contains microchips",
1467 |       "factcheck_results": [],
1468 |       "vision_analysis": null
1469 |     },
1470 |     "timestamp": "2025-09-16T14:03:23.973389"
1471 |   },
1472 |   "cde8f97d-2bb5-4ef5-bee9-7ed16f79ff6b": {
1473 |     "analysis_id": "cde8f97d-2bb5-4ef5-bee9-7ed16f79ff6b",
1474 |     "content_type": "text",
1475 |     "content": "COVID vaccine contains microchips",
1476 |     "language": "en",
1477 |     "user_id": null,
1478 |     "verdict": "inconclusive",
1479 |     "confidence_score": 0.5,
1480 |     "summary": "Analysis completed",
1481 |     "processing_time": 10.304213285446167,
1482 |     "detailed_analysis": {
1483 |       "evidence": [
1484 |         "Analysis completed"
1485 |       ],
1486 |       "sources": [
1487 |         "Google Gemini AI",
1488 |         "Google Perspective API"
1489 |       ],
1490 |       "gemini_analysis": "{'status': 'success', 'normalized_claim': 'COVID vaccine contains microchips', 'entities': [], 'claim_type': 'medical', 'confidence': 0.5, 'raw_response': '```json\\n{\\n  \"normalized_claims\": [\\n    \"COVID-19 vaccines contain microchips.\"\\n  ],\\n  \"key_entities\": [\\n    \"COVID-19 vaccines\",\\n    \"microchips\"\\n  ],\\n  \"claim_type\": \"medical\",\\n  \"confidence_level\": 1.0\\n}\\n```\\n'}",
1491 |       "factcheck_results": [],
1492 |       "vision_analysis": null
1493 |     },
1494 |     "timestamp": "2025-09-16T14:10:28.650622"
1495 |   },
1496 |   "46a78e88-b15a-4431-9acb-37d163c596d7": {
1497 |     "analysis_id": "46a78e88-b15a-4431-9acb-37d163c596d7",
1498 |     "content_type": "text",
1499 |     "content": "COVID vaccine contains microchips",
1500 |     "language": "en",
1501 |     "user_id": null,
1502 |     "verdict": "inconclusive",
1503 |     "confidence_score": 0.5,
1504 |     "summary": "Analysis completed",
1505 |     "processing_time": 10.315091371536255,
1506 |     "detailed_analysis": {
1507 |       "evidence": [
1508 |         "Analysis completed"
1509 |       ],
1510 |       "sources": [
1511 |         "Google Gemini AI",
1512 |         "Google Perspective API"
1513 |       ],
1514 |       "gemini_analysis": "{'status': 'success', 'normalized_claim': 'COVID vaccine contains microchips', 'entities': [], 'claim_type': 'medical', 'confidence': 0.5, 'raw_response': '```json\\n{\\n  \"normalized_claims\": [\\n    \"COVID-19 vaccines contain microchips.\"\\n  ],\\n  \"key_entities\": [\\n    \"COVID-19 vaccines\",\\n    \"microchips\"\\n  ],\\n  \"claim_type\": \"medical\",\\n  \"confidence_level\": 1.0\\n}\\n```\\n'}",
1515 |       "factcheck_results": [],
1516 |       "vision_analysis": null
1517 |     },
1518 |     "timestamp": "2025-09-16T14:10:38.324262"
1519 |   },
1520 |   "2b23eaf4-34cb-49cf-8772-8ade98478e69": {
1521 |     "analysis_id": "2b23eaf4-34cb-49cf-8772-8ade98478e69",
1522 |     "content_type": "text",
1523 |     "content": "Covid vaccine contains microchips",
1524 |     "language": "en",
1525 |     "user_id": null,
1526 |     "verdict": "inconclusive",
1527 |     "confidence_score": 0.5,
1528 |     "summary": "Analysis completed",
1529 |     "processing_time": 10.667479515075684,
1530 |     "detailed_analysis": {
1531 |       "evidence": [
1532 |         "Analysis completed"
1533 |       ],
1534 |       "sources": [
1535 |         "Google Gemini AI",
1536 |         "Google Perspective API"
1537 |       ],
1538 |       "gemini_analysis": "{'status': 'success', 'normalized_claim': 'Covid vaccine contains microchips', 'entities': [], 'claim_type': 'medical', 'confidence': 0.5, 'raw_response': '```json\\n{\\n  \"normalized_claims\": [\\n    \"COVID-19 vaccines contain microchips.\"\\n  ],\\n  \"key_entities\": [\\n    \"COVID-19 vaccines\",\\n    \"microchips\"\\n  ],\\n  \"claim_type\": \"medical\",\\n  \"confidence_level\": 1.0\\n}\\n```\\n'}",
1539 |       "factcheck_results": [],
1540 |       "vision_analysis": null
1541 |     },
1542 |     "timestamp": "2025-09-16T14:13:50.009710"
1543 |   },
1544 |   "2ca499d4-9923-4126-9bcf-e750b2b3ca23": {
1545 |     "analysis_id": "2ca499d4-9923-4126-9bcf-e750b2b3ca23",
1546 |     "content_type": "text",
1547 |     "content": "Covid vaccine contains microchips ",
1548 |     "language": "en",
1549 |     "user_id": null,
1550 |     "verdict": "inconclusive",
1551 |     "confidence_score": 0.5,
1552 |     "summary": "Analysis completed",
1553 |     "processing_time": 10.162510395050049,
1554 |     "detailed_analysis": {
1555 |       "evidence": [
1556 |         "Analysis completed"
1557 |       ],
1558 |       "sources": [
1559 |         "Google Gemini AI",
1560 |         "Google Perspective API"
1561 |       ],
1562 |       "gemini_analysis": "{'status': 'success', 'normalized_claim': 'Covid vaccine contains microchips ', 'entities': [], 'claim_type': 'medical', 'confidence': 0.5, 'raw_response': '```json\\n{\\n  \"normalized_claims\": [\\n    \"COVID-19 vaccines contain microchips.\"\\n  ],\\n  \"key_entities\": [\\n    \"COVID-19 vaccines\",\\n    \"microchips\"\\n  ],\\n  \"claim_type\": \"medical\",\\n  \"confidence_level\": 1.0\\n}\\n```\\n'}",
1563 |       "factcheck_results": [],
1564 |       "vision_analysis": null,
1565 |       "educational": {
1566 |         "status": "success",
1567 |         "misinformation_analysis": {
1568 |           "Logical breakdown": "- **Biological impossibility:**  Human bodies are complex. Injecting a microchip, which is a sophisticated electronic device, requires specialized equipment and procedures far beyond the capabilities of a standard vaccine injection.  It's like saying you can fit an entire computer into a sugar cube. \n- **Scientific consensus:** Leading medical and scientific organizations worldwide, including the ICMR (Indian Council of Medical Research) and WHO (World Health Organization), have explicitly stated that COVID-19 vaccines do not contain microchips.  This is based on rigorous testing and research.\n- **Manufacturing limitations:** The scale of vaccine production globally would make secretly adding microchips impossible. The process is highly regulated and transparent, with multiple checks and balances.",
1569 |           "Spread": "- **WhatsApp forwards:** This claim spreads rapidly through WhatsApp groups, often with images and videos that are manipulated or taken out of context.  \n- **Social media platforms:**  Facebook, Twitter, and YouTube have all seen the spread of this misinformation, often using sensational headlines and fear-mongering tactics. \n- **Unverified websites and blogs:**  Many websites and blogs publish false information without any credible sources or scientific evidence."
1570 |         },
1571 |         "indian_context": {
1572 |           "Indian institutions": "- The ICMR (Indian Council of Medical Research) has repeatedly debunked this claim, providing scientific evidence on the composition of COVID-19 vaccines.\n- The PIB (Press Information Bureau) has issued fact-checks and advisories against this misinformation, urging citizens to rely on credible sources.\n- The government's vaccination drive is transparent, and the vaccines used are approved by the CDSCO (Central Drugs Standard Control Organisation), ensuring safety and efficacy.  Think of it like getting a quality check from a trusted government agency before buying any product.",
1573 |           "Simple English + Hindi analogies": "- \u0938\u094b\u091a\u093f\u090f, \u0905\u0917\u0930 \u0935\u0948\u0915\u094d\u0938\u0940\u0928 \u092e\u0947\u0902 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u091a\u093f\u092a \u0939\u094b\u0924\u0940, \u0924\u094b \u0909\u0938\u0947 \u092c\u0928\u093e\u0928\u0947 \u092e\u0947\u0902 \u0915\u093f\u0924\u0928\u093e \u0916\u0930\u094d\u091a\u093e \u0914\u0930 \u0924\u0915\u0928\u0940\u0915 \u0932\u0917\u0924\u0940!  \u092f\u0939 \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0928\u0939\u0940\u0902, \u090f\u0915 \u092c\u0939\u0941\u0924 \u0939\u0940 \u091c\u091f\u093f\u0932 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u094b\u0924\u0940\u0964 (Imagine the cost and technology needed to put a microchip in a vaccine! It's not a simple injection, it's a very complex process.)\n-  \u091c\u0948\u0938\u0947 \u0939\u092e \u0915\u093f\u0938\u0940 \u0926\u0941\u0915\u093e\u0928 \u0938\u0947 \u0938\u093e\u092e\u093e\u0928 \u0916\u0930\u0940\u0926\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0909\u0938\u0915\u0940 \u0917\u0941\u0923\u0935\u0924\u094d\u0924\u093e \u0926\u0947\u0916\u0924\u0947 \u0939\u0948\u0902, \u0935\u0948\u0938\u0947 \u0939\u0940 \u0938\u0930\u0915\u093e\u0930 \u0935\u0948\u0915\u094d\u0938\u0940\u0928 \u0915\u0940 \u091c\u093e\u0901\u091a \u0915\u0930\u0915\u0947 \u0939\u0940 \u0909\u0938\u0947 \u092e\u0902\u095b\u0942\u0930\u0940 \u0926\u0947\u0924\u0940 \u0939\u0948\u0964 (Just like we check the quality of goods before buying them from a shop, the government checks the vaccine before approving it.)",
1574 |           "Indian law/policy": "- Spreading false information about vaccines can have legal consequences under various laws related to public health and misinformation.  The government actively works to combat such misinformation to protect public health."
1575 |         },
1576 |         "pattern_recognition": {
1577 |           "Fear language": "- Claims that use fear-mongering language, such as 'they don't want you to know,' or 'hidden truth,' are often red flags.\n-  Exaggerated claims about government conspiracies or hidden agendas should be treated with skepticism.",
1578 |           "Checklist": "- **Who is the source?** Is it a verified news outlet, a government agency (like PIB), or an anonymous WhatsApp forward? \n- **Is the information emotionally manipulative?** Does it play on your fears or anxieties? \n- **Does the source provide evidence?**  Are there credible scientific studies or expert opinions to back up the claim?",
1579 |           "Red flags specific to Indian context": "- Be wary of messages claiming that vaccines are part of a Western conspiracy against India. \n- Messages that use religious or caste-based appeals to spread misinformation should be treated with extreme caution."
1580 |         },
1581 |         "real_story": {
1582 |           "Evidence-based truth": "-  The composition of COVID-19 vaccines is publicly available and has been rigorously tested.  The ICMR and CDSCO websites provide detailed information.  \n-  Numerous fact-checking websites (e.g., BOOM, Alt News) have debunked the microchip claim with evidence.",
1583 |           "Historical context": "-  The spread of misinformation has led to vaccine hesitancy and, in some cases, violence (e.g., WhatsApp lynchings).  The COVID-19 pandemic saw a surge in health-related misinformation, causing significant harm.\n-  Political propaganda often uses misinformation to influence public opinion, and health-related claims are frequently targeted.",
1584 |           "Balanced perspective": "- While some individuals may have concerns about vaccines, these concerns should be addressed through credible sources and scientific evidence, not through unsubstantiated claims about microchips.  The benefits of vaccination far outweigh the risks."
1585 |         },
1586 |         "raw_response": "```json\n{\n  \"misinformation_analysis\": {\n    \"Logical breakdown\": \"- **Biological impossibility:**  Human bodies are complex. Injecting a microchip, which is a sophisticated electronic device, requires specialized equipment and procedures far beyond the capabilities of a standard vaccine injection.  It's like saying you can fit an entire computer into a sugar cube. \\n- **Scientific consensus:** Leading medical and scientific organizations worldwide, including the ICMR (Indian Council of Medical Research) and WHO (World Health Organization), have explicitly stated that COVID-19 vaccines do not contain microchips.  This is based on rigorous testing and research.\\n- **Manufacturing limitations:** The scale of vaccine production globally would make secretly adding microchips impossible. The process is highly regulated and transparent, with multiple checks and balances.\",\n    \"Spread\": \"- **WhatsApp forwards:** This claim spreads rapidly through WhatsApp groups, often with images and videos that are manipulated or taken out of context.  \\n- **Social media platforms:**  Facebook, Twitter, and YouTube have all seen the spread of this misinformation, often using sensational headlines and fear-mongering tactics. \\n- **Unverified websites and blogs:**  Many websites and blogs publish false information without any credible sources or scientific evidence.\"\n  },\n  \"indian_context\": {\n    \"Indian institutions\": \"- The ICMR (Indian Council of Medical Research) has repeatedly debunked this claim, providing scientific evidence on the composition of COVID-19 vaccines.\\n- The PIB (Press Information Bureau) has issued fact-checks and advisories against this misinformation, urging citizens to rely on credible sources.\\n- The government's vaccination drive is transparent, and the vaccines used are approved by the CDSCO (Central Drugs Standard Control Organisation), ensuring safety and efficacy.  Think of it like getting a quality check from a trusted government agency before buying any product.\",\n    \"Simple English + Hindi analogies\": \"- \u0938\u094b\u091a\u093f\u090f, \u0905\u0917\u0930 \u0935\u0948\u0915\u094d\u0938\u0940\u0928 \u092e\u0947\u0902 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u091a\u093f\u092a \u0939\u094b\u0924\u0940, \u0924\u094b \u0909\u0938\u0947 \u092c\u0928\u093e\u0928\u0947 \u092e\u0947\u0902 \u0915\u093f\u0924\u0928\u093e \u0916\u0930\u094d\u091a\u093e \u0914\u0930 \u0924\u0915\u0928\u0940\u0915 \u0932\u0917\u0924\u0940!  \u092f\u0939 \u090f\u0915 \u0938\u093e\u0927\u093e\u0930\u0923 \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0928\u0939\u0940\u0902, \u090f\u0915 \u092c\u0939\u0941\u0924 \u0939\u0940 \u091c\u091f\u093f\u0932 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u094b\u0924\u0940\u0964 (Imagine the cost and technology needed to put a microchip in a vaccine! It's not a simple injection, it's a very complex process.)\\n-  \u091c\u0948\u0938\u0947 \u0939\u092e \u0915\u093f\u0938\u0940 \u0926\u0941\u0915\u093e\u0928 \u0938\u0947 \u0938\u093e\u092e\u093e\u0928 \u0916\u0930\u0940\u0926\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0909\u0938\u0915\u0940 \u0917\u0941\u0923\u0935\u0924\u094d\u0924\u093e \u0926\u0947\u0916\u0924\u0947 \u0939\u0948\u0902, \u0935\u0948\u0938\u0947 \u0939\u0940 \u0938\u0930\u0915\u093e\u0930 \u0935\u0948\u0915\u094d\u0938\u0940\u0928 \u0915\u0940 \u091c\u093e\u0901\u091a \u0915\u0930\u0915\u0947 \u0939\u0940 \u0909\u0938\u0947 \u092e\u0902\u095b\u0942\u0930\u0940 \u0926\u0947\u0924\u0940 \u0939\u0948\u0964 (Just like we check the quality of goods before buying them from a shop, the government checks the vaccine before approving it.)\",\n    \"Indian law/policy\": \"- Spreading false information about vaccines can have legal consequences under various laws related to public health and misinformation.  The government actively works to combat such misinformation to protect public health.\"\n  },\n  \"pattern_recognition\": {\n    \"Fear language\": \"- Claims that use fear-mongering language, such as 'they don't want you to know,' or 'hidden truth,' are often red flags.\\n-  Exaggerated claims about government conspiracies or hidden agendas should be treated with skepticism.\",\n    \"Checklist\": \"- **Who is the source?** Is it a verified news outlet, a government agency (like PIB), or an anonymous WhatsApp forward? \\n- **Is the information emotionally manipulative?** Does it play on your fears or anxieties? \\n- **Does the source provide evidence?**  Are there credible scientific studies or expert opinions to back up the claim?\",\n    \"Red flags specific to Indian context\": \"- Be wary of messages claiming that vaccines are part of a Western conspiracy against India. \\n- Messages that use religious or caste-based appeals to spread misinformation should be treated with extreme caution.\"\n  },\n  \"real_story\": {\n    \"Evidence-based truth\": \"-  The composition of COVID-19 vaccines is publicly available and has been rigorously tested.  The ICMR and CDSCO websites provide detailed information.  \\n-  Numerous fact-checking websites (e.g., BOOM, Alt News) have debunked the microchip claim with evidence.\",\n    \"Historical context\": \"-  The spread of misinformation has led to vaccine hesitancy and, in some cases, violence (e.g., WhatsApp lynchings).  The COVID-19 pandemic saw a surge in health-related misinformation, causing significant harm.\\n-  Political propaganda often uses misinformation to influence public opinion, and health-related claims are frequently targeted.\",\n    \"Balanced perspective\": \"- While some individuals may have concerns about vaccines, these concerns should be addressed through credible sources and scientific evidence, not through unsubstantiated claims about microchips.  The benefits of vaccination far outweigh the risks.\"\n  }\n}\n```\n"
1587 |       }
1588 |     },
1589 |     "timestamp": "2025-09-16T14:17:53.927491"
1590 |   },
1591 |   "264e7ea1-9e46-412a-95a8-5a23138c4158": {
1592 |     "analysis_id": "264e7ea1-9e46-412a-95a8-5a23138c4158",
1593 |     "content_type": "text",
1594 |     "content": "sfsf",
1595 |     "language": "en",
1596 |     "user_id": null,
1597 |     "verdict": "inconclusive",
1598 |     "confidence_score": 0.5,
1599 |     "summary": "Analysis completed",
1600 |     "processing_time": 7.656472682952881,
1601 |     "detailed_analysis": {
1602 |       "evidence": [
1603 |         "Analysis completed"
1604 |       ],
1605 |       "sources": [
1606 |         "Google Gemini AI",
1607 |         "Google Perspective API"
1608 |       ],
1609 |       "gemini_analysis": "{'status': 'success', 'normalized_claim': 'sfsf', 'entities': [], 'claim_type': 'unidentifiable', 'confidence': 0.5, 'raw_response': '```json\\n{\\n  \"normalized_claims\": [],\\n  \"key_entities\": [],\\n  \"claim_type\": \"unidentifiable\",\\n  \"confidence_level\": 0.0\\n}\\n```\\n'}",
1610 |       "factcheck_results": [],
1611 |       "vision_analysis": null,
1612 |       "educational": {
1613 |         "status": "success",
1614 |         "misinformation_analysis": {
1615 |           "Logical breakdown": "The claim \"sfsf\" lacks any inherent meaning or proposition.  It cannot be evaluated for truth or falsehood as it is not a statement or assertion.  Misinformation requires a claim to be assessed.",
1616 |           "Spread": "Meaningless strings of characters like \"sfsf\" are unlikely to spread widely on their own.  However, such strings could be embedded within a larger piece of misinformation, perhaps as a code or placeholder within a manipulated image or video.  They might also be used as a nonsensical filler in spam messages."
1617 |         },
1618 |         "indian_context": {
1619 |           "Reference Indian institutions": "Since \"sfsf\" is not a claim, no specific Indian institution like ICMR, PIB, RBI, or the Election Commission is directly relevant. However, these institutions play crucial roles in combating misinformation.  For example, the PIB fact-checks government-related claims, while the Election Commission works to ensure fair elections free from misinformation.",
1620 |           "Simple English + Hindi analogies": "Imagine someone sending you a message with just the words \"jhjh.\"  It's meaningless, right?  Similarly, \"sfsf\" is just a random collection of letters with no informational value.  \u091c\u0948\u0938\u0947 \u0915\u094b\u0908 \u0906\u092a\u0915\u094b \u0938\u093f\u0930\u094d\u095e \"jhjh\" \u0932\u093f\u0916\u0915\u0930 \u092e\u0948\u0938\u0947\u091c \u092d\u0947\u091c\u0947, \u0935\u0948\u0938\u093e \u0939\u0940 \"sfsf\" \u092d\u0940 \u092c\u0947\u092e\u0924\u0932\u092c \u0939\u0948\u0964",
1621 |           "How Indian law/policy protects citizens": "The Indian government has taken steps to combat the spread of misinformation, including legal provisions against spreading false news that can cause harm.  The Information Technology Act, 2000, and other laws can be used to address the spread of harmful misinformation, though the application of these laws requires careful consideration of freedom of speech."
1622 |         },
1623 |         "pattern_recognition": {
1624 |           "Fear language": "\"sfsf\" itself doesn't use fear language, but it could be part of a larger message that does.  Look for claims that evoke strong emotions like fear, anger, or hatred to manipulate you.",
1625 |           "Checklist": "Always ask: Who is the source? Is it a verified government source like PIB or a forwarded message from an unknown contact? Does the message try to manipulate your emotions?  Does it make outrageous claims without evidence?",
1626 |           "Red flags specific to Indian context": "Be wary of messages playing on religious or caste tensions, or those that exploit existing social divisions in India.  Also, be cautious of messages promising unrealistic benefits or containing unsubstantiated medical claims."
1627 |         },
1628 |         "real_story": {
1629 |           "Evidence-based truth": "There is no truth or falsehood to \"sfsf\" itself.  It's meaningless.  The real story is the importance of critical thinking and verifying information before sharing it.",
1630 |           "Historical context": "Past instances of misinformation in India, such as WhatsApp lynchings, COVID-19 vaccine misinformation, and politically motivated fake news, highlight the dangers of unverified information.  These events underscore the need for media literacy and responsible information sharing.",
1631 |           "Balanced perspective": "The absence of meaning in \"sfsf\" doesn't diminish the importance of fighting misinformation.  It highlights the need for vigilance and critical evaluation of any information received, regardless of its form."
1632 |         },
1633 |         "raw_response": "```json\n{\n  \"misinformation_analysis\": {\n    \"Logical breakdown\": \"The claim \\\"sfsf\\\" lacks any inherent meaning or proposition.  It cannot be evaluated for truth or falsehood as it is not a statement or assertion.  Misinformation requires a claim to be assessed.\",\n    \"Spread\": \"Meaningless strings of characters like \\\"sfsf\\\" are unlikely to spread widely on their own.  However, such strings could be embedded within a larger piece of misinformation, perhaps as a code or placeholder within a manipulated image or video.  They might also be used as a nonsensical filler in spam messages.\"\n  },\n  \"indian_context\": {\n    \"Reference Indian institutions\": \"Since \\\"sfsf\\\" is not a claim, no specific Indian institution like ICMR, PIB, RBI, or the Election Commission is directly relevant. However, these institutions play crucial roles in combating misinformation.  For example, the PIB fact-checks government-related claims, while the Election Commission works to ensure fair elections free from misinformation.\",\n    \"Simple English + Hindi analogies\": \"Imagine someone sending you a message with just the words \\\"jhjh.\\\"  It's meaningless, right?  Similarly, \\\"sfsf\\\" is just a random collection of letters with no informational value.  \u091c\u0948\u0938\u0947 \u0915\u094b\u0908 \u0906\u092a\u0915\u094b \u0938\u093f\u0930\u094d\u095e \\\"jhjh\\\" \u0932\u093f\u0916\u0915\u0930 \u092e\u0948\u0938\u0947\u091c \u092d\u0947\u091c\u0947, \u0935\u0948\u0938\u093e \u0939\u0940 \\\"sfsf\\\" \u092d\u0940 \u092c\u0947\u092e\u0924\u0932\u092c \u0939\u0948\u0964\",\n    \"How Indian law/policy protects citizens\": \"The Indian government has taken steps to combat the spread of misinformation, including legal provisions against spreading false news that can cause harm.  The Information Technology Act, 2000, and other laws can be used to address the spread of harmful misinformation, though the application of these laws requires careful consideration of freedom of speech.\"\n  },\n  \"pattern_recognition\": {\n    \"Fear language\": \"\\\"sfsf\\\" itself doesn't use fear language, but it could be part of a larger message that does.  Look for claims that evoke strong emotions like fear, anger, or hatred to manipulate you.\",\n    \"Checklist\": \"Always ask: Who is the source? Is it a verified government source like PIB or a forwarded message from an unknown contact? Does the message try to manipulate your emotions?  Does it make outrageous claims without evidence?\",\n    \"Red flags specific to Indian context\": \"Be wary of messages playing on religious or caste tensions, or those that exploit existing social divisions in India.  Also, be cautious of messages promising unrealistic benefits or containing unsubstantiated medical claims.\"\n  },\n  \"real_story\": {\n    \"Evidence-based truth\": \"There is no truth or falsehood to \\\"sfsf\\\" itself.  It's meaningless.  The real story is the importance of critical thinking and verifying information before sharing it.\",\n    \"Historical context\": \"Past instances of misinformation in India, such as WhatsApp lynchings, COVID-19 vaccine misinformation, and politically motivated fake news, highlight the dangers of unverified information.  These events underscore the need for media literacy and responsible information sharing.\",\n    \"Balanced perspective\": \"The absence of meaning in \\\"sfsf\\\" doesn't diminish the importance of fighting misinformation.  It highlights the need for vigilance and critical evaluation of any information received, regardless of its form.\"\n  }\n}\n```\n"
1634 |       }
1635 |     },
1636 |     "timestamp": "2025-09-16T14:19:04.559288"
1637 |   },
1638 |   "21f12358-8cef-45e3-b089-a721d7e7920d": {
1639 |     "analysis_id": "21f12358-8cef-45e3-b089-a721d7e7920d",
1640 |     "content_type": "text",
1641 |     "content": "Vaccine contains microchips",
1642 |     "language": "en",
1643 |     "user_id": null,
1644 |     "verdict": "inconclusive",
1645 |     "confidence_score": 0.5,
1646 |     "summary": "Analysis completed",
1647 |     "processing_time": 9.961223125457764,
1648 |     "detailed_analysis": {
1649 |       "evidence": [
1650 |         "Analysis completed"
1651 |       ],
1652 |       "sources": [
1653 |         "Google Gemini AI",
1654 |         "Google Perspective API"
1655 |       ],
1656 |       "gemini_analysis": "{'status': 'success', 'normalized_claim': 'Vaccine contains microchips', 'entities': [], 'claim_type': ['medical', 'scientific'], 'confidence': 0.5, 'raw_response': '```json\\n{\\n  \"normalized_claims\": [\\n    \"Vaccines contain microchips.\"\\n  ],\\n  \"key_entities\": [\\n    \"vaccines\",\\n    \"microchips\"\\n  ],\\n  \"claim_type\": [\\n    \"medical\",\\n    \"scientific\"\\n  ],\\n  \"confidence_level\": 1.0\\n}\\n```\\n'}",
1657 |       "factcheck_results": [],
1658 |       "vision_analysis": null,
1659 |       "educational": {
1660 |         "status": "success",
1661 |         "misinformation_analysis": {
1662 |           "Logical breakdown": "- Vaccines are developed to build immunity against diseases.  They contain weakened or inactive parts of a virus or bacteria, or genetic material that instructs our cells to produce an immune response.  Microchips are electronic components; they are far too complex and large to be injected via a standard needle and would require entirely different manufacturing and injection processes.  The claim ignores basic biology and engineering principles.\n- This misinformation spreads through social media platforms like WhatsApp, Facebook, and YouTube.  It often appears as forwarded messages, posts on dubious websites, and manipulated videos showing purported evidence (often blurry or out of context).  The lack of scientific literacy and trust in official sources makes it easy to spread.",
1663 |           "Spread mechanisms": "- WhatsApp forwards:  The claim is often shared in personal chats and group discussions, making it difficult to track and counter.\n- Fake news websites/blogs:  Websites with misleading headlines and fabricated articles spread the claim to a wider audience.\n- Manipulated videos:  Videos are edited to create a false impression of microchips being injected."
1664 |         },
1665 |         "indian_context": {
1666 |           "Indian institutions": "- The ICMR (Indian Council of Medical Research) and CDSCO (Central Drugs Standard Control Organisation) rigorously test and approve vaccines in India, ensuring safety and efficacy.  They have clearly stated that no vaccines contain microchips.\n- The PIB (Press Information Bureau) regularly debunks such misinformation and provides accurate information on government health initiatives.  They have issued statements clarifying the safety and composition of Indian vaccines.\n- The government's efforts to promote vaccination are undermined by such false claims, hindering the national health goals.",
1667 |           "Simple explanation": "- \u0938\u094b\u091a\u093f\u090f, \u090f\u0915 \u091b\u094b\u091f\u093e \u0938\u093e \u091f\u0940\u0915\u093e, \u0914\u0930 \u0909\u0938\u092e\u0947\u0902 \u090f\u0915 \u092a\u0942\u0930\u093e \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u091a\u093f\u092a?  \u092f\u0939 \u0935\u0948\u091c\u094d\u091e\u093e\u0928\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u0905\u0938\u0902\u092d\u0935 \u0939\u0948!  \u091f\u0940\u0915\u0947 \u092c\u0940\u092e\u093e\u0930\u093f\u092f\u094b\u0902 \u0938\u0947 \u092c\u091a\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092c\u0928\u093e\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902, \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u091a\u093f\u092a\u094d\u0938 \u0928\u0939\u0940\u0902 \u0921\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f\u0964 (Imagine, a small vaccine, and a whole microchip inside? It's scientifically impossible! Vaccines are made to protect against diseases, not to insert microchips.)\n- Indian law protects citizens from harm caused by such misinformation.  Spreading false information about vaccines can lead to legal consequences."
1668 |         },
1669 |         "pattern_recognition": {
1670 |           "Fear language": "- The claim uses fear-mongering tactics, playing on anxieties about government control and technological advancements.  Look for phrases like 'they don't want you to know,' 'secret agenda,' or 'hidden truth.'",
1671 |           "Source checklist": "- **Who is the source?** Is it a reputable news organization, a government agency (like PIB), or an anonymous WhatsApp forward?  Be wary of unverified sources.\n- **Is the information emotionally manipulative?** Does it appeal to your fears or anger rather than presenting facts and evidence?\n- **Does it lack scientific evidence?** Does it rely on anecdotal evidence or conspiracy theories instead of scientific studies?",
1672 |           "Indian context red flags": "- Claims that specifically target Indian institutions or cultural beliefs should be treated with extra skepticism.  Be wary of claims that link vaccines to specific religious or caste groups."
1673 |         },
1674 |         "real_story": {
1675 |           "Evidence-based truth": "- Vaccines contain antigens (weakened or inactive parts of a virus or bacteria) or genetic material (mRNA or DNA) that triggers an immune response.  Their composition is publicly available and verified by regulatory bodies like the ICMR and CDSCO.\n- Numerous scientific studies and global health organizations (WHO) confirm the safety and efficacy of vaccines.  There is no credible evidence to support the claim that vaccines contain microchips.",
1676 |           "Historical context": "- The spread of misinformation about vaccines has led to vaccine hesitancy and decreased vaccination rates globally, including in India.  This has resulted in outbreaks of preventable diseases.  Past instances of WhatsApp forwards leading to violence (lynchings) highlight the dangers of unchecked misinformation.\n- During the COVID-19 pandemic, similar false claims about vaccines circulated widely, causing significant public health challenges.",
1677 |           "Balanced perspective": "- While some individuals may have concerns about vaccines, these concerns should be addressed through evidence-based discussions and not through the spread of false and harmful claims.  It's crucial to rely on credible sources and consult with healthcare professionals for accurate information."
1678 |         },
1679 |         "raw_response": "```json\n{\n  \"misinformation_analysis\": {\n    \"Logical breakdown\": \"- Vaccines are developed to build immunity against diseases.  They contain weakened or inactive parts of a virus or bacteria, or genetic material that instructs our cells to produce an immune response.  Microchips are electronic components; they are far too complex and large to be injected via a standard needle and would require entirely different manufacturing and injection processes.  The claim ignores basic biology and engineering principles.\\n- This misinformation spreads through social media platforms like WhatsApp, Facebook, and YouTube.  It often appears as forwarded messages, posts on dubious websites, and manipulated videos showing purported evidence (often blurry or out of context).  The lack of scientific literacy and trust in official sources makes it easy to spread.\",\n    \"Spread mechanisms\": \"- WhatsApp forwards:  The claim is often shared in personal chats and group discussions, making it difficult to track and counter.\\n- Fake news websites/blogs:  Websites with misleading headlines and fabricated articles spread the claim to a wider audience.\\n- Manipulated videos:  Videos are edited to create a false impression of microchips being injected.\"\n  },\n  \"indian_context\": {\n    \"Indian institutions\": \"- The ICMR (Indian Council of Medical Research) and CDSCO (Central Drugs Standard Control Organisation) rigorously test and approve vaccines in India, ensuring safety and efficacy.  They have clearly stated that no vaccines contain microchips.\\n- The PIB (Press Information Bureau) regularly debunks such misinformation and provides accurate information on government health initiatives.  They have issued statements clarifying the safety and composition of Indian vaccines.\\n- The government's efforts to promote vaccination are undermined by such false claims, hindering the national health goals.\",\n    \"Simple explanation\": \"- \u0938\u094b\u091a\u093f\u090f, \u090f\u0915 \u091b\u094b\u091f\u093e \u0938\u093e \u091f\u0940\u0915\u093e, \u0914\u0930 \u0909\u0938\u092e\u0947\u0902 \u090f\u0915 \u092a\u0942\u0930\u093e \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u091a\u093f\u092a?  \u092f\u0939 \u0935\u0948\u091c\u094d\u091e\u093e\u0928\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u0905\u0938\u0902\u092d\u0935 \u0939\u0948!  \u091f\u0940\u0915\u0947 \u092c\u0940\u092e\u093e\u0930\u093f\u092f\u094b\u0902 \u0938\u0947 \u092c\u091a\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092c\u0928\u093e\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902, \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u091a\u093f\u092a\u094d\u0938 \u0928\u0939\u0940\u0902 \u0921\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f\u0964 (Imagine, a small vaccine, and a whole microchip inside? It's scientifically impossible! Vaccines are made to protect against diseases, not to insert microchips.)\\n- Indian law protects citizens from harm caused by such misinformation.  Spreading false information about vaccines can lead to legal consequences.\"\n  },\n  \"pattern_recognition\": {\n    \"Fear language\": \"- The claim uses fear-mongering tactics, playing on anxieties about government control and technological advancements.  Look for phrases like 'they don't want you to know,' 'secret agenda,' or 'hidden truth.'\",\n    \"Source checklist\": \"- **Who is the source?** Is it a reputable news organization, a government agency (like PIB), or an anonymous WhatsApp forward?  Be wary of unverified sources.\\n- **Is the information emotionally manipulative?** Does it appeal to your fears or anger rather than presenting facts and evidence?\\n- **Does it lack scientific evidence?** Does it rely on anecdotal evidence or conspiracy theories instead of scientific studies?\",\n    \"Indian context red flags\": \"- Claims that specifically target Indian institutions or cultural beliefs should be treated with extra skepticism.  Be wary of claims that link vaccines to specific religious or caste groups.\"\n  },\n  \"real_story\": {\n    \"Evidence-based truth\": \"- Vaccines contain antigens (weakened or inactive parts of a virus or bacteria) or genetic material (mRNA or DNA) that triggers an immune response.  Their composition is publicly available and verified by regulatory bodies like the ICMR and CDSCO.\\n- Numerous scientific studies and global health organizations (WHO) confirm the safety and efficacy of vaccines.  There is no credible evidence to support the claim that vaccines contain microchips.\",\n    \"Historical context\": \"- The spread of misinformation about vaccines has led to vaccine hesitancy and decreased vaccination rates globally, including in India.  This has resulted in outbreaks of preventable diseases.  Past instances of WhatsApp forwards leading to violence (lynchings) highlight the dangers of unchecked misinformation.\\n- During the COVID-19 pandemic, similar false claims about vaccines circulated widely, causing significant public health challenges.\",\n    \"Balanced perspective\": \"- While some individuals may have concerns about vaccines, these concerns should be addressed through evidence-based discussions and not through the spread of false and harmful claims.  It's crucial to rely on credible sources and consult with healthcare professionals for accurate information.\"\n  }\n}\n```\n"
1680 |       }
1681 |     },
1682 |     "timestamp": "2025-09-16T14:22:35.723798"
1683 |   },
1684 |   "3d5e1bbe-c74f-4cc9-b040-3143bc6fc0be": {
1685 |     "analysis_id": "3d5e1bbe-c74f-4cc9-b040-3143bc6fc0be",
1686 |     "content_type": "text",
1687 |     "content": "COVID vaccine contains microchips",
1688 |     "language": "en",
1689 |     "user_id": null,
1690 |     "verdict": "inconclusive",
1691 |     "confidence_score": 0.5,
1692 |     "summary": "Analysis completed",
1693 |     "processing_time": 13.872032403945923,
1694 |     "detailed_analysis": {
1695 |       "evidence": [
1696 |         "Analysis completed"
1697 |       ],
1698 |       "sources": [
1699 |         "Google Gemini AI",
1700 |         "Google Perspective API"
1701 |       ],
1702 |       "gemini_analysis": "{'status': 'success', 'normalized_claim': 'COVID vaccine contains microchips', 'entities': [], 'claim_type': 'medical', 'confidence': 0.5, 'raw_response': '```json\\n{\\n  \"normalized_claims\": [\\n    \"COVID-19 vaccines contain microchips.\"\\n  ],\\n  \"key_entities\": [\\n    \"COVID-19 vaccines\",\\n    \"microchips\"\\n  ],\\n  \"claim_type\": \"medical\",\\n  \"confidence_level\": 1.0\\n}\\n```\\n'}",
1703 |       "factcheck_results": [],
1704 |       "vision_analysis": null,
1705 |       "educational": {
1706 |         "status": "success",
1707 |         "misinformation_analysis": {
1708 |           "Logical breakdown": "- **Biological impossibility:**  Human bodies are incredibly complex. Injecting a microchip, which is a sophisticated electronic device, requires specialized equipment and procedures far beyond the capabilities of a standard vaccine injection.  It's like saying you can fit an entire computer inside a sugar cube.\n- **Scientific consensus:**  Leading medical and scientific organizations worldwide, including the ICMR (Indian Council of Medical Research) and WHO (World Health Organization), have explicitly debunked this claim. There is no scientific evidence whatsoever supporting the presence of microchips in COVID-19 vaccines.\n- **Manufacturing and logistics:** The sheer scale of vaccine production and distribution globally makes the secret insertion of microchips practically impossible.  Imagine trying to secretly add microchips to billions of vaccine doses without anyone noticing \u2013 it's logistically absurd.\n- **Spread:** This misinformation spreads primarily through social media platforms like WhatsApp, Facebook, and YouTube. It often appears as forwarded messages, manipulated videos, and posts on unreliable websites.",
1709 |           "How it spreads": "- **WhatsApp forwards:**  The claim is frequently shared as a forwarded message, often with alarming images and videos.\n- **Social media posts:**  Fake news websites and social media accounts deliberately spread this false information to gain attention or promote a specific agenda.\n- **Manipulated videos:**  Videos are often edited to create a false impression of microchips being found in vaccines."
1710 |         },
1711 |         "indian_context": {
1712 |           "Reference Indian institutions": "- The ICMR (Indian Council of Medical Research) has consistently stated that COVID-19 vaccines do not contain microchips.  They are the leading authority on medical research in India.\n- The PIB (Press Information Bureau), the government's official source of information, has also debunked this claim.\n- The CDSCO (Central Drugs Standard Control Organisation) regulates and approves vaccines in India. They would have detected such a significant addition to the vaccine composition.\n-  Spreading such misinformation can have legal consequences under Indian law, as it can incite panic and distrust in the government's efforts to control the pandemic.",
1713 |           "Simple English + Hindi analogies": "- \u0938\u094b\u091a\u093f\u090f, \u0915\u094d\u092f\u093e \u0906\u092a \u090f\u0915 \u091b\u094b\u091f\u0947 \u0938\u0947 \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u092e\u0947\u0902 \u090f\u0915 \u092a\u0942\u0930\u093e \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u091a\u093f\u092a \u0921\u093e\u0932 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902?  \u092f\u0939 \u0905\u0938\u0902\u092d\u0935 \u0939\u0948! (Imagine, can you fit a whole computer chip into a small injection? It's impossible!)\n-  \u091c\u0948\u0938\u0947 \u091b\u094b\u091f\u0947 \u092c\u091a\u094d\u091a\u094b\u0902 \u0915\u094b \u0921\u0930\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091d\u0942\u0920\u0940 \u0915\u0939\u093e\u0928\u093f\u092f\u093e\u0901 \u0938\u0941\u0928\u093e\u0908 \u091c\u093e\u0924\u0940 \u0939\u0948\u0902, \u0935\u0948\u0938\u0947 \u0939\u0940 \u092f\u0939 \u092d\u0940 \u090f\u0915 \u091d\u0942\u0920\u0940 \u0915\u0939\u093e\u0928\u0940 \u0939\u0948\u0964 (Just like false stories are told to scare young children, this is also a false story.)\n-  \u092d\u093e\u0930\u0924 \u0938\u0930\u0915\u093e\u0930 \u0914\u0930 \u0935\u0948\u091c\u094d\u091e\u093e\u0928\u093f\u0915\u094b\u0902 \u0928\u0947 \u0907\u0938 \u0926\u093e\u0935\u0947 \u0915\u094b \u0916\u093e\u0930\u093f\u091c \u0915\u0930 \u0926\u093f\u092f\u093e \u0939\u0948\u0964 (The Indian government and scientists have rejected this claim.)"
1714 |         },
1715 |         "pattern_recognition": {
1716 |           "Fear language": "- The claim uses fear-mongering tactics, suggesting a secret government conspiracy to control the population through vaccines.\n-  It often uses phrases like \"they don't want you to know\" to create suspicion and distrust.",
1717 |           "Checklist": "- **Who is the source?** Is it a verified news source, a government agency (like PIB), or an anonymous WhatsApp forward?\n- **Is the information emotionally manipulative?** Does it try to trigger fear, anger, or outrage?\n- **Does it make extraordinary claims without credible evidence?**  Claims about microchips in vaccines require strong scientific evidence, not just anecdotal stories or manipulated videos.",
1718 |           "Red flags specific to Indian context": "- Be wary of messages shared in WhatsApp groups, especially those with inflammatory language or conspiracy theories.\n- Check the authenticity of the source before sharing any information related to health or government policies.  Look for official government websites (.gov.in) and reputable news sources."
1719 |         },
1720 |         "real_story": {
1721 |           "Evidence-based truth with Indian sources": "- COVID-19 vaccines are developed using mRNA technology or inactivated viruses.  These technologies are well-established and have been used for other vaccines for years.  The ICMR and CDSCO have rigorous testing and approval processes for all vaccines used in India.\n-  The composition of vaccines is publicly available and can be verified through official sources like the CDSCO website.",
1722 |           "Historical context": "- The spread of misinformation has led to vaccine hesitancy and even violence in the past.  The COVID-19 pandemic saw several instances of WhatsApp forwards causing panic and unrest.  False information about vaccines can lead to serious health consequences for individuals and society as a whole.\n-  Past instances of misinformation campaigns in India, such as those surrounding COVID-19 treatments and election results, highlight the importance of verifying information from reliable sources.",
1723 |           "Balanced perspective": "- While some individuals may have concerns about vaccines, it's crucial to rely on scientific evidence and official sources for information.  The benefits of vaccination far outweigh the risks, as proven by the significant reduction in COVID-19 cases and deaths in vaccinated populations."
1724 |         },
1725 |         "raw_response": "```json\n{\n  \"misinformation_analysis\": {\n    \"Logical breakdown\": \"- **Biological impossibility:**  Human bodies are incredibly complex. Injecting a microchip, which is a sophisticated electronic device, requires specialized equipment and procedures far beyond the capabilities of a standard vaccine injection.  It's like saying you can fit an entire computer inside a sugar cube.\\n- **Scientific consensus:**  Leading medical and scientific organizations worldwide, including the ICMR (Indian Council of Medical Research) and WHO (World Health Organization), have explicitly debunked this claim. There is no scientific evidence whatsoever supporting the presence of microchips in COVID-19 vaccines.\\n- **Manufacturing and logistics:** The sheer scale of vaccine production and distribution globally makes the secret insertion of microchips practically impossible.  Imagine trying to secretly add microchips to billions of vaccine doses without anyone noticing \u2013 it's logistically absurd.\\n- **Spread:** This misinformation spreads primarily through social media platforms like WhatsApp, Facebook, and YouTube. It often appears as forwarded messages, manipulated videos, and posts on unreliable websites.\",\n    \"How it spreads\": \"- **WhatsApp forwards:**  The claim is frequently shared as a forwarded message, often with alarming images and videos.\\n- **Social media posts:**  Fake news websites and social media accounts deliberately spread this false information to gain attention or promote a specific agenda.\\n- **Manipulated videos:**  Videos are often edited to create a false impression of microchips being found in vaccines.\"\n  },\n  \"indian_context\": {\n    \"Reference Indian institutions\": \"- The ICMR (Indian Council of Medical Research) has consistently stated that COVID-19 vaccines do not contain microchips.  They are the leading authority on medical research in India.\\n- The PIB (Press Information Bureau), the government's official source of information, has also debunked this claim.\\n- The CDSCO (Central Drugs Standard Control Organisation) regulates and approves vaccines in India. They would have detected such a significant addition to the vaccine composition.\\n-  Spreading such misinformation can have legal consequences under Indian law, as it can incite panic and distrust in the government's efforts to control the pandemic.\",\n    \"Simple English + Hindi analogies\": \"- \u0938\u094b\u091a\u093f\u090f, \u0915\u094d\u092f\u093e \u0906\u092a \u090f\u0915 \u091b\u094b\u091f\u0947 \u0938\u0947 \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u092e\u0947\u0902 \u090f\u0915 \u092a\u0942\u0930\u093e \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u091a\u093f\u092a \u0921\u093e\u0932 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902?  \u092f\u0939 \u0905\u0938\u0902\u092d\u0935 \u0939\u0948! (Imagine, can you fit a whole computer chip into a small injection? It's impossible!)\\n-  \u091c\u0948\u0938\u0947 \u091b\u094b\u091f\u0947 \u092c\u091a\u094d\u091a\u094b\u0902 \u0915\u094b \u0921\u0930\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u091d\u0942\u0920\u0940 \u0915\u0939\u093e\u0928\u093f\u092f\u093e\u0901 \u0938\u0941\u0928\u093e\u0908 \u091c\u093e\u0924\u0940 \u0939\u0948\u0902, \u0935\u0948\u0938\u0947 \u0939\u0940 \u092f\u0939 \u092d\u0940 \u090f\u0915 \u091d\u0942\u0920\u0940 \u0915\u0939\u093e\u0928\u0940 \u0939\u0948\u0964 (Just like false stories are told to scare young children, this is also a false story.)\\n-  \u092d\u093e\u0930\u0924 \u0938\u0930\u0915\u093e\u0930 \u0914\u0930 \u0935\u0948\u091c\u094d\u091e\u093e\u0928\u093f\u0915\u094b\u0902 \u0928\u0947 \u0907\u0938 \u0926\u093e\u0935\u0947 \u0915\u094b \u0916\u093e\u0930\u093f\u091c \u0915\u0930 \u0926\u093f\u092f\u093e \u0939\u0948\u0964 (The Indian government and scientists have rejected this claim.)\"\n  },\n  \"pattern_recognition\": {\n    \"Fear language\": \"- The claim uses fear-mongering tactics, suggesting a secret government conspiracy to control the population through vaccines.\\n-  It often uses phrases like \\\"they don't want you to know\\\" to create suspicion and distrust.\",\n    \"Checklist\": \"- **Who is the source?** Is it a verified news source, a government agency (like PIB), or an anonymous WhatsApp forward?\\n- **Is the information emotionally manipulative?** Does it try to trigger fear, anger, or outrage?\\n- **Does it make extraordinary claims without credible evidence?**  Claims about microchips in vaccines require strong scientific evidence, not just anecdotal stories or manipulated videos.\",\n    \"Red flags specific to Indian context\": \"- Be wary of messages shared in WhatsApp groups, especially those with inflammatory language or conspiracy theories.\\n- Check the authenticity of the source before sharing any information related to health or government policies.  Look for official government websites (.gov.in) and reputable news sources.\"\n  },\n  \"real_story\": {\n    \"Evidence-based truth with Indian sources\": \"- COVID-19 vaccines are developed using mRNA technology or inactivated viruses.  These technologies are well-established and have been used for other vaccines for years.  The ICMR and CDSCO have rigorous testing and approval processes for all vaccines used in India.\\n-  The composition of vaccines is publicly available and can be verified through official sources like the CDSCO website.\",\n    \"Historical context\": \"- The spread of misinformation has led to vaccine hesitancy and even violence in the past.  The COVID-19 pandemic saw several instances of WhatsApp forwards causing panic and unrest.  False information about vaccines can lead to serious health consequences for individuals and society as a whole.\\n-  Past instances of misinformation campaigns in India, such as those surrounding COVID-19 treatments and election results, highlight the importance of verifying information from reliable sources.\",\n    \"Balanced perspective\": \"- While some individuals may have concerns about vaccines, it's crucial to rely on scientific evidence and official sources for information.  The benefits of vaccination far outweigh the risks, as proven by the significant reduction in COVID-19 cases and deaths in vaccinated populations.\"\n  }\n}\n```\n"
1726 |       }
1727 |     },
1728 |     "timestamp": "2025-09-16T14:44:18.684989"
1729 |   },
1730 |   "a9f814be-4f8e-4a53-ba84-0a6409116851": {
1731 |     "analysis_id": "a9f814be-4f8e-4a53-ba84-0a6409116851",
1732 |     "content_type": "text",
1733 |     "content": "COVID vaccine contains microchips",
1734 |     "language": "en",
1735 |     "user_id": null,
1736 |     "verdict": "inconclusive",
1737 |     "confidence_score": 0.5,
1738 |     "summary": "Analysis completed",
1739 |     "processing_time": 12.255828380584717,
1740 |     "detailed_analysis": {
1741 |       "evidence": [
1742 |         "Analysis completed"
1743 |       ],
1744 |       "sources": [
1745 |         "Google Gemini AI",
1746 |         "Google Perspective API"
1747 |       ],
1748 |       "gemini_analysis": "{'status': 'success', 'normalized_claim': 'COVID vaccine contains microchips', 'entities': [], 'claim_type': 'medical', 'confidence': 0.5, 'raw_response': '```json\\n{\\n  \"normalized_claims\": [\\n    \"COVID-19 vaccines contain microchips.\"\\n  ],\\n  \"key_entities\": [\\n    \"COVID-19 vaccines\",\\n    \"microchips\"\\n  ],\\n  \"claim_type\": \"medical\",\\n  \"confidence_level\": 1.0\\n}\\n```\\n'}",
1749 |       "factcheck_results": [],
1750 |       "vision_analysis": null,
1751 |       "educational": {
1752 |         "status": "success",
1753 |         "misinformation_analysis": {
1754 |           "Logical breakdown": "- **Biological impossibility:**  Human bodies are complex. Injecting a microchip, even a tiny one, requires sophisticated technology far beyond current vaccine production methods.  It's like saying you can fit an entire mango into a small pea. \n- **Scientific consensus:**  Leading medical organizations worldwide, including India's ICMR (Indian Council of Medical Research), have debunked this claim.  There's no scientific evidence supporting the presence of microchips in COVID-19 vaccines. \n- **Manufacturing limitations:** Vaccine production is a highly regulated process.  Introducing microchips would require major changes, which would be easily detectable and widely reported.  It's like trying to secretly add a large brick to a perfectly baked cake - it wouldn't go unnoticed. \n- **Spread:** This misinformation spreads through social media, especially WhatsApp forwards, and unverified websites.  Manipulated videos and images often accompany these claims, making them seem more convincing.  Think of it as a game of Chinese whispers, where the original message gets distorted with each retelling.",
1755 |           "Spread": "- WhatsApp forwards:  The claim is often shared in family and community groups, making it seem trustworthy. \n- Fake news websites:  Websites with misleading names or designs spread the claim, often using sensational headlines. \n- Manipulated videos:  Videos showing needles or injections are edited to falsely suggest microchips are being injected."
1756 |         },
1757 |         "indian_context": {
1758 |           "Reference Indian institutions": "- The ICMR (Indian Council of Medical Research) has repeatedly stated that COVID-19 vaccines do not contain microchips.  \n- The PIB (Press Information Bureau), the government's official source of information, has also debunked this claim. \n-  The CDSCO (Central Drugs Standard Control Organisation) regulates vaccine safety and efficacy in India; they would have detected such a significant addition to the vaccine composition. \n- The Election Commission of India is not directly involved, but the spread of such misinformation can impact public health and potentially influence elections if it leads to vaccine hesitancy.",
1759 |           "Simple English + Hindi analogies": "-  \u0938\u094b\u091a\u093f\u090f, \u0905\u0917\u0930 \u0935\u0948\u0915\u094d\u0938\u0940\u0928 \u092e\u0947\u0902 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u091a\u093f\u092a \u0939\u094b\u0924\u0940, \u0924\u094b \u0935\u094b \u0915\u0948\u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u0940?  (Imagine, if the vaccine had a microchip, how would it work?)  It's impossible! \n-  \u092f\u0939 \u090f\u0915 \u0905\u092b\u0935\u093e\u0939 \u0939\u0948, \u091c\u0948\u0938\u0947 \u0915\u0939\u093e\u0928\u0940 \u092e\u0947\u0902  '\u092d\u0942\u0924' \u0915\u0940 \u0915\u0939\u093e\u0928\u0940 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 (This is a rumour, like a ghost story in a tale.)  It's not based on reality. \n-  \u0938\u0930\u0915\u093e\u0930 \u0914\u0930 \u0935\u0948\u091c\u094d\u091e\u093e\u0928\u093f\u0915\u094b\u0902 \u0928\u0947 \u0938\u093e\u092b \u0915\u0939\u093e \u0939\u0948 \u0915\u093f \u092f\u0939 \u0917\u0932\u0924 \u0939\u0948\u0964 (The government and scientists have clearly said this is wrong.) Trust credible sources."
1760 |         },
1761 |         "pattern_recognition": {
1762 |           "Fear language": "- Claims using fear-mongering tactics:  'They don't want you to know...', 'Secret government conspiracy...', 'Hidden dangers...'. \n- Sensational headlines:  'Shocking Truth Revealed!', 'You Won't Believe This!', 'Doctors Hiding the Truth!'. \n- Emotional appeals:  Playing on anxieties about government control, health, or technology.",
1763 |           "Checklist": "- **Who is the source?** Is it a known and trusted news outlet, government agency (like PIB), or a random WhatsApp forward? \n- **Is the information emotionally manipulative?** Does it try to scare you or make you angry? \n- **Does the claim seem too good (or too bad) to be true?**  Extraordinary claims require extraordinary evidence.",
1764 |           "Red flags specific to Indian context": "- Messages in Hindi or other Indian languages that sound overly dramatic or use strong emotional language. \n-  Claims linking vaccines to specific political parties or ideologies. \n-  Use of religious or caste-based appeals to spread misinformation."
1765 |         },
1766 |         "real_story": {
1767 |           "Evidence-based truth with Indian sources": "-  The ICMR and CDSCO have rigorous testing and approval processes for all vaccines used in India.  Any significant alteration, like adding microchips, would be impossible to hide. \n-  The PIB regularly publishes fact-checks to counter misinformation.  You can find these on their website. \n-  Reputable Indian news organizations have reported on the debunking of this claim.",
1768 |           "Historical context": "-  The spread of misinformation has led to vaccine hesitancy and decreased vaccination rates in India, impacting public health. \n-  Past instances of WhatsApp forwards leading to violence and lynchings highlight the dangers of unverified information. \n-  During the COVID-19 pandemic, numerous scams related to vaccines and treatments emerged, exploiting people's fears and anxieties.",
1769 |           "Balanced perspective": "- While some individuals may have genuine concerns about vaccines, the claim about microchips is demonstrably false and lacks any scientific basis.  It's crucial to rely on credible sources and critical thinking to avoid falling prey to misinformation."
1770 |         },
1771 |         "raw_response": "```json\n{\n  \"misinformation_analysis\": {\n    \"Logical breakdown\": \"- **Biological impossibility:**  Human bodies are complex. Injecting a microchip, even a tiny one, requires sophisticated technology far beyond current vaccine production methods.  It's like saying you can fit an entire mango into a small pea. \\n- **Scientific consensus:**  Leading medical organizations worldwide, including India's ICMR (Indian Council of Medical Research), have debunked this claim.  There's no scientific evidence supporting the presence of microchips in COVID-19 vaccines. \\n- **Manufacturing limitations:** Vaccine production is a highly regulated process.  Introducing microchips would require major changes, which would be easily detectable and widely reported.  It's like trying to secretly add a large brick to a perfectly baked cake - it wouldn't go unnoticed. \\n- **Spread:** This misinformation spreads through social media, especially WhatsApp forwards, and unverified websites.  Manipulated videos and images often accompany these claims, making them seem more convincing.  Think of it as a game of Chinese whispers, where the original message gets distorted with each retelling.\",\n    \"Spread\": \"- WhatsApp forwards:  The claim is often shared in family and community groups, making it seem trustworthy. \\n- Fake news websites:  Websites with misleading names or designs spread the claim, often using sensational headlines. \\n- Manipulated videos:  Videos showing needles or injections are edited to falsely suggest microchips are being injected.\"\n  },\n  \"indian_context\": {\n    \"Reference Indian institutions\": \"- The ICMR (Indian Council of Medical Research) has repeatedly stated that COVID-19 vaccines do not contain microchips.  \\n- The PIB (Press Information Bureau), the government's official source of information, has also debunked this claim. \\n-  The CDSCO (Central Drugs Standard Control Organisation) regulates vaccine safety and efficacy in India; they would have detected such a significant addition to the vaccine composition. \\n- The Election Commission of India is not directly involved, but the spread of such misinformation can impact public health and potentially influence elections if it leads to vaccine hesitancy.\",\n    \"Simple English + Hindi analogies\": \"-  \u0938\u094b\u091a\u093f\u090f, \u0905\u0917\u0930 \u0935\u0948\u0915\u094d\u0938\u0940\u0928 \u092e\u0947\u0902 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u091a\u093f\u092a \u0939\u094b\u0924\u0940, \u0924\u094b \u0935\u094b \u0915\u0948\u0938\u0947 \u0915\u093e\u092e \u0915\u0930\u0924\u0940?  (Imagine, if the vaccine had a microchip, how would it work?)  It's impossible! \\n-  \u092f\u0939 \u090f\u0915 \u0905\u092b\u0935\u093e\u0939 \u0939\u0948, \u091c\u0948\u0938\u0947 \u0915\u0939\u093e\u0928\u0940 \u092e\u0947\u0902  '\u092d\u0942\u0924' \u0915\u0940 \u0915\u0939\u093e\u0928\u0940 \u0939\u094b\u0924\u0940 \u0939\u0948\u0964 (This is a rumour, like a ghost story in a tale.)  It's not based on reality. \\n-  \u0938\u0930\u0915\u093e\u0930 \u0914\u0930 \u0935\u0948\u091c\u094d\u091e\u093e\u0928\u093f\u0915\u094b\u0902 \u0928\u0947 \u0938\u093e\u092b \u0915\u0939\u093e \u0939\u0948 \u0915\u093f \u092f\u0939 \u0917\u0932\u0924 \u0939\u0948\u0964 (The government and scientists have clearly said this is wrong.) Trust credible sources.\"\n  },\n  \"pattern_recognition\": {\n    \"Fear language\": \"- Claims using fear-mongering tactics:  'They don't want you to know...', 'Secret government conspiracy...', 'Hidden dangers...'. \\n- Sensational headlines:  'Shocking Truth Revealed!', 'You Won't Believe This!', 'Doctors Hiding the Truth!'. \\n- Emotional appeals:  Playing on anxieties about government control, health, or technology.\",\n    \"Checklist\": \"- **Who is the source?** Is it a known and trusted news outlet, government agency (like PIB), or a random WhatsApp forward? \\n- **Is the information emotionally manipulative?** Does it try to scare you or make you angry? \\n- **Does the claim seem too good (or too bad) to be true?**  Extraordinary claims require extraordinary evidence.\",\n    \"Red flags specific to Indian context\": \"- Messages in Hindi or other Indian languages that sound overly dramatic or use strong emotional language. \\n-  Claims linking vaccines to specific political parties or ideologies. \\n-  Use of religious or caste-based appeals to spread misinformation.\"\n  },\n  \"real_story\": {\n    \"Evidence-based truth with Indian sources\": \"-  The ICMR and CDSCO have rigorous testing and approval processes for all vaccines used in India.  Any significant alteration, like adding microchips, would be impossible to hide. \\n-  The PIB regularly publishes fact-checks to counter misinformation.  You can find these on their website. \\n-  Reputable Indian news organizations have reported on the debunking of this claim.\",\n    \"Historical context\": \"-  The spread of misinformation has led to vaccine hesitancy and decreased vaccination rates in India, impacting public health. \\n-  Past instances of WhatsApp forwards leading to violence and lynchings highlight the dangers of unverified information. \\n-  During the COVID-19 pandemic, numerous scams related to vaccines and treatments emerged, exploiting people's fears and anxieties.\",\n    \"Balanced perspective\": \"- While some individuals may have genuine concerns about vaccines, the claim about microchips is demonstrably false and lacks any scientific basis.  It's crucial to rely on credible sources and critical thinking to avoid falling prey to misinformation.\"\n  }\n}\n```\n"
1772 |       }
1773 |     },
1774 |     "timestamp": "2025-09-16T14:49:04.512979"
1775 |   }
1776 | }


--------------------------------------------------------------------------------
/backend/storage/results.json:
--------------------------------------------------------------------------------
1 | {}


--------------------------------------------------------------------------------
/design_style of text output.docx:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/design_style of text output.docx


--------------------------------------------------------------------------------
/folder_structure1.txt:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/folder_structure1.txt


--------------------------------------------------------------------------------
/generate_tree.ps1:
--------------------------------------------------------------------------------
1 | # Generate folder tree and save to file
2 | tree /A > folder_structure.txt
3 | Write-Host "✅ Folder structure saved to folder_structure.txt"
4 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/.gitignore:
--------------------------------------------------------------------------------
 1 | # Logs
 2 | logs
 3 | *.log
 4 | npm-debug.log*
 5 | yarn-debug.log*
 6 | yarn-error.log*
 7 | pnpm-debug.log*
 8 | lerna-debug.log*
 9 | 
10 | node_modules
11 | dist
12 | dist-ssr
13 | *.local
14 | 
15 | # Editor directories and files
16 | .vscode/*
17 | !.vscode/extensions.json
18 | .idea
19 | .DS_Store
20 | *.suo
21 | *.ntvs*
22 | *.njsproj
23 | *.sln
24 | *.sw?
25 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/README.md:
--------------------------------------------------------------------------------
 1 | # Welcome to your Lovable project
 2 | 
 3 | ## Project info
 4 | 
 5 | **URL**: https://lovable.dev/projects/f710a3db-5d4d-403a-9b37-be9c03f50b5e
 6 | 
 7 | ## How can I edit this code?
 8 | 
 9 | There are several ways of editing your application.
10 | 
11 | **Use Lovable**
12 | 
13 | Simply visit the [Lovable Project](https://lovable.dev/projects/f710a3db-5d4d-403a-9b37-be9c03f50b5e) and start prompting.
14 | 
15 | Changes made via Lovable will be committed automatically to this repo.
16 | 
17 | **Use your preferred IDE**
18 | 
19 | If you want to work locally using your own IDE, you can clone this repo and push changes. Pushed changes will also be reflected in Lovable.
20 | 
21 | The only requirement is having Node.js & npm installed - [install with nvm](https://github.com/nvm-sh/nvm#installing-and-updating)
22 | 
23 | Follow these steps:
24 | 
25 | ```sh
26 | # Step 1: Clone the repository using the project's Git URL.
27 | git clone <YOUR_GIT_URL>
28 | 
29 | # Step 2: Navigate to the project directory.
30 | cd <YOUR_PROJECT_NAME>
31 | 
32 | # Step 3: Install the necessary dependencies.
33 | npm i
34 | 
35 | # Step 4: Start the development server with auto-reloading and an instant preview.
36 | npm run dev
37 | ```
38 | 
39 | **Edit a file directly in GitHub**
40 | 
41 | - Navigate to the desired file(s).
42 | - Click the "Edit" button (pencil icon) at the top right of the file view.
43 | - Make your changes and commit the changes.
44 | 
45 | **Use GitHub Codespaces**
46 | 
47 | - Navigate to the main page of your repository.
48 | - Click on the "Code" button (green button) near the top right.
49 | - Select the "Codespaces" tab.
50 | - Click on "New codespace" to launch a new Codespace environment.
51 | - Edit files directly within the Codespace and commit and push your changes once you're done.
52 | 
53 | ## What technologies are used for this project?
54 | 
55 | This project is built with:
56 | 
57 | - Vite
58 | - TypeScript
59 | - React
60 | - shadcn-ui
61 | - Tailwind CSS
62 | 
63 | ## How can I deploy this project?
64 | 
65 | Simply open [Lovable](https://lovable.dev/projects/f710a3db-5d4d-403a-9b37-be9c03f50b5e) and click on Share -> Publish.
66 | 
67 | ## Can I connect a custom domain to my Lovable project?
68 | 
69 | Yes, you can!
70 | 
71 | To connect a domain, navigate to Project > Settings > Domains and click Connect Domain.
72 | 
73 | Read more here: [Setting up a custom domain](https://docs.lovable.dev/tips-tricks/custom-domain#step-by-step-guide)
74 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/TotalDoc of Perfect frontend.pdf:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/truthlens-landing-page-main/TotalDoc of Perfect frontend.pdf


--------------------------------------------------------------------------------
/truthlens-landing-page-main/bun.lockb:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/truthlens-landing-page-main/bun.lockb


--------------------------------------------------------------------------------
/truthlens-landing-page-main/components.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "$schema": "https://ui.shadcn.com/schema.json",
 3 |   "style": "default",
 4 |   "rsc": false,
 5 |   "tsx": true,
 6 |   "tailwind": {
 7 |     "config": "tailwind.config.ts",
 8 |     "css": "src/index.css",
 9 |     "baseColor": "slate",
10 |     "cssVariables": true,
11 |     "prefix": ""
12 |   },
13 |   "aliases": {
14 |     "components": "@/components",
15 |     "utils": "@/lib/utils",
16 |     "ui": "@/components/ui",
17 |     "lib": "@/lib",
18 |     "hooks": "@/hooks"
19 |   }
20 | }
21 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/eslint.config.js:
--------------------------------------------------------------------------------
 1 | import js from "@eslint/js";
 2 | import globals from "globals";
 3 | import reactHooks from "eslint-plugin-react-hooks";
 4 | import reactRefresh from "eslint-plugin-react-refresh";
 5 | import tseslint from "typescript-eslint";
 6 | 
 7 | export default tseslint.config(
 8 |   { ignores: ["dist"] },
 9 |   {
10 |     extends: [js.configs.recommended, ...tseslint.configs.recommended],
11 |     files: ["**/*.{ts,tsx}"],
12 |     languageOptions: {
13 |       ecmaVersion: 2020,
14 |       globals: globals.browser,
15 |     },
16 |     plugins: {
17 |       "react-hooks": reactHooks,
18 |       "react-refresh": reactRefresh,
19 |     },
20 |     rules: {
21 |       ...reactHooks.configs.recommended.rules,
22 |       "react-refresh/only-export-components": ["warn", { allowConstantExport: true }],
23 |       "@typescript-eslint/no-unused-vars": "off",
24 |     },
25 |   },
26 | );
27 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/index.html:
--------------------------------------------------------------------------------
 1 | <!doctype html>
 2 | <html lang="en">
 3 |   <head>
 4 |     <meta charset="UTF-8" />
 5 |     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
 6 |     <title>TruthLens - AI-Powered Fact Checking for India</title>
 7 |     <meta name="description" content="Detect, verify, and report misinformation with TruthLens. AI-powered fact-checking platform helping build a more informed India. Start fact-checking today." />
 8 |     <meta name="author" content="TruthLens" />
 9 |     <meta name="keywords" content="fact checking, misinformation, AI verification, India, fake news detection, truth verification" />
10 |     <link rel="canonical" href="/" />
11 | 
12 |     <meta property="og:title" content="TruthLens - AI-Powered Fact Checking for India" />
13 |     <meta property="og:description" content="Empower India against misinformation. Detect, verify, and report with our AI-powered fact-checking platform." />
14 |     <meta property="og:type" content="website" />
15 |     <meta property="og:image" content="/og-image.png" />
16 |     <meta property="og:url" content="/" />
17 | 
18 |     <meta name="twitter:card" content="summary_large_image" />
19 |     <meta name="twitter:site" content="@truthlens_in" />
20 |     <meta name="twitter:title" content="TruthLens - AI-Powered Fact Checking for India" />
21 |     <meta name="twitter:description" content="Empower India against misinformation. Detect, verify, and report with our AI-powered fact-checking platform." />
22 |     <meta name="twitter:image" content="/og-image.png" />
23 |   </head>
24 | 
25 |   <body>
26 |     <div id="root"></div>
27 |     <script type="module" src="/src/main.tsx"></script>
28 |   </body>
29 | </html>
30 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/package-lock.json:
--------------------------------------------------------------------------------
   1 | {
   2 |   "name": "vite_react_shadcn_ts",
   3 |   "version": "0.0.0",
   4 |   "lockfileVersion": 3,
   5 |   "requires": true,
   6 |   "packages": {
   7 |     "": {
   8 |       "name": "vite_react_shadcn_ts",
   9 |       "version": "0.0.0",
  10 |       "dependencies": {
  11 |         "@hookform/resolvers": "^3.10.0",
  12 |         "@radix-ui/react-accordion": "^1.2.11",
  13 |         "@radix-ui/react-alert-dialog": "^1.1.14",
  14 |         "@radix-ui/react-aspect-ratio": "^1.1.7",
  15 |         "@radix-ui/react-avatar": "^1.1.10",
  16 |         "@radix-ui/react-checkbox": "^1.3.2",
  17 |         "@radix-ui/react-collapsible": "^1.1.11",
  18 |         "@radix-ui/react-context-menu": "^2.2.15",
  19 |         "@radix-ui/react-dialog": "^1.1.14",
  20 |         "@radix-ui/react-dropdown-menu": "^2.1.15",
  21 |         "@radix-ui/react-hover-card": "^1.1.14",
  22 |         "@radix-ui/react-label": "^2.1.7",
  23 |         "@radix-ui/react-menubar": "^1.1.15",
  24 |         "@radix-ui/react-navigation-menu": "^1.2.13",
  25 |         "@radix-ui/react-popover": "^1.1.14",
  26 |         "@radix-ui/react-progress": "^1.1.7",
  27 |         "@radix-ui/react-radio-group": "^1.3.7",
  28 |         "@radix-ui/react-scroll-area": "^1.2.9",
  29 |         "@radix-ui/react-select": "^2.2.5",
  30 |         "@radix-ui/react-separator": "^1.1.7",
  31 |         "@radix-ui/react-slider": "^1.3.5",
  32 |         "@radix-ui/react-slot": "^1.2.3",
  33 |         "@radix-ui/react-switch": "^1.2.5",
  34 |         "@radix-ui/react-tabs": "^1.1.12",
  35 |         "@radix-ui/react-toast": "^1.2.14",
  36 |         "@radix-ui/react-toggle": "^1.1.9",
  37 |         "@radix-ui/react-toggle-group": "^1.1.10",
  38 |         "@radix-ui/react-tooltip": "^1.2.7",
  39 |         "@tanstack/react-query": "^5.83.0",
  40 |         "axios": "^1.12.1",
  41 |         "class-variance-authority": "^0.7.1",
  42 |         "clsx": "^2.1.1",
  43 |         "cmdk": "^1.1.1",
  44 |         "date-fns": "^3.6.0",
  45 |         "embla-carousel-react": "^8.6.0",
  46 |         "input-otp": "^1.4.2",
  47 |         "lucide-react": "^0.462.0",
  48 |         "next-themes": "^0.3.0",
  49 |         "react": "^18.3.1",
  50 |         "react-day-picker": "^8.10.1",
  51 |         "react-dom": "^18.3.1",
  52 |         "react-hook-form": "^7.61.1",
  53 |         "react-resizable-panels": "^2.1.9",
  54 |         "react-router-dom": "^6.30.1",
  55 |         "recharts": "^2.15.4",
  56 |         "sonner": "^1.7.4",
  57 |         "tailwind-merge": "^2.6.0",
  58 |         "tailwindcss-animate": "^1.0.7",
  59 |         "vaul": "^0.9.9",
  60 |         "zod": "^3.25.76"
  61 |       },
  62 |       "devDependencies": {
  63 |         "@eslint/js": "^9.32.0",
  64 |         "@tailwindcss/typography": "^0.5.16",
  65 |         "@types/node": "^22.16.5",
  66 |         "@types/react": "^18.3.23",
  67 |         "@types/react-dom": "^18.3.7",
  68 |         "@vitejs/plugin-react-swc": "^3.11.0",
  69 |         "autoprefixer": "^10.4.21",
  70 |         "eslint": "^9.32.0",
  71 |         "eslint-plugin-react-hooks": "^5.2.0",
  72 |         "eslint-plugin-react-refresh": "^0.4.20",
  73 |         "globals": "^15.15.0",
  74 |         "lovable-tagger": "^1.1.9",
  75 |         "postcss": "^8.5.6",
  76 |         "tailwindcss": "^3.4.17",
  77 |         "typescript": "^5.8.3",
  78 |         "typescript-eslint": "^8.38.0",
  79 |         "vite": "^5.4.19"
  80 |       }
  81 |     },
  82 |     "node_modules/@alloc/quick-lru": {
  83 |       "version": "5.2.0",
  84 |       "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
  85 |       "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
  86 |       "license": "MIT",
  87 |       "engines": {
  88 |         "node": ">=10"
  89 |       },
  90 |       "funding": {
  91 |         "url": "https://github.com/sponsors/sindresorhus"
  92 |       }
  93 |     },
  94 |     "node_modules/@babel/helper-string-parser": {
  95 |       "version": "7.25.9",
  96 |       "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
  97 |       "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
  98 |       "dev": true,
  99 |       "license": "MIT",
 100 |       "engines": {
 101 |         "node": ">=6.9.0"
 102 |       }
 103 |     },
 104 |     "node_modules/@babel/helper-validator-identifier": {
 105 |       "version": "7.25.9",
 106 |       "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
 107 |       "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
 108 |       "dev": true,
 109 |       "license": "MIT",
 110 |       "engines": {
 111 |         "node": ">=6.9.0"
 112 |       }
 113 |     },
 114 |     "node_modules/@babel/parser": {
 115 |       "version": "7.25.9",
 116 |       "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.25.9.tgz",
 117 |       "integrity": "sha512-aI3jjAAO1fh7vY/pBGsn1i9LDbRP43+asrRlkPuTXW5yHXtd1NgTEMudbBoDDxrf1daEEfPJqR+JBMakzrR4Dg==",
 118 |       "dev": true,
 119 |       "license": "MIT",
 120 |       "dependencies": {
 121 |         "@babel/types": "^7.25.9"
 122 |       },
 123 |       "bin": {
 124 |         "parser": "bin/babel-parser.js"
 125 |       },
 126 |       "engines": {
 127 |         "node": ">=6.0.0"
 128 |       }
 129 |     },
 130 |     "node_modules/@babel/runtime": {
 131 |       "version": "7.28.2",
 132 |       "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.2.tgz",
 133 |       "integrity": "sha512-KHp2IflsnGywDjBWDkR9iEqiWSpc8GIi0lgTT3mOElT0PP1tG26P4tmFI2YvAdzgq9RGyoHZQEIEdZy6Ec5xCA==",
 134 |       "license": "MIT",
 135 |       "engines": {
 136 |         "node": ">=6.9.0"
 137 |       }
 138 |     },
 139 |     "node_modules/@babel/types": {
 140 |       "version": "7.25.9",
 141 |       "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.25.9.tgz",
 142 |       "integrity": "sha512-OwS2CM5KocvQ/k7dFJa8i5bNGJP0hXWfVCfDkqRFP1IreH1JDC7wG6eCYCi0+McbfT8OR/kNqsI0UU0xP9H6PQ==",
 143 |       "dev": true,
 144 |       "license": "MIT",
 145 |       "dependencies": {
 146 |         "@babel/helper-string-parser": "^7.25.9",
 147 |         "@babel/helper-validator-identifier": "^7.25.9"
 148 |       },
 149 |       "engines": {
 150 |         "node": ">=6.9.0"
 151 |       }
 152 |     },
 153 |     "node_modules/@esbuild/aix-ppc64": {
 154 |       "version": "0.21.5",
 155 |       "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
 156 |       "integrity": "sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==",
 157 |       "cpu": [
 158 |         "ppc64"
 159 |       ],
 160 |       "dev": true,
 161 |       "license": "MIT",
 162 |       "optional": true,
 163 |       "os": [
 164 |         "aix"
 165 |       ],
 166 |       "engines": {
 167 |         "node": ">=12"
 168 |       }
 169 |     },
 170 |     "node_modules/@esbuild/android-arm": {
 171 |       "version": "0.21.5",
 172 |       "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz",
 173 |       "integrity": "sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==",
 174 |       "cpu": [
 175 |         "arm"
 176 |       ],
 177 |       "dev": true,
 178 |       "license": "MIT",
 179 |       "optional": true,
 180 |       "os": [
 181 |         "android"
 182 |       ],
 183 |       "engines": {
 184 |         "node": ">=12"
 185 |       }
 186 |     },
 187 |     "node_modules/@esbuild/android-arm64": {
 188 |       "version": "0.21.5",
 189 |       "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz",
 190 |       "integrity": "sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==",
 191 |       "cpu": [
 192 |         "arm64"
 193 |       ],
 194 |       "dev": true,
 195 |       "license": "MIT",
 196 |       "optional": true,
 197 |       "os": [
 198 |         "android"
 199 |       ],
 200 |       "engines": {
 201 |         "node": ">=12"
 202 |       }
 203 |     },
 204 |     "node_modules/@esbuild/android-x64": {
 205 |       "version": "0.21.5",
 206 |       "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz",
 207 |       "integrity": "sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==",
 208 |       "cpu": [
 209 |         "x64"
 210 |       ],
 211 |       "dev": true,
 212 |       "license": "MIT",
 213 |       "optional": true,
 214 |       "os": [
 215 |         "android"
 216 |       ],
 217 |       "engines": {
 218 |         "node": ">=12"
 219 |       }
 220 |     },
 221 |     "node_modules/@esbuild/darwin-arm64": {
 222 |       "version": "0.21.5",
 223 |       "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz",
 224 |       "integrity": "sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==",
 225 |       "cpu": [
 226 |         "arm64"
 227 |       ],
 228 |       "dev": true,
 229 |       "license": "MIT",
 230 |       "optional": true,
 231 |       "os": [
 232 |         "darwin"
 233 |       ],
 234 |       "engines": {
 235 |         "node": ">=12"
 236 |       }
 237 |     },
 238 |     "node_modules/@esbuild/darwin-x64": {
 239 |       "version": "0.21.5",
 240 |       "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz",
 241 |       "integrity": "sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==",
 242 |       "cpu": [
 243 |         "x64"
 244 |       ],
 245 |       "dev": true,
 246 |       "license": "MIT",
 247 |       "optional": true,
 248 |       "os": [
 249 |         "darwin"
 250 |       ],
 251 |       "engines": {
 252 |         "node": ">=12"
 253 |       }
 254 |     },
 255 |     "node_modules/@esbuild/freebsd-arm64": {
 256 |       "version": "0.21.5",
 257 |       "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz",
 258 |       "integrity": "sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==",
 259 |       "cpu": [
 260 |         "arm64"
 261 |       ],
 262 |       "dev": true,
 263 |       "license": "MIT",
 264 |       "optional": true,
 265 |       "os": [
 266 |         "freebsd"
 267 |       ],
 268 |       "engines": {
 269 |         "node": ">=12"
 270 |       }
 271 |     },
 272 |     "node_modules/@esbuild/freebsd-x64": {
 273 |       "version": "0.21.5",
 274 |       "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz",
 275 |       "integrity": "sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==",
 276 |       "cpu": [
 277 |         "x64"
 278 |       ],
 279 |       "dev": true,
 280 |       "license": "MIT",
 281 |       "optional": true,
 282 |       "os": [
 283 |         "freebsd"
 284 |       ],
 285 |       "engines": {
 286 |         "node": ">=12"
 287 |       }
 288 |     },
 289 |     "node_modules/@esbuild/linux-arm": {
 290 |       "version": "0.21.5",
 291 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz",
 292 |       "integrity": "sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==",
 293 |       "cpu": [
 294 |         "arm"
 295 |       ],
 296 |       "dev": true,
 297 |       "license": "MIT",
 298 |       "optional": true,
 299 |       "os": [
 300 |         "linux"
 301 |       ],
 302 |       "engines": {
 303 |         "node": ">=12"
 304 |       }
 305 |     },
 306 |     "node_modules/@esbuild/linux-arm64": {
 307 |       "version": "0.21.5",
 308 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz",
 309 |       "integrity": "sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==",
 310 |       "cpu": [
 311 |         "arm64"
 312 |       ],
 313 |       "dev": true,
 314 |       "license": "MIT",
 315 |       "optional": true,
 316 |       "os": [
 317 |         "linux"
 318 |       ],
 319 |       "engines": {
 320 |         "node": ">=12"
 321 |       }
 322 |     },
 323 |     "node_modules/@esbuild/linux-ia32": {
 324 |       "version": "0.21.5",
 325 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz",
 326 |       "integrity": "sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==",
 327 |       "cpu": [
 328 |         "ia32"
 329 |       ],
 330 |       "dev": true,
 331 |       "license": "MIT",
 332 |       "optional": true,
 333 |       "os": [
 334 |         "linux"
 335 |       ],
 336 |       "engines": {
 337 |         "node": ">=12"
 338 |       }
 339 |     },
 340 |     "node_modules/@esbuild/linux-loong64": {
 341 |       "version": "0.21.5",
 342 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz",
 343 |       "integrity": "sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==",
 344 |       "cpu": [
 345 |         "loong64"
 346 |       ],
 347 |       "dev": true,
 348 |       "license": "MIT",
 349 |       "optional": true,
 350 |       "os": [
 351 |         "linux"
 352 |       ],
 353 |       "engines": {
 354 |         "node": ">=12"
 355 |       }
 356 |     },
 357 |     "node_modules/@esbuild/linux-mips64el": {
 358 |       "version": "0.21.5",
 359 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz",
 360 |       "integrity": "sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==",
 361 |       "cpu": [
 362 |         "mips64el"
 363 |       ],
 364 |       "dev": true,
 365 |       "license": "MIT",
 366 |       "optional": true,
 367 |       "os": [
 368 |         "linux"
 369 |       ],
 370 |       "engines": {
 371 |         "node": ">=12"
 372 |       }
 373 |     },
 374 |     "node_modules/@esbuild/linux-ppc64": {
 375 |       "version": "0.21.5",
 376 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz",
 377 |       "integrity": "sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==",
 378 |       "cpu": [
 379 |         "ppc64"
 380 |       ],
 381 |       "dev": true,
 382 |       "license": "MIT",
 383 |       "optional": true,
 384 |       "os": [
 385 |         "linux"
 386 |       ],
 387 |       "engines": {
 388 |         "node": ">=12"
 389 |       }
 390 |     },
 391 |     "node_modules/@esbuild/linux-riscv64": {
 392 |       "version": "0.21.5",
 393 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz",
 394 |       "integrity": "sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==",
 395 |       "cpu": [
 396 |         "riscv64"
 397 |       ],
 398 |       "dev": true,
 399 |       "license": "MIT",
 400 |       "optional": true,
 401 |       "os": [
 402 |         "linux"
 403 |       ],
 404 |       "engines": {
 405 |         "node": ">=12"
 406 |       }
 407 |     },
 408 |     "node_modules/@esbuild/linux-s390x": {
 409 |       "version": "0.21.5",
 410 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz",
 411 |       "integrity": "sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==",
 412 |       "cpu": [
 413 |         "s390x"
 414 |       ],
 415 |       "dev": true,
 416 |       "license": "MIT",
 417 |       "optional": true,
 418 |       "os": [
 419 |         "linux"
 420 |       ],
 421 |       "engines": {
 422 |         "node": ">=12"
 423 |       }
 424 |     },
 425 |     "node_modules/@esbuild/linux-x64": {
 426 |       "version": "0.21.5",
 427 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz",
 428 |       "integrity": "sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==",
 429 |       "cpu": [
 430 |         "x64"
 431 |       ],
 432 |       "dev": true,
 433 |       "license": "MIT",
 434 |       "optional": true,
 435 |       "os": [
 436 |         "linux"
 437 |       ],
 438 |       "engines": {
 439 |         "node": ">=12"
 440 |       }
 441 |     },
 442 |     "node_modules/@esbuild/netbsd-arm64": {
 443 |       "version": "0.25.0",
 444 |       "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.0.tgz",
 445 |       "integrity": "sha512-RuG4PSMPFfrkH6UwCAqBzauBWTygTvb1nxWasEJooGSJ/NwRw7b2HOwyRTQIU97Hq37l3npXoZGYMy3b3xYvPw==",
 446 |       "cpu": [
 447 |         "arm64"
 448 |       ],
 449 |       "dev": true,
 450 |       "license": "MIT",
 451 |       "optional": true,
 452 |       "os": [
 453 |         "netbsd"
 454 |       ],
 455 |       "engines": {
 456 |         "node": ">=18"
 457 |       }
 458 |     },
 459 |     "node_modules/@esbuild/netbsd-x64": {
 460 |       "version": "0.21.5",
 461 |       "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz",
 462 |       "integrity": "sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==",
 463 |       "cpu": [
 464 |         "x64"
 465 |       ],
 466 |       "dev": true,
 467 |       "license": "MIT",
 468 |       "optional": true,
 469 |       "os": [
 470 |         "netbsd"
 471 |       ],
 472 |       "engines": {
 473 |         "node": ">=12"
 474 |       }
 475 |     },
 476 |     "node_modules/@esbuild/openbsd-arm64": {
 477 |       "version": "0.25.0",
 478 |       "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.0.tgz",
 479 |       "integrity": "sha512-21sUNbq2r84YE+SJDfaQRvdgznTD8Xc0oc3p3iW/a1EVWeNj/SdUCbm5U0itZPQYRuRTW20fPMWMpcrciH2EJw==",
 480 |       "cpu": [
 481 |         "arm64"
 482 |       ],
 483 |       "dev": true,
 484 |       "license": "MIT",
 485 |       "optional": true,
 486 |       "os": [
 487 |         "openbsd"
 488 |       ],
 489 |       "engines": {
 490 |         "node": ">=18"
 491 |       }
 492 |     },
 493 |     "node_modules/@esbuild/openbsd-x64": {
 494 |       "version": "0.21.5",
 495 |       "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz",
 496 |       "integrity": "sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==",
 497 |       "cpu": [
 498 |         "x64"
 499 |       ],
 500 |       "dev": true,
 501 |       "license": "MIT",
 502 |       "optional": true,
 503 |       "os": [
 504 |         "openbsd"
 505 |       ],
 506 |       "engines": {
 507 |         "node": ">=12"
 508 |       }
 509 |     },
 510 |     "node_modules/@esbuild/sunos-x64": {
 511 |       "version": "0.21.5",
 512 |       "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz",
 513 |       "integrity": "sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==",
 514 |       "cpu": [
 515 |         "x64"
 516 |       ],
 517 |       "dev": true,
 518 |       "license": "MIT",
 519 |       "optional": true,
 520 |       "os": [
 521 |         "sunos"
 522 |       ],
 523 |       "engines": {
 524 |         "node": ">=12"
 525 |       }
 526 |     },
 527 |     "node_modules/@esbuild/win32-arm64": {
 528 |       "version": "0.21.5",
 529 |       "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz",
 530 |       "integrity": "sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==",
 531 |       "cpu": [
 532 |         "arm64"
 533 |       ],
 534 |       "dev": true,
 535 |       "license": "MIT",
 536 |       "optional": true,
 537 |       "os": [
 538 |         "win32"
 539 |       ],
 540 |       "engines": {
 541 |         "node": ">=12"
 542 |       }
 543 |     },
 544 |     "node_modules/@esbuild/win32-ia32": {
 545 |       "version": "0.21.5",
 546 |       "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz",
 547 |       "integrity": "sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==",
 548 |       "cpu": [
 549 |         "ia32"
 550 |       ],
 551 |       "dev": true,
 552 |       "license": "MIT",
 553 |       "optional": true,
 554 |       "os": [
 555 |         "win32"
 556 |       ],
 557 |       "engines": {
 558 |         "node": ">=12"
 559 |       }
 560 |     },
 561 |     "node_modules/@esbuild/win32-x64": {
 562 |       "version": "0.21.5",
 563 |       "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz",
 564 |       "integrity": "sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==",
 565 |       "cpu": [
 566 |         "x64"
 567 |       ],
 568 |       "dev": true,
 569 |       "license": "MIT",
 570 |       "optional": true,
 571 |       "os": [
 572 |         "win32"
 573 |       ],
 574 |       "engines": {
 575 |         "node": ">=12"
 576 |       }
 577 |     },
 578 |     "node_modules/@eslint-community/eslint-utils": {
 579 |       "version": "4.7.0",
 580 |       "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
 581 |       "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
 582 |       "dev": true,
 583 |       "license": "MIT",
 584 |       "dependencies": {
 585 |         "eslint-visitor-keys": "^3.4.3"
 586 |       },
 587 |       "engines": {
 588 |         "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
 589 |       },
 590 |       "funding": {
 591 |         "url": "https://opencollective.com/eslint"
 592 |       },
 593 |       "peerDependencies": {
 594 |         "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
 595 |       }
 596 |     },
 597 |     "node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
 598 |       "version": "3.4.3",
 599 |       "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
 600 |       "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
 601 |       "dev": true,
 602 |       "license": "Apache-2.0",
 603 |       "engines": {
 604 |         "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
 605 |       },
 606 |       "funding": {
 607 |         "url": "https://opencollective.com/eslint"
 608 |       }
 609 |     },
 610 |     "node_modules/@eslint-community/regexpp": {
 611 |       "version": "4.12.1",
 612 |       "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
 613 |       "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
 614 |       "dev": true,
 615 |       "license": "MIT",
 616 |       "engines": {
 617 |         "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
 618 |       }
 619 |     },
 620 |     "node_modules/@eslint/config-array": {
 621 |       "version": "0.21.0",
 622 |       "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.21.0.tgz",
 623 |       "integrity": "sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==",
 624 |       "dev": true,
 625 |       "license": "Apache-2.0",
 626 |       "dependencies": {
 627 |         "@eslint/object-schema": "^2.1.6",
 628 |         "debug": "^4.3.1",
 629 |         "minimatch": "^3.1.2"
 630 |       },
 631 |       "engines": {
 632 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
 633 |       }
 634 |     },
 635 |     "node_modules/@eslint/config-helpers": {
 636 |       "version": "0.3.0",
 637 |       "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.3.0.tgz",
 638 |       "integrity": "sha512-ViuymvFmcJi04qdZeDc2whTHryouGcDlaxPqarTD0ZE10ISpxGUVZGZDx4w01upyIynL3iu6IXH2bS1NhclQMw==",
 639 |       "dev": true,
 640 |       "license": "Apache-2.0",
 641 |       "engines": {
 642 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
 643 |       }
 644 |     },
 645 |     "node_modules/@eslint/core": {
 646 |       "version": "0.15.1",
 647 |       "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.15.1.tgz",
 648 |       "integrity": "sha512-bkOp+iumZCCbt1K1CmWf0R9pM5yKpDv+ZXtvSyQpudrI9kuFLp+bM2WOPXImuD/ceQuaa8f5pj93Y7zyECIGNA==",
 649 |       "dev": true,
 650 |       "license": "Apache-2.0",
 651 |       "dependencies": {
 652 |         "@types/json-schema": "^7.0.15"
 653 |       },
 654 |       "engines": {
 655 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
 656 |       }
 657 |     },
 658 |     "node_modules/@eslint/eslintrc": {
 659 |       "version": "3.3.1",
 660 |       "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
 661 |       "integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
 662 |       "dev": true,
 663 |       "license": "MIT",
 664 |       "dependencies": {
 665 |         "ajv": "^6.12.4",
 666 |         "debug": "^4.3.2",
 667 |         "espree": "^10.0.1",
 668 |         "globals": "^14.0.0",
 669 |         "ignore": "^5.2.0",
 670 |         "import-fresh": "^3.2.1",
 671 |         "js-yaml": "^4.1.0",
 672 |         "minimatch": "^3.1.2",
 673 |         "strip-json-comments": "^3.1.1"
 674 |       },
 675 |       "engines": {
 676 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
 677 |       },
 678 |       "funding": {
 679 |         "url": "https://opencollective.com/eslint"
 680 |       }
 681 |     },
 682 |     "node_modules/@eslint/eslintrc/node_modules/globals": {
 683 |       "version": "14.0.0",
 684 |       "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
 685 |       "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
 686 |       "dev": true,
 687 |       "license": "MIT",
 688 |       "engines": {
 689 |         "node": ">=18"
 690 |       },
 691 |       "funding": {
 692 |         "url": "https://github.com/sponsors/sindresorhus"
 693 |       }
 694 |     },
 695 |     "node_modules/@eslint/js": {
 696 |       "version": "9.32.0",
 697 |       "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.32.0.tgz",
 698 |       "integrity": "sha512-BBpRFZK3eX6uMLKz8WxFOBIFFcGFJ/g8XuwjTHCqHROSIsopI+ddn/d5Cfh36+7+e5edVS8dbSHnBNhrLEX0zg==",
 699 |       "dev": true,
 700 |       "license": "MIT",
 701 |       "engines": {
 702 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
 703 |       },
 704 |       "funding": {
 705 |         "url": "https://eslint.org/donate"
 706 |       }
 707 |     },
 708 |     "node_modules/@eslint/object-schema": {
 709 |       "version": "2.1.6",
 710 |       "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
 711 |       "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
 712 |       "dev": true,
 713 |       "license": "Apache-2.0",
 714 |       "engines": {
 715 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
 716 |       }
 717 |     },
 718 |     "node_modules/@eslint/plugin-kit": {
 719 |       "version": "0.3.4",
 720 |       "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.4.tgz",
 721 |       "integrity": "sha512-Ul5l+lHEcw3L5+k8POx6r74mxEYKG5kOb6Xpy2gCRW6zweT6TEhAf8vhxGgjhqrd/VO/Dirhsb+1hNpD1ue9hw==",
 722 |       "dev": true,
 723 |       "license": "Apache-2.0",
 724 |       "dependencies": {
 725 |         "@eslint/core": "^0.15.1",
 726 |         "levn": "^0.4.1"
 727 |       },
 728 |       "engines": {
 729 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
 730 |       }
 731 |     },
 732 |     "node_modules/@floating-ui/core": {
 733 |       "version": "1.7.2",
 734 |       "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.7.2.tgz",
 735 |       "integrity": "sha512-wNB5ooIKHQc+Kui96jE/n69rHFWAVoxn5CAzL1Xdd8FG03cgY3MLO+GF9U3W737fYDSgPWA6MReKhBQBop6Pcw==",
 736 |       "license": "MIT",
 737 |       "dependencies": {
 738 |         "@floating-ui/utils": "^0.2.10"
 739 |       }
 740 |     },
 741 |     "node_modules/@floating-ui/dom": {
 742 |       "version": "1.7.2",
 743 |       "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.7.2.tgz",
 744 |       "integrity": "sha512-7cfaOQuCS27HD7DX+6ib2OrnW+b4ZBwDNnCcT0uTyidcmyWb03FnQqJybDBoCnpdxwBSfA94UAYlRCt7mV+TbA==",
 745 |       "license": "MIT",
 746 |       "dependencies": {
 747 |         "@floating-ui/core": "^1.7.2",
 748 |         "@floating-ui/utils": "^0.2.10"
 749 |       }
 750 |     },
 751 |     "node_modules/@floating-ui/react-dom": {
 752 |       "version": "2.1.4",
 753 |       "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.4.tgz",
 754 |       "integrity": "sha512-JbbpPhp38UmXDDAu60RJmbeme37Jbgsm7NrHGgzYYFKmblzRUh6Pa641dII6LsjwF4XlScDrde2UAzDo/b9KPw==",
 755 |       "license": "MIT",
 756 |       "dependencies": {
 757 |         "@floating-ui/dom": "^1.7.2"
 758 |       },
 759 |       "peerDependencies": {
 760 |         "react": ">=16.8.0",
 761 |         "react-dom": ">=16.8.0"
 762 |       }
 763 |     },
 764 |     "node_modules/@floating-ui/utils": {
 765 |       "version": "0.2.10",
 766 |       "resolved": "https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.10.tgz",
 767 |       "integrity": "sha512-aGTxbpbg8/b5JfU1HXSrbH3wXZuLPJcNEcZQFMxLs3oSzgtVu6nFPkbbGGUvBcUjKV2YyB9Wxxabo+HEH9tcRQ==",
 768 |       "license": "MIT"
 769 |     },
 770 |     "node_modules/@hookform/resolvers": {
 771 |       "version": "3.10.0",
 772 |       "resolved": "https://registry.npmjs.org/@hookform/resolvers/-/resolvers-3.10.0.tgz",
 773 |       "integrity": "sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==",
 774 |       "license": "MIT",
 775 |       "peerDependencies": {
 776 |         "react-hook-form": "^7.0.0"
 777 |       }
 778 |     },
 779 |     "node_modules/@humanfs/core": {
 780 |       "version": "0.19.1",
 781 |       "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
 782 |       "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
 783 |       "dev": true,
 784 |       "license": "Apache-2.0",
 785 |       "engines": {
 786 |         "node": ">=18.18.0"
 787 |       }
 788 |     },
 789 |     "node_modules/@humanfs/node": {
 790 |       "version": "0.16.6",
 791 |       "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
 792 |       "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
 793 |       "dev": true,
 794 |       "license": "Apache-2.0",
 795 |       "dependencies": {
 796 |         "@humanfs/core": "^0.19.1",
 797 |         "@humanwhocodes/retry": "^0.3.0"
 798 |       },
 799 |       "engines": {
 800 |         "node": ">=18.18.0"
 801 |       }
 802 |     },
 803 |     "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
 804 |       "version": "0.3.1",
 805 |       "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
 806 |       "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
 807 |       "dev": true,
 808 |       "license": "Apache-2.0",
 809 |       "engines": {
 810 |         "node": ">=18.18"
 811 |       },
 812 |       "funding": {
 813 |         "type": "github",
 814 |         "url": "https://github.com/sponsors/nzakas"
 815 |       }
 816 |     },
 817 |     "node_modules/@humanwhocodes/module-importer": {
 818 |       "version": "1.0.1",
 819 |       "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
 820 |       "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
 821 |       "dev": true,
 822 |       "license": "Apache-2.0",
 823 |       "engines": {
 824 |         "node": ">=12.22"
 825 |       },
 826 |       "funding": {
 827 |         "type": "github",
 828 |         "url": "https://github.com/sponsors/nzakas"
 829 |       }
 830 |     },
 831 |     "node_modules/@humanwhocodes/retry": {
 832 |       "version": "0.4.3",
 833 |       "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
 834 |       "integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
 835 |       "dev": true,
 836 |       "license": "Apache-2.0",
 837 |       "engines": {
 838 |         "node": ">=18.18"
 839 |       },
 840 |       "funding": {
 841 |         "type": "github",
 842 |         "url": "https://github.com/sponsors/nzakas"
 843 |       }
 844 |     },
 845 |     "node_modules/@isaacs/cliui": {
 846 |       "version": "8.0.2",
 847 |       "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
 848 |       "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
 849 |       "license": "ISC",
 850 |       "dependencies": {
 851 |         "string-width": "^5.1.2",
 852 |         "string-width-cjs": "npm:string-width@^4.2.0",
 853 |         "strip-ansi": "^7.0.1",
 854 |         "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
 855 |         "wrap-ansi": "^8.1.0",
 856 |         "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
 857 |       },
 858 |       "engines": {
 859 |         "node": ">=12"
 860 |       }
 861 |     },
 862 |     "node_modules/@jridgewell/gen-mapping": {
 863 |       "version": "0.3.5",
 864 |       "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz",
 865 |       "integrity": "sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==",
 866 |       "license": "MIT",
 867 |       "dependencies": {
 868 |         "@jridgewell/set-array": "^1.2.1",
 869 |         "@jridgewell/sourcemap-codec": "^1.4.10",
 870 |         "@jridgewell/trace-mapping": "^0.3.24"
 871 |       },
 872 |       "engines": {
 873 |         "node": ">=6.0.0"
 874 |       }
 875 |     },
 876 |     "node_modules/@jridgewell/resolve-uri": {
 877 |       "version": "3.1.2",
 878 |       "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
 879 |       "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
 880 |       "license": "MIT",
 881 |       "engines": {
 882 |         "node": ">=6.0.0"
 883 |       }
 884 |     },
 885 |     "node_modules/@jridgewell/set-array": {
 886 |       "version": "1.2.1",
 887 |       "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
 888 |       "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
 889 |       "license": "MIT",
 890 |       "engines": {
 891 |         "node": ">=6.0.0"
 892 |       }
 893 |     },
 894 |     "node_modules/@jridgewell/sourcemap-codec": {
 895 |       "version": "1.5.0",
 896 |       "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
 897 |       "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
 898 |       "license": "MIT"
 899 |     },
 900 |     "node_modules/@jridgewell/trace-mapping": {
 901 |       "version": "0.3.25",
 902 |       "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
 903 |       "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
 904 |       "license": "MIT",
 905 |       "dependencies": {
 906 |         "@jridgewell/resolve-uri": "^3.1.0",
 907 |         "@jridgewell/sourcemap-codec": "^1.4.14"
 908 |       }
 909 |     },
 910 |     "node_modules/@nodelib/fs.scandir": {
 911 |       "version": "2.1.5",
 912 |       "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
 913 |       "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
 914 |       "license": "MIT",
 915 |       "dependencies": {
 916 |         "@nodelib/fs.stat": "2.0.5",
 917 |         "run-parallel": "^1.1.9"
 918 |       },
 919 |       "engines": {
 920 |         "node": ">= 8"
 921 |       }
 922 |     },
 923 |     "node_modules/@nodelib/fs.stat": {
 924 |       "version": "2.0.5",
 925 |       "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
 926 |       "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
 927 |       "license": "MIT",
 928 |       "engines": {
 929 |         "node": ">= 8"
 930 |       }
 931 |     },
 932 |     "node_modules/@nodelib/fs.walk": {
 933 |       "version": "1.2.8",
 934 |       "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
 935 |       "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
 936 |       "license": "MIT",
 937 |       "dependencies": {
 938 |         "@nodelib/fs.scandir": "2.1.5",
 939 |         "fastq": "^1.6.0"
 940 |       },
 941 |       "engines": {
 942 |         "node": ">= 8"
 943 |       }
 944 |     },
 945 |     "node_modules/@pkgjs/parseargs": {
 946 |       "version": "0.11.0",
 947 |       "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
 948 |       "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
 949 |       "license": "MIT",
 950 |       "optional": true,
 951 |       "engines": {
 952 |         "node": ">=14"
 953 |       }
 954 |     },
 955 |     "node_modules/@radix-ui/number": {
 956 |       "version": "1.1.1",
 957 |       "resolved": "https://registry.npmjs.org/@radix-ui/number/-/number-1.1.1.tgz",
 958 |       "integrity": "sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==",
 959 |       "license": "MIT"
 960 |     },
 961 |     "node_modules/@radix-ui/primitive": {
 962 |       "version": "1.1.2",
 963 |       "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz",
 964 |       "integrity": "sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==",
 965 |       "license": "MIT"
 966 |     },
 967 |     "node_modules/@radix-ui/react-accordion": {
 968 |       "version": "1.2.11",
 969 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-accordion/-/react-accordion-1.2.11.tgz",
 970 |       "integrity": "sha512-l3W5D54emV2ues7jjeG1xcyN7S3jnK3zE2zHqgn0CmMsy9lNJwmgcrmaxS+7ipw15FAivzKNzH3d5EcGoFKw0A==",
 971 |       "license": "MIT",
 972 |       "dependencies": {
 973 |         "@radix-ui/primitive": "1.1.2",
 974 |         "@radix-ui/react-collapsible": "1.1.11",
 975 |         "@radix-ui/react-collection": "1.1.7",
 976 |         "@radix-ui/react-compose-refs": "1.1.2",
 977 |         "@radix-ui/react-context": "1.1.2",
 978 |         "@radix-ui/react-direction": "1.1.1",
 979 |         "@radix-ui/react-id": "1.1.1",
 980 |         "@radix-ui/react-primitive": "2.1.3",
 981 |         "@radix-ui/react-use-controllable-state": "1.2.2"
 982 |       },
 983 |       "peerDependencies": {
 984 |         "@types/react": "*",
 985 |         "@types/react-dom": "*",
 986 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
 987 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
 988 |       },
 989 |       "peerDependenciesMeta": {
 990 |         "@types/react": {
 991 |           "optional": true
 992 |         },
 993 |         "@types/react-dom": {
 994 |           "optional": true
 995 |         }
 996 |       }
 997 |     },
 998 |     "node_modules/@radix-ui/react-alert-dialog": {
 999 |       "version": "1.1.14",
1000 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-alert-dialog/-/react-alert-dialog-1.1.14.tgz",
1001 |       "integrity": "sha512-IOZfZ3nPvN6lXpJTBCunFQPRSvK8MDgSc1FB85xnIpUKOw9en0dJj8JmCAxV7BiZdtYlUpmrQjoTFkVYtdoWzQ==",
1002 |       "license": "MIT",
1003 |       "dependencies": {
1004 |         "@radix-ui/primitive": "1.1.2",
1005 |         "@radix-ui/react-compose-refs": "1.1.2",
1006 |         "@radix-ui/react-context": "1.1.2",
1007 |         "@radix-ui/react-dialog": "1.1.14",
1008 |         "@radix-ui/react-primitive": "2.1.3",
1009 |         "@radix-ui/react-slot": "1.2.3"
1010 |       },
1011 |       "peerDependencies": {
1012 |         "@types/react": "*",
1013 |         "@types/react-dom": "*",
1014 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1015 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1016 |       },
1017 |       "peerDependenciesMeta": {
1018 |         "@types/react": {
1019 |           "optional": true
1020 |         },
1021 |         "@types/react-dom": {
1022 |           "optional": true
1023 |         }
1024 |       }
1025 |     },
1026 |     "node_modules/@radix-ui/react-arrow": {
1027 |       "version": "1.1.7",
1028 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-arrow/-/react-arrow-1.1.7.tgz",
1029 |       "integrity": "sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==",
1030 |       "license": "MIT",
1031 |       "dependencies": {
1032 |         "@radix-ui/react-primitive": "2.1.3"
1033 |       },
1034 |       "peerDependencies": {
1035 |         "@types/react": "*",
1036 |         "@types/react-dom": "*",
1037 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1038 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1039 |       },
1040 |       "peerDependenciesMeta": {
1041 |         "@types/react": {
1042 |           "optional": true
1043 |         },
1044 |         "@types/react-dom": {
1045 |           "optional": true
1046 |         }
1047 |       }
1048 |     },
1049 |     "node_modules/@radix-ui/react-aspect-ratio": {
1050 |       "version": "1.1.7",
1051 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-aspect-ratio/-/react-aspect-ratio-1.1.7.tgz",
1052 |       "integrity": "sha512-Yq6lvO9HQyPwev1onK1daHCHqXVLzPhSVjmsNjCa2Zcxy2f7uJD2itDtxknv6FzAKCwD1qQkeVDmX/cev13n/g==",
1053 |       "license": "MIT",
1054 |       "dependencies": {
1055 |         "@radix-ui/react-primitive": "2.1.3"
1056 |       },
1057 |       "peerDependencies": {
1058 |         "@types/react": "*",
1059 |         "@types/react-dom": "*",
1060 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1061 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1062 |       },
1063 |       "peerDependenciesMeta": {
1064 |         "@types/react": {
1065 |           "optional": true
1066 |         },
1067 |         "@types/react-dom": {
1068 |           "optional": true
1069 |         }
1070 |       }
1071 |     },
1072 |     "node_modules/@radix-ui/react-avatar": {
1073 |       "version": "1.1.10",
1074 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-avatar/-/react-avatar-1.1.10.tgz",
1075 |       "integrity": "sha512-V8piFfWapM5OmNCXTzVQY+E1rDa53zY+MQ4Y7356v4fFz6vqCyUtIz2rUD44ZEdwg78/jKmMJHj07+C/Z/rcog==",
1076 |       "license": "MIT",
1077 |       "dependencies": {
1078 |         "@radix-ui/react-context": "1.1.2",
1079 |         "@radix-ui/react-primitive": "2.1.3",
1080 |         "@radix-ui/react-use-callback-ref": "1.1.1",
1081 |         "@radix-ui/react-use-is-hydrated": "0.1.0",
1082 |         "@radix-ui/react-use-layout-effect": "1.1.1"
1083 |       },
1084 |       "peerDependencies": {
1085 |         "@types/react": "*",
1086 |         "@types/react-dom": "*",
1087 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1088 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1089 |       },
1090 |       "peerDependenciesMeta": {
1091 |         "@types/react": {
1092 |           "optional": true
1093 |         },
1094 |         "@types/react-dom": {
1095 |           "optional": true
1096 |         }
1097 |       }
1098 |     },
1099 |     "node_modules/@radix-ui/react-checkbox": {
1100 |       "version": "1.3.2",
1101 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-checkbox/-/react-checkbox-1.3.2.tgz",
1102 |       "integrity": "sha512-yd+dI56KZqawxKZrJ31eENUwqc1QSqg4OZ15rybGjF2ZNwMO+wCyHzAVLRp9qoYJf7kYy0YpZ2b0JCzJ42HZpA==",
1103 |       "license": "MIT",
1104 |       "dependencies": {
1105 |         "@radix-ui/primitive": "1.1.2",
1106 |         "@radix-ui/react-compose-refs": "1.1.2",
1107 |         "@radix-ui/react-context": "1.1.2",
1108 |         "@radix-ui/react-presence": "1.1.4",
1109 |         "@radix-ui/react-primitive": "2.1.3",
1110 |         "@radix-ui/react-use-controllable-state": "1.2.2",
1111 |         "@radix-ui/react-use-previous": "1.1.1",
1112 |         "@radix-ui/react-use-size": "1.1.1"
1113 |       },
1114 |       "peerDependencies": {
1115 |         "@types/react": "*",
1116 |         "@types/react-dom": "*",
1117 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1118 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1119 |       },
1120 |       "peerDependenciesMeta": {
1121 |         "@types/react": {
1122 |           "optional": true
1123 |         },
1124 |         "@types/react-dom": {
1125 |           "optional": true
1126 |         }
1127 |       }
1128 |     },
1129 |     "node_modules/@radix-ui/react-collapsible": {
1130 |       "version": "1.1.11",
1131 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-collapsible/-/react-collapsible-1.1.11.tgz",
1132 |       "integrity": "sha512-2qrRsVGSCYasSz1RFOorXwl0H7g7J1frQtgpQgYrt+MOidtPAINHn9CPovQXb83r8ahapdx3Tu0fa/pdFFSdPg==",
1133 |       "license": "MIT",
1134 |       "dependencies": {
1135 |         "@radix-ui/primitive": "1.1.2",
1136 |         "@radix-ui/react-compose-refs": "1.1.2",
1137 |         "@radix-ui/react-context": "1.1.2",
1138 |         "@radix-ui/react-id": "1.1.1",
1139 |         "@radix-ui/react-presence": "1.1.4",
1140 |         "@radix-ui/react-primitive": "2.1.3",
1141 |         "@radix-ui/react-use-controllable-state": "1.2.2",
1142 |         "@radix-ui/react-use-layout-effect": "1.1.1"
1143 |       },
1144 |       "peerDependencies": {
1145 |         "@types/react": "*",
1146 |         "@types/react-dom": "*",
1147 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1148 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1149 |       },
1150 |       "peerDependenciesMeta": {
1151 |         "@types/react": {
1152 |           "optional": true
1153 |         },
1154 |         "@types/react-dom": {
1155 |           "optional": true
1156 |         }
1157 |       }
1158 |     },
1159 |     "node_modules/@radix-ui/react-collection": {
1160 |       "version": "1.1.7",
1161 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-collection/-/react-collection-1.1.7.tgz",
1162 |       "integrity": "sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==",
1163 |       "license": "MIT",
1164 |       "dependencies": {
1165 |         "@radix-ui/react-compose-refs": "1.1.2",
1166 |         "@radix-ui/react-context": "1.1.2",
1167 |         "@radix-ui/react-primitive": "2.1.3",
1168 |         "@radix-ui/react-slot": "1.2.3"
1169 |       },
1170 |       "peerDependencies": {
1171 |         "@types/react": "*",
1172 |         "@types/react-dom": "*",
1173 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1174 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1175 |       },
1176 |       "peerDependenciesMeta": {
1177 |         "@types/react": {
1178 |           "optional": true
1179 |         },
1180 |         "@types/react-dom": {
1181 |           "optional": true
1182 |         }
1183 |       }
1184 |     },
1185 |     "node_modules/@radix-ui/react-compose-refs": {
1186 |       "version": "1.1.2",
1187 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
1188 |       "integrity": "sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==",
1189 |       "license": "MIT",
1190 |       "peerDependencies": {
1191 |         "@types/react": "*",
1192 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1193 |       },
1194 |       "peerDependenciesMeta": {
1195 |         "@types/react": {
1196 |           "optional": true
1197 |         }
1198 |       }
1199 |     },
1200 |     "node_modules/@radix-ui/react-context": {
1201 |       "version": "1.1.2",
1202 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz",
1203 |       "integrity": "sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==",
1204 |       "license": "MIT",
1205 |       "peerDependencies": {
1206 |         "@types/react": "*",
1207 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1208 |       },
1209 |       "peerDependenciesMeta": {
1210 |         "@types/react": {
1211 |           "optional": true
1212 |         }
1213 |       }
1214 |     },
1215 |     "node_modules/@radix-ui/react-context-menu": {
1216 |       "version": "2.2.15",
1217 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-context-menu/-/react-context-menu-2.2.15.tgz",
1218 |       "integrity": "sha512-UsQUMjcYTsBjTSXw0P3GO0werEQvUY2plgRQuKoCTtkNr45q1DiL51j4m7gxhABzZ0BadoXNsIbg7F3KwiUBbw==",
1219 |       "license": "MIT",
1220 |       "dependencies": {
1221 |         "@radix-ui/primitive": "1.1.2",
1222 |         "@radix-ui/react-context": "1.1.2",
1223 |         "@radix-ui/react-menu": "2.1.15",
1224 |         "@radix-ui/react-primitive": "2.1.3",
1225 |         "@radix-ui/react-use-callback-ref": "1.1.1",
1226 |         "@radix-ui/react-use-controllable-state": "1.2.2"
1227 |       },
1228 |       "peerDependencies": {
1229 |         "@types/react": "*",
1230 |         "@types/react-dom": "*",
1231 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1232 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1233 |       },
1234 |       "peerDependenciesMeta": {
1235 |         "@types/react": {
1236 |           "optional": true
1237 |         },
1238 |         "@types/react-dom": {
1239 |           "optional": true
1240 |         }
1241 |       }
1242 |     },
1243 |     "node_modules/@radix-ui/react-dialog": {
1244 |       "version": "1.1.14",
1245 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-dialog/-/react-dialog-1.1.14.tgz",
1246 |       "integrity": "sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==",
1247 |       "license": "MIT",
1248 |       "dependencies": {
1249 |         "@radix-ui/primitive": "1.1.2",
1250 |         "@radix-ui/react-compose-refs": "1.1.2",
1251 |         "@radix-ui/react-context": "1.1.2",
1252 |         "@radix-ui/react-dismissable-layer": "1.1.10",
1253 |         "@radix-ui/react-focus-guards": "1.1.2",
1254 |         "@radix-ui/react-focus-scope": "1.1.7",
1255 |         "@radix-ui/react-id": "1.1.1",
1256 |         "@radix-ui/react-portal": "1.1.9",
1257 |         "@radix-ui/react-presence": "1.1.4",
1258 |         "@radix-ui/react-primitive": "2.1.3",
1259 |         "@radix-ui/react-slot": "1.2.3",
1260 |         "@radix-ui/react-use-controllable-state": "1.2.2",
1261 |         "aria-hidden": "^1.2.4",
1262 |         "react-remove-scroll": "^2.6.3"
1263 |       },
1264 |       "peerDependencies": {
1265 |         "@types/react": "*",
1266 |         "@types/react-dom": "*",
1267 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1268 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1269 |       },
1270 |       "peerDependenciesMeta": {
1271 |         "@types/react": {
1272 |           "optional": true
1273 |         },
1274 |         "@types/react-dom": {
1275 |           "optional": true
1276 |         }
1277 |       }
1278 |     },
1279 |     "node_modules/@radix-ui/react-direction": {
1280 |       "version": "1.1.1",
1281 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz",
1282 |       "integrity": "sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==",
1283 |       "license": "MIT",
1284 |       "peerDependencies": {
1285 |         "@types/react": "*",
1286 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1287 |       },
1288 |       "peerDependenciesMeta": {
1289 |         "@types/react": {
1290 |           "optional": true
1291 |         }
1292 |       }
1293 |     },
1294 |     "node_modules/@radix-ui/react-dismissable-layer": {
1295 |       "version": "1.1.10",
1296 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-dismissable-layer/-/react-dismissable-layer-1.1.10.tgz",
1297 |       "integrity": "sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==",
1298 |       "license": "MIT",
1299 |       "dependencies": {
1300 |         "@radix-ui/primitive": "1.1.2",
1301 |         "@radix-ui/react-compose-refs": "1.1.2",
1302 |         "@radix-ui/react-primitive": "2.1.3",
1303 |         "@radix-ui/react-use-callback-ref": "1.1.1",
1304 |         "@radix-ui/react-use-escape-keydown": "1.1.1"
1305 |       },
1306 |       "peerDependencies": {
1307 |         "@types/react": "*",
1308 |         "@types/react-dom": "*",
1309 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1310 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1311 |       },
1312 |       "peerDependenciesMeta": {
1313 |         "@types/react": {
1314 |           "optional": true
1315 |         },
1316 |         "@types/react-dom": {
1317 |           "optional": true
1318 |         }
1319 |       }
1320 |     },
1321 |     "node_modules/@radix-ui/react-dropdown-menu": {
1322 |       "version": "2.1.15",
1323 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-dropdown-menu/-/react-dropdown-menu-2.1.15.tgz",
1324 |       "integrity": "sha512-mIBnOjgwo9AH3FyKaSWoSu/dYj6VdhJ7frEPiGTeXCdUFHjl9h3mFh2wwhEtINOmYXWhdpf1rY2minFsmaNgVQ==",
1325 |       "license": "MIT",
1326 |       "dependencies": {
1327 |         "@radix-ui/primitive": "1.1.2",
1328 |         "@radix-ui/react-compose-refs": "1.1.2",
1329 |         "@radix-ui/react-context": "1.1.2",
1330 |         "@radix-ui/react-id": "1.1.1",
1331 |         "@radix-ui/react-menu": "2.1.15",
1332 |         "@radix-ui/react-primitive": "2.1.3",
1333 |         "@radix-ui/react-use-controllable-state": "1.2.2"
1334 |       },
1335 |       "peerDependencies": {
1336 |         "@types/react": "*",
1337 |         "@types/react-dom": "*",
1338 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1339 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1340 |       },
1341 |       "peerDependenciesMeta": {
1342 |         "@types/react": {
1343 |           "optional": true
1344 |         },
1345 |         "@types/react-dom": {
1346 |           "optional": true
1347 |         }
1348 |       }
1349 |     },
1350 |     "node_modules/@radix-ui/react-focus-guards": {
1351 |       "version": "1.1.2",
1352 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-guards/-/react-focus-guards-1.1.2.tgz",
1353 |       "integrity": "sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==",
1354 |       "license": "MIT",
1355 |       "peerDependencies": {
1356 |         "@types/react": "*",
1357 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1358 |       },
1359 |       "peerDependenciesMeta": {
1360 |         "@types/react": {
1361 |           "optional": true
1362 |         }
1363 |       }
1364 |     },
1365 |     "node_modules/@radix-ui/react-focus-scope": {
1366 |       "version": "1.1.7",
1367 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-scope/-/react-focus-scope-1.1.7.tgz",
1368 |       "integrity": "sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==",
1369 |       "license": "MIT",
1370 |       "dependencies": {
1371 |         "@radix-ui/react-compose-refs": "1.1.2",
1372 |         "@radix-ui/react-primitive": "2.1.3",
1373 |         "@radix-ui/react-use-callback-ref": "1.1.1"
1374 |       },
1375 |       "peerDependencies": {
1376 |         "@types/react": "*",
1377 |         "@types/react-dom": "*",
1378 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1379 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1380 |       },
1381 |       "peerDependenciesMeta": {
1382 |         "@types/react": {
1383 |           "optional": true
1384 |         },
1385 |         "@types/react-dom": {
1386 |           "optional": true
1387 |         }
1388 |       }
1389 |     },
1390 |     "node_modules/@radix-ui/react-hover-card": {
1391 |       "version": "1.1.14",
1392 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-hover-card/-/react-hover-card-1.1.14.tgz",
1393 |       "integrity": "sha512-CPYZ24Mhirm+g6D8jArmLzjYu4Eyg3TTUHswR26QgzXBHBe64BO/RHOJKzmF/Dxb4y4f9PKyJdwm/O/AhNkb+Q==",
1394 |       "license": "MIT",
1395 |       "dependencies": {
1396 |         "@radix-ui/primitive": "1.1.2",
1397 |         "@radix-ui/react-compose-refs": "1.1.2",
1398 |         "@radix-ui/react-context": "1.1.2",
1399 |         "@radix-ui/react-dismissable-layer": "1.1.10",
1400 |         "@radix-ui/react-popper": "1.2.7",
1401 |         "@radix-ui/react-portal": "1.1.9",
1402 |         "@radix-ui/react-presence": "1.1.4",
1403 |         "@radix-ui/react-primitive": "2.1.3",
1404 |         "@radix-ui/react-use-controllable-state": "1.2.2"
1405 |       },
1406 |       "peerDependencies": {
1407 |         "@types/react": "*",
1408 |         "@types/react-dom": "*",
1409 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1410 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1411 |       },
1412 |       "peerDependenciesMeta": {
1413 |         "@types/react": {
1414 |           "optional": true
1415 |         },
1416 |         "@types/react-dom": {
1417 |           "optional": true
1418 |         }
1419 |       }
1420 |     },
1421 |     "node_modules/@radix-ui/react-id": {
1422 |       "version": "1.1.1",
1423 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
1424 |       "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
1425 |       "license": "MIT",
1426 |       "dependencies": {
1427 |         "@radix-ui/react-use-layout-effect": "1.1.1"
1428 |       },
1429 |       "peerDependencies": {
1430 |         "@types/react": "*",
1431 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1432 |       },
1433 |       "peerDependenciesMeta": {
1434 |         "@types/react": {
1435 |           "optional": true
1436 |         }
1437 |       }
1438 |     },
1439 |     "node_modules/@radix-ui/react-label": {
1440 |       "version": "2.1.7",
1441 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-label/-/react-label-2.1.7.tgz",
1442 |       "integrity": "sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==",
1443 |       "license": "MIT",
1444 |       "dependencies": {
1445 |         "@radix-ui/react-primitive": "2.1.3"
1446 |       },
1447 |       "peerDependencies": {
1448 |         "@types/react": "*",
1449 |         "@types/react-dom": "*",
1450 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1451 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1452 |       },
1453 |       "peerDependenciesMeta": {
1454 |         "@types/react": {
1455 |           "optional": true
1456 |         },
1457 |         "@types/react-dom": {
1458 |           "optional": true
1459 |         }
1460 |       }
1461 |     },
1462 |     "node_modules/@radix-ui/react-menu": {
1463 |       "version": "2.1.15",
1464 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-menu/-/react-menu-2.1.15.tgz",
1465 |       "integrity": "sha512-tVlmA3Vb9n8SZSd+YSbuFR66l87Wiy4du+YE+0hzKQEANA+7cWKH1WgqcEX4pXqxUFQKrWQGHdvEfw00TjFiew==",
1466 |       "license": "MIT",
1467 |       "dependencies": {
1468 |         "@radix-ui/primitive": "1.1.2",
1469 |         "@radix-ui/react-collection": "1.1.7",
1470 |         "@radix-ui/react-compose-refs": "1.1.2",
1471 |         "@radix-ui/react-context": "1.1.2",
1472 |         "@radix-ui/react-direction": "1.1.1",
1473 |         "@radix-ui/react-dismissable-layer": "1.1.10",
1474 |         "@radix-ui/react-focus-guards": "1.1.2",
1475 |         "@radix-ui/react-focus-scope": "1.1.7",
1476 |         "@radix-ui/react-id": "1.1.1",
1477 |         "@radix-ui/react-popper": "1.2.7",
1478 |         "@radix-ui/react-portal": "1.1.9",
1479 |         "@radix-ui/react-presence": "1.1.4",
1480 |         "@radix-ui/react-primitive": "2.1.3",
1481 |         "@radix-ui/react-roving-focus": "1.1.10",
1482 |         "@radix-ui/react-slot": "1.2.3",
1483 |         "@radix-ui/react-use-callback-ref": "1.1.1",
1484 |         "aria-hidden": "^1.2.4",
1485 |         "react-remove-scroll": "^2.6.3"
1486 |       },
1487 |       "peerDependencies": {
1488 |         "@types/react": "*",
1489 |         "@types/react-dom": "*",
1490 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1491 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1492 |       },
1493 |       "peerDependenciesMeta": {
1494 |         "@types/react": {
1495 |           "optional": true
1496 |         },
1497 |         "@types/react-dom": {
1498 |           "optional": true
1499 |         }
1500 |       }
1501 |     },
1502 |     "node_modules/@radix-ui/react-menubar": {
1503 |       "version": "1.1.15",
1504 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-menubar/-/react-menubar-1.1.15.tgz",
1505 |       "integrity": "sha512-Z71C7LGD+YDYo3TV81paUs8f3Zbmkvg6VLRQpKYfzioOE6n7fOhA3ApK/V/2Odolxjoc4ENk8AYCjohCNayd5A==",
1506 |       "license": "MIT",
1507 |       "dependencies": {
1508 |         "@radix-ui/primitive": "1.1.2",
1509 |         "@radix-ui/react-collection": "1.1.7",
1510 |         "@radix-ui/react-compose-refs": "1.1.2",
1511 |         "@radix-ui/react-context": "1.1.2",
1512 |         "@radix-ui/react-direction": "1.1.1",
1513 |         "@radix-ui/react-id": "1.1.1",
1514 |         "@radix-ui/react-menu": "2.1.15",
1515 |         "@radix-ui/react-primitive": "2.1.3",
1516 |         "@radix-ui/react-roving-focus": "1.1.10",
1517 |         "@radix-ui/react-use-controllable-state": "1.2.2"
1518 |       },
1519 |       "peerDependencies": {
1520 |         "@types/react": "*",
1521 |         "@types/react-dom": "*",
1522 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1523 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1524 |       },
1525 |       "peerDependenciesMeta": {
1526 |         "@types/react": {
1527 |           "optional": true
1528 |         },
1529 |         "@types/react-dom": {
1530 |           "optional": true
1531 |         }
1532 |       }
1533 |     },
1534 |     "node_modules/@radix-ui/react-navigation-menu": {
1535 |       "version": "1.2.13",
1536 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-navigation-menu/-/react-navigation-menu-1.2.13.tgz",
1537 |       "integrity": "sha512-WG8wWfDiJlSF5hELjwfjSGOXcBR/ZMhBFCGYe8vERpC39CQYZeq1PQ2kaYHdye3V95d06H89KGMsVCIE4LWo3g==",
1538 |       "license": "MIT",
1539 |       "dependencies": {
1540 |         "@radix-ui/primitive": "1.1.2",
1541 |         "@radix-ui/react-collection": "1.1.7",
1542 |         "@radix-ui/react-compose-refs": "1.1.2",
1543 |         "@radix-ui/react-context": "1.1.2",
1544 |         "@radix-ui/react-direction": "1.1.1",
1545 |         "@radix-ui/react-dismissable-layer": "1.1.10",
1546 |         "@radix-ui/react-id": "1.1.1",
1547 |         "@radix-ui/react-presence": "1.1.4",
1548 |         "@radix-ui/react-primitive": "2.1.3",
1549 |         "@radix-ui/react-use-callback-ref": "1.1.1",
1550 |         "@radix-ui/react-use-controllable-state": "1.2.2",
1551 |         "@radix-ui/react-use-layout-effect": "1.1.1",
1552 |         "@radix-ui/react-use-previous": "1.1.1",
1553 |         "@radix-ui/react-visually-hidden": "1.2.3"
1554 |       },
1555 |       "peerDependencies": {
1556 |         "@types/react": "*",
1557 |         "@types/react-dom": "*",
1558 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1559 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1560 |       },
1561 |       "peerDependenciesMeta": {
1562 |         "@types/react": {
1563 |           "optional": true
1564 |         },
1565 |         "@types/react-dom": {
1566 |           "optional": true
1567 |         }
1568 |       }
1569 |     },
1570 |     "node_modules/@radix-ui/react-popover": {
1571 |       "version": "1.1.14",
1572 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-popover/-/react-popover-1.1.14.tgz",
1573 |       "integrity": "sha512-ODz16+1iIbGUfFEfKx2HTPKizg2MN39uIOV8MXeHnmdd3i/N9Wt7vU46wbHsqA0xoaQyXVcs0KIlBdOA2Y95bw==",
1574 |       "license": "MIT",
1575 |       "dependencies": {
1576 |         "@radix-ui/primitive": "1.1.2",
1577 |         "@radix-ui/react-compose-refs": "1.1.2",
1578 |         "@radix-ui/react-context": "1.1.2",
1579 |         "@radix-ui/react-dismissable-layer": "1.1.10",
1580 |         "@radix-ui/react-focus-guards": "1.1.2",
1581 |         "@radix-ui/react-focus-scope": "1.1.7",
1582 |         "@radix-ui/react-id": "1.1.1",
1583 |         "@radix-ui/react-popper": "1.2.7",
1584 |         "@radix-ui/react-portal": "1.1.9",
1585 |         "@radix-ui/react-presence": "1.1.4",
1586 |         "@radix-ui/react-primitive": "2.1.3",
1587 |         "@radix-ui/react-slot": "1.2.3",
1588 |         "@radix-ui/react-use-controllable-state": "1.2.2",
1589 |         "aria-hidden": "^1.2.4",
1590 |         "react-remove-scroll": "^2.6.3"
1591 |       },
1592 |       "peerDependencies": {
1593 |         "@types/react": "*",
1594 |         "@types/react-dom": "*",
1595 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1596 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1597 |       },
1598 |       "peerDependenciesMeta": {
1599 |         "@types/react": {
1600 |           "optional": true
1601 |         },
1602 |         "@types/react-dom": {
1603 |           "optional": true
1604 |         }
1605 |       }
1606 |     },
1607 |     "node_modules/@radix-ui/react-popper": {
1608 |       "version": "1.2.7",
1609 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-popper/-/react-popper-1.2.7.tgz",
1610 |       "integrity": "sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==",
1611 |       "license": "MIT",
1612 |       "dependencies": {
1613 |         "@floating-ui/react-dom": "^2.0.0",
1614 |         "@radix-ui/react-arrow": "1.1.7",
1615 |         "@radix-ui/react-compose-refs": "1.1.2",
1616 |         "@radix-ui/react-context": "1.1.2",
1617 |         "@radix-ui/react-primitive": "2.1.3",
1618 |         "@radix-ui/react-use-callback-ref": "1.1.1",
1619 |         "@radix-ui/react-use-layout-effect": "1.1.1",
1620 |         "@radix-ui/react-use-rect": "1.1.1",
1621 |         "@radix-ui/react-use-size": "1.1.1",
1622 |         "@radix-ui/rect": "1.1.1"
1623 |       },
1624 |       "peerDependencies": {
1625 |         "@types/react": "*",
1626 |         "@types/react-dom": "*",
1627 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1628 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1629 |       },
1630 |       "peerDependenciesMeta": {
1631 |         "@types/react": {
1632 |           "optional": true
1633 |         },
1634 |         "@types/react-dom": {
1635 |           "optional": true
1636 |         }
1637 |       }
1638 |     },
1639 |     "node_modules/@radix-ui/react-portal": {
1640 |       "version": "1.1.9",
1641 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-portal/-/react-portal-1.1.9.tgz",
1642 |       "integrity": "sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==",
1643 |       "license": "MIT",
1644 |       "dependencies": {
1645 |         "@radix-ui/react-primitive": "2.1.3",
1646 |         "@radix-ui/react-use-layout-effect": "1.1.1"
1647 |       },
1648 |       "peerDependencies": {
1649 |         "@types/react": "*",
1650 |         "@types/react-dom": "*",
1651 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1652 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1653 |       },
1654 |       "peerDependenciesMeta": {
1655 |         "@types/react": {
1656 |           "optional": true
1657 |         },
1658 |         "@types/react-dom": {
1659 |           "optional": true
1660 |         }
1661 |       }
1662 |     },
1663 |     "node_modules/@radix-ui/react-presence": {
1664 |       "version": "1.1.4",
1665 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.1.4.tgz",
1666 |       "integrity": "sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==",
1667 |       "license": "MIT",
1668 |       "dependencies": {
1669 |         "@radix-ui/react-compose-refs": "1.1.2",
1670 |         "@radix-ui/react-use-layout-effect": "1.1.1"
1671 |       },
1672 |       "peerDependencies": {
1673 |         "@types/react": "*",
1674 |         "@types/react-dom": "*",
1675 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1676 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1677 |       },
1678 |       "peerDependenciesMeta": {
1679 |         "@types/react": {
1680 |           "optional": true
1681 |         },
1682 |         "@types/react-dom": {
1683 |           "optional": true
1684 |         }
1685 |       }
1686 |     },
1687 |     "node_modules/@radix-ui/react-primitive": {
1688 |       "version": "2.1.3",
1689 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz",
1690 |       "integrity": "sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==",
1691 |       "license": "MIT",
1692 |       "dependencies": {
1693 |         "@radix-ui/react-slot": "1.2.3"
1694 |       },
1695 |       "peerDependencies": {
1696 |         "@types/react": "*",
1697 |         "@types/react-dom": "*",
1698 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1699 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1700 |       },
1701 |       "peerDependenciesMeta": {
1702 |         "@types/react": {
1703 |           "optional": true
1704 |         },
1705 |         "@types/react-dom": {
1706 |           "optional": true
1707 |         }
1708 |       }
1709 |     },
1710 |     "node_modules/@radix-ui/react-progress": {
1711 |       "version": "1.1.7",
1712 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-progress/-/react-progress-1.1.7.tgz",
1713 |       "integrity": "sha512-vPdg/tF6YC/ynuBIJlk1mm7Le0VgW6ub6J2UWnTQ7/D23KXcPI1qy+0vBkgKgd38RCMJavBXpB83HPNFMTb0Fg==",
1714 |       "license": "MIT",
1715 |       "dependencies": {
1716 |         "@radix-ui/react-context": "1.1.2",
1717 |         "@radix-ui/react-primitive": "2.1.3"
1718 |       },
1719 |       "peerDependencies": {
1720 |         "@types/react": "*",
1721 |         "@types/react-dom": "*",
1722 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1723 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1724 |       },
1725 |       "peerDependenciesMeta": {
1726 |         "@types/react": {
1727 |           "optional": true
1728 |         },
1729 |         "@types/react-dom": {
1730 |           "optional": true
1731 |         }
1732 |       }
1733 |     },
1734 |     "node_modules/@radix-ui/react-radio-group": {
1735 |       "version": "1.3.7",
1736 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-radio-group/-/react-radio-group-1.3.7.tgz",
1737 |       "integrity": "sha512-9w5XhD0KPOrm92OTTE0SysH3sYzHsSTHNvZgUBo/VZ80VdYyB5RneDbc0dKpURS24IxkoFRu/hI0i4XyfFwY6g==",
1738 |       "license": "MIT",
1739 |       "dependencies": {
1740 |         "@radix-ui/primitive": "1.1.2",
1741 |         "@radix-ui/react-compose-refs": "1.1.2",
1742 |         "@radix-ui/react-context": "1.1.2",
1743 |         "@radix-ui/react-direction": "1.1.1",
1744 |         "@radix-ui/react-presence": "1.1.4",
1745 |         "@radix-ui/react-primitive": "2.1.3",
1746 |         "@radix-ui/react-roving-focus": "1.1.10",
1747 |         "@radix-ui/react-use-controllable-state": "1.2.2",
1748 |         "@radix-ui/react-use-previous": "1.1.1",
1749 |         "@radix-ui/react-use-size": "1.1.1"
1750 |       },
1751 |       "peerDependencies": {
1752 |         "@types/react": "*",
1753 |         "@types/react-dom": "*",
1754 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1755 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1756 |       },
1757 |       "peerDependenciesMeta": {
1758 |         "@types/react": {
1759 |           "optional": true
1760 |         },
1761 |         "@types/react-dom": {
1762 |           "optional": true
1763 |         }
1764 |       }
1765 |     },
1766 |     "node_modules/@radix-ui/react-roving-focus": {
1767 |       "version": "1.1.10",
1768 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-roving-focus/-/react-roving-focus-1.1.10.tgz",
1769 |       "integrity": "sha512-dT9aOXUen9JSsxnMPv/0VqySQf5eDQ6LCk5Sw28kamz8wSOW2bJdlX2Bg5VUIIcV+6XlHpWTIuTPCf/UNIyq8Q==",
1770 |       "license": "MIT",
1771 |       "dependencies": {
1772 |         "@radix-ui/primitive": "1.1.2",
1773 |         "@radix-ui/react-collection": "1.1.7",
1774 |         "@radix-ui/react-compose-refs": "1.1.2",
1775 |         "@radix-ui/react-context": "1.1.2",
1776 |         "@radix-ui/react-direction": "1.1.1",
1777 |         "@radix-ui/react-id": "1.1.1",
1778 |         "@radix-ui/react-primitive": "2.1.3",
1779 |         "@radix-ui/react-use-callback-ref": "1.1.1",
1780 |         "@radix-ui/react-use-controllable-state": "1.2.2"
1781 |       },
1782 |       "peerDependencies": {
1783 |         "@types/react": "*",
1784 |         "@types/react-dom": "*",
1785 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1786 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1787 |       },
1788 |       "peerDependenciesMeta": {
1789 |         "@types/react": {
1790 |           "optional": true
1791 |         },
1792 |         "@types/react-dom": {
1793 |           "optional": true
1794 |         }
1795 |       }
1796 |     },
1797 |     "node_modules/@radix-ui/react-scroll-area": {
1798 |       "version": "1.2.9",
1799 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-scroll-area/-/react-scroll-area-1.2.9.tgz",
1800 |       "integrity": "sha512-YSjEfBXnhUELsO2VzjdtYYD4CfQjvao+lhhrX5XsHD7/cyUNzljF1FHEbgTPN7LH2MClfwRMIsYlqTYpKTTe2A==",
1801 |       "license": "MIT",
1802 |       "dependencies": {
1803 |         "@radix-ui/number": "1.1.1",
1804 |         "@radix-ui/primitive": "1.1.2",
1805 |         "@radix-ui/react-compose-refs": "1.1.2",
1806 |         "@radix-ui/react-context": "1.1.2",
1807 |         "@radix-ui/react-direction": "1.1.1",
1808 |         "@radix-ui/react-presence": "1.1.4",
1809 |         "@radix-ui/react-primitive": "2.1.3",
1810 |         "@radix-ui/react-use-callback-ref": "1.1.1",
1811 |         "@radix-ui/react-use-layout-effect": "1.1.1"
1812 |       },
1813 |       "peerDependencies": {
1814 |         "@types/react": "*",
1815 |         "@types/react-dom": "*",
1816 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1817 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1818 |       },
1819 |       "peerDependenciesMeta": {
1820 |         "@types/react": {
1821 |           "optional": true
1822 |         },
1823 |         "@types/react-dom": {
1824 |           "optional": true
1825 |         }
1826 |       }
1827 |     },
1828 |     "node_modules/@radix-ui/react-select": {
1829 |       "version": "2.2.5",
1830 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-select/-/react-select-2.2.5.tgz",
1831 |       "integrity": "sha512-HnMTdXEVuuyzx63ME0ut4+sEMYW6oouHWNGUZc7ddvUWIcfCva/AMoqEW/3wnEllriMWBa0RHspCYnfCWJQYmA==",
1832 |       "license": "MIT",
1833 |       "dependencies": {
1834 |         "@radix-ui/number": "1.1.1",
1835 |         "@radix-ui/primitive": "1.1.2",
1836 |         "@radix-ui/react-collection": "1.1.7",
1837 |         "@radix-ui/react-compose-refs": "1.1.2",
1838 |         "@radix-ui/react-context": "1.1.2",
1839 |         "@radix-ui/react-direction": "1.1.1",
1840 |         "@radix-ui/react-dismissable-layer": "1.1.10",
1841 |         "@radix-ui/react-focus-guards": "1.1.2",
1842 |         "@radix-ui/react-focus-scope": "1.1.7",
1843 |         "@radix-ui/react-id": "1.1.1",
1844 |         "@radix-ui/react-popper": "1.2.7",
1845 |         "@radix-ui/react-portal": "1.1.9",
1846 |         "@radix-ui/react-primitive": "2.1.3",
1847 |         "@radix-ui/react-slot": "1.2.3",
1848 |         "@radix-ui/react-use-callback-ref": "1.1.1",
1849 |         "@radix-ui/react-use-controllable-state": "1.2.2",
1850 |         "@radix-ui/react-use-layout-effect": "1.1.1",
1851 |         "@radix-ui/react-use-previous": "1.1.1",
1852 |         "@radix-ui/react-visually-hidden": "1.2.3",
1853 |         "aria-hidden": "^1.2.4",
1854 |         "react-remove-scroll": "^2.6.3"
1855 |       },
1856 |       "peerDependencies": {
1857 |         "@types/react": "*",
1858 |         "@types/react-dom": "*",
1859 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1860 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1861 |       },
1862 |       "peerDependenciesMeta": {
1863 |         "@types/react": {
1864 |           "optional": true
1865 |         },
1866 |         "@types/react-dom": {
1867 |           "optional": true
1868 |         }
1869 |       }
1870 |     },
1871 |     "node_modules/@radix-ui/react-separator": {
1872 |       "version": "1.1.7",
1873 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-separator/-/react-separator-1.1.7.tgz",
1874 |       "integrity": "sha512-0HEb8R9E8A+jZjvmFCy/J4xhbXy3TV+9XSnGJ3KvTtjlIUy/YQ/p6UYZvi7YbeoeXdyU9+Y3scizK6hkY37baA==",
1875 |       "license": "MIT",
1876 |       "dependencies": {
1877 |         "@radix-ui/react-primitive": "2.1.3"
1878 |       },
1879 |       "peerDependencies": {
1880 |         "@types/react": "*",
1881 |         "@types/react-dom": "*",
1882 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1883 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1884 |       },
1885 |       "peerDependenciesMeta": {
1886 |         "@types/react": {
1887 |           "optional": true
1888 |         },
1889 |         "@types/react-dom": {
1890 |           "optional": true
1891 |         }
1892 |       }
1893 |     },
1894 |     "node_modules/@radix-ui/react-slider": {
1895 |       "version": "1.3.5",
1896 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-slider/-/react-slider-1.3.5.tgz",
1897 |       "integrity": "sha512-rkfe2pU2NBAYfGaxa3Mqosi7VZEWX5CxKaanRv0vZd4Zhl9fvQrg0VM93dv3xGLGfrHuoTRF3JXH8nb9g+B3fw==",
1898 |       "license": "MIT",
1899 |       "dependencies": {
1900 |         "@radix-ui/number": "1.1.1",
1901 |         "@radix-ui/primitive": "1.1.2",
1902 |         "@radix-ui/react-collection": "1.1.7",
1903 |         "@radix-ui/react-compose-refs": "1.1.2",
1904 |         "@radix-ui/react-context": "1.1.2",
1905 |         "@radix-ui/react-direction": "1.1.1",
1906 |         "@radix-ui/react-primitive": "2.1.3",
1907 |         "@radix-ui/react-use-controllable-state": "1.2.2",
1908 |         "@radix-ui/react-use-layout-effect": "1.1.1",
1909 |         "@radix-ui/react-use-previous": "1.1.1",
1910 |         "@radix-ui/react-use-size": "1.1.1"
1911 |       },
1912 |       "peerDependencies": {
1913 |         "@types/react": "*",
1914 |         "@types/react-dom": "*",
1915 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1916 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1917 |       },
1918 |       "peerDependenciesMeta": {
1919 |         "@types/react": {
1920 |           "optional": true
1921 |         },
1922 |         "@types/react-dom": {
1923 |           "optional": true
1924 |         }
1925 |       }
1926 |     },
1927 |     "node_modules/@radix-ui/react-slot": {
1928 |       "version": "1.2.3",
1929 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
1930 |       "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
1931 |       "license": "MIT",
1932 |       "dependencies": {
1933 |         "@radix-ui/react-compose-refs": "1.1.2"
1934 |       },
1935 |       "peerDependencies": {
1936 |         "@types/react": "*",
1937 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1938 |       },
1939 |       "peerDependenciesMeta": {
1940 |         "@types/react": {
1941 |           "optional": true
1942 |         }
1943 |       }
1944 |     },
1945 |     "node_modules/@radix-ui/react-switch": {
1946 |       "version": "1.2.5",
1947 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-switch/-/react-switch-1.2.5.tgz",
1948 |       "integrity": "sha512-5ijLkak6ZMylXsaImpZ8u4Rlf5grRmoc0p0QeX9VJtlrM4f5m3nCTX8tWga/zOA8PZYIR/t0p2Mnvd7InrJ6yQ==",
1949 |       "license": "MIT",
1950 |       "dependencies": {
1951 |         "@radix-ui/primitive": "1.1.2",
1952 |         "@radix-ui/react-compose-refs": "1.1.2",
1953 |         "@radix-ui/react-context": "1.1.2",
1954 |         "@radix-ui/react-primitive": "2.1.3",
1955 |         "@radix-ui/react-use-controllable-state": "1.2.2",
1956 |         "@radix-ui/react-use-previous": "1.1.1",
1957 |         "@radix-ui/react-use-size": "1.1.1"
1958 |       },
1959 |       "peerDependencies": {
1960 |         "@types/react": "*",
1961 |         "@types/react-dom": "*",
1962 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1963 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1964 |       },
1965 |       "peerDependenciesMeta": {
1966 |         "@types/react": {
1967 |           "optional": true
1968 |         },
1969 |         "@types/react-dom": {
1970 |           "optional": true
1971 |         }
1972 |       }
1973 |     },
1974 |     "node_modules/@radix-ui/react-tabs": {
1975 |       "version": "1.1.12",
1976 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-tabs/-/react-tabs-1.1.12.tgz",
1977 |       "integrity": "sha512-GTVAlRVrQrSw3cEARM0nAx73ixrWDPNZAruETn3oHCNP6SbZ/hNxdxp+u7VkIEv3/sFoLq1PfcHrl7Pnp0CDpw==",
1978 |       "license": "MIT",
1979 |       "dependencies": {
1980 |         "@radix-ui/primitive": "1.1.2",
1981 |         "@radix-ui/react-context": "1.1.2",
1982 |         "@radix-ui/react-direction": "1.1.1",
1983 |         "@radix-ui/react-id": "1.1.1",
1984 |         "@radix-ui/react-presence": "1.1.4",
1985 |         "@radix-ui/react-primitive": "2.1.3",
1986 |         "@radix-ui/react-roving-focus": "1.1.10",
1987 |         "@radix-ui/react-use-controllable-state": "1.2.2"
1988 |       },
1989 |       "peerDependencies": {
1990 |         "@types/react": "*",
1991 |         "@types/react-dom": "*",
1992 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
1993 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
1994 |       },
1995 |       "peerDependenciesMeta": {
1996 |         "@types/react": {
1997 |           "optional": true
1998 |         },
1999 |         "@types/react-dom": {
2000 |           "optional": true
2001 |         }
2002 |       }
2003 |     },
2004 |     "node_modules/@radix-ui/react-toast": {
2005 |       "version": "1.2.14",
2006 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-toast/-/react-toast-1.2.14.tgz",
2007 |       "integrity": "sha512-nAP5FBxBJGQ/YfUB+r+O6USFVkWq3gAInkxyEnmvEV5jtSbfDhfa4hwX8CraCnbjMLsE7XSf/K75l9xXY7joWg==",
2008 |       "license": "MIT",
2009 |       "dependencies": {
2010 |         "@radix-ui/primitive": "1.1.2",
2011 |         "@radix-ui/react-collection": "1.1.7",
2012 |         "@radix-ui/react-compose-refs": "1.1.2",
2013 |         "@radix-ui/react-context": "1.1.2",
2014 |         "@radix-ui/react-dismissable-layer": "1.1.10",
2015 |         "@radix-ui/react-portal": "1.1.9",
2016 |         "@radix-ui/react-presence": "1.1.4",
2017 |         "@radix-ui/react-primitive": "2.1.3",
2018 |         "@radix-ui/react-use-callback-ref": "1.1.1",
2019 |         "@radix-ui/react-use-controllable-state": "1.2.2",
2020 |         "@radix-ui/react-use-layout-effect": "1.1.1",
2021 |         "@radix-ui/react-visually-hidden": "1.2.3"
2022 |       },
2023 |       "peerDependencies": {
2024 |         "@types/react": "*",
2025 |         "@types/react-dom": "*",
2026 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
2027 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2028 |       },
2029 |       "peerDependenciesMeta": {
2030 |         "@types/react": {
2031 |           "optional": true
2032 |         },
2033 |         "@types/react-dom": {
2034 |           "optional": true
2035 |         }
2036 |       }
2037 |     },
2038 |     "node_modules/@radix-ui/react-toggle": {
2039 |       "version": "1.1.9",
2040 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-toggle/-/react-toggle-1.1.9.tgz",
2041 |       "integrity": "sha512-ZoFkBBz9zv9GWer7wIjvdRxmh2wyc2oKWw6C6CseWd6/yq1DK/l5lJ+wnsmFwJZbBYqr02mrf8A2q/CVCuM3ZA==",
2042 |       "license": "MIT",
2043 |       "dependencies": {
2044 |         "@radix-ui/primitive": "1.1.2",
2045 |         "@radix-ui/react-primitive": "2.1.3",
2046 |         "@radix-ui/react-use-controllable-state": "1.2.2"
2047 |       },
2048 |       "peerDependencies": {
2049 |         "@types/react": "*",
2050 |         "@types/react-dom": "*",
2051 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
2052 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2053 |       },
2054 |       "peerDependenciesMeta": {
2055 |         "@types/react": {
2056 |           "optional": true
2057 |         },
2058 |         "@types/react-dom": {
2059 |           "optional": true
2060 |         }
2061 |       }
2062 |     },
2063 |     "node_modules/@radix-ui/react-toggle-group": {
2064 |       "version": "1.1.10",
2065 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-toggle-group/-/react-toggle-group-1.1.10.tgz",
2066 |       "integrity": "sha512-kiU694Km3WFLTC75DdqgM/3Jauf3rD9wxeS9XtyWFKsBUeZA337lC+6uUazT7I1DhanZ5gyD5Stf8uf2dbQxOQ==",
2067 |       "license": "MIT",
2068 |       "dependencies": {
2069 |         "@radix-ui/primitive": "1.1.2",
2070 |         "@radix-ui/react-context": "1.1.2",
2071 |         "@radix-ui/react-direction": "1.1.1",
2072 |         "@radix-ui/react-primitive": "2.1.3",
2073 |         "@radix-ui/react-roving-focus": "1.1.10",
2074 |         "@radix-ui/react-toggle": "1.1.9",
2075 |         "@radix-ui/react-use-controllable-state": "1.2.2"
2076 |       },
2077 |       "peerDependencies": {
2078 |         "@types/react": "*",
2079 |         "@types/react-dom": "*",
2080 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
2081 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2082 |       },
2083 |       "peerDependenciesMeta": {
2084 |         "@types/react": {
2085 |           "optional": true
2086 |         },
2087 |         "@types/react-dom": {
2088 |           "optional": true
2089 |         }
2090 |       }
2091 |     },
2092 |     "node_modules/@radix-ui/react-tooltip": {
2093 |       "version": "1.2.7",
2094 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-tooltip/-/react-tooltip-1.2.7.tgz",
2095 |       "integrity": "sha512-Ap+fNYwKTYJ9pzqW+Xe2HtMRbQ/EeWkj2qykZ6SuEV4iS/o1bZI5ssJbk4D2r8XuDuOBVz/tIx2JObtuqU+5Zw==",
2096 |       "license": "MIT",
2097 |       "dependencies": {
2098 |         "@radix-ui/primitive": "1.1.2",
2099 |         "@radix-ui/react-compose-refs": "1.1.2",
2100 |         "@radix-ui/react-context": "1.1.2",
2101 |         "@radix-ui/react-dismissable-layer": "1.1.10",
2102 |         "@radix-ui/react-id": "1.1.1",
2103 |         "@radix-ui/react-popper": "1.2.7",
2104 |         "@radix-ui/react-portal": "1.1.9",
2105 |         "@radix-ui/react-presence": "1.1.4",
2106 |         "@radix-ui/react-primitive": "2.1.3",
2107 |         "@radix-ui/react-slot": "1.2.3",
2108 |         "@radix-ui/react-use-controllable-state": "1.2.2",
2109 |         "@radix-ui/react-visually-hidden": "1.2.3"
2110 |       },
2111 |       "peerDependencies": {
2112 |         "@types/react": "*",
2113 |         "@types/react-dom": "*",
2114 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
2115 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2116 |       },
2117 |       "peerDependenciesMeta": {
2118 |         "@types/react": {
2119 |           "optional": true
2120 |         },
2121 |         "@types/react-dom": {
2122 |           "optional": true
2123 |         }
2124 |       }
2125 |     },
2126 |     "node_modules/@radix-ui/react-use-callback-ref": {
2127 |       "version": "1.1.1",
2128 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-callback-ref/-/react-use-callback-ref-1.1.1.tgz",
2129 |       "integrity": "sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==",
2130 |       "license": "MIT",
2131 |       "peerDependencies": {
2132 |         "@types/react": "*",
2133 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2134 |       },
2135 |       "peerDependenciesMeta": {
2136 |         "@types/react": {
2137 |           "optional": true
2138 |         }
2139 |       }
2140 |     },
2141 |     "node_modules/@radix-ui/react-use-controllable-state": {
2142 |       "version": "1.2.2",
2143 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz",
2144 |       "integrity": "sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==",
2145 |       "license": "MIT",
2146 |       "dependencies": {
2147 |         "@radix-ui/react-use-effect-event": "0.0.2",
2148 |         "@radix-ui/react-use-layout-effect": "1.1.1"
2149 |       },
2150 |       "peerDependencies": {
2151 |         "@types/react": "*",
2152 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2153 |       },
2154 |       "peerDependenciesMeta": {
2155 |         "@types/react": {
2156 |           "optional": true
2157 |         }
2158 |       }
2159 |     },
2160 |     "node_modules/@radix-ui/react-use-effect-event": {
2161 |       "version": "0.0.2",
2162 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz",
2163 |       "integrity": "sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==",
2164 |       "license": "MIT",
2165 |       "dependencies": {
2166 |         "@radix-ui/react-use-layout-effect": "1.1.1"
2167 |       },
2168 |       "peerDependencies": {
2169 |         "@types/react": "*",
2170 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2171 |       },
2172 |       "peerDependenciesMeta": {
2173 |         "@types/react": {
2174 |           "optional": true
2175 |         }
2176 |       }
2177 |     },
2178 |     "node_modules/@radix-ui/react-use-escape-keydown": {
2179 |       "version": "1.1.1",
2180 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-escape-keydown/-/react-use-escape-keydown-1.1.1.tgz",
2181 |       "integrity": "sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==",
2182 |       "license": "MIT",
2183 |       "dependencies": {
2184 |         "@radix-ui/react-use-callback-ref": "1.1.1"
2185 |       },
2186 |       "peerDependencies": {
2187 |         "@types/react": "*",
2188 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2189 |       },
2190 |       "peerDependenciesMeta": {
2191 |         "@types/react": {
2192 |           "optional": true
2193 |         }
2194 |       }
2195 |     },
2196 |     "node_modules/@radix-ui/react-use-is-hydrated": {
2197 |       "version": "0.1.0",
2198 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-is-hydrated/-/react-use-is-hydrated-0.1.0.tgz",
2199 |       "integrity": "sha512-U+UORVEq+cTnRIaostJv9AGdV3G6Y+zbVd+12e18jQ5A3c0xL03IhnHuiU4UV69wolOQp5GfR58NW/EgdQhwOA==",
2200 |       "license": "MIT",
2201 |       "dependencies": {
2202 |         "use-sync-external-store": "^1.5.0"
2203 |       },
2204 |       "peerDependencies": {
2205 |         "@types/react": "*",
2206 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2207 |       },
2208 |       "peerDependenciesMeta": {
2209 |         "@types/react": {
2210 |           "optional": true
2211 |         }
2212 |       }
2213 |     },
2214 |     "node_modules/@radix-ui/react-use-layout-effect": {
2215 |       "version": "1.1.1",
2216 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
2217 |       "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
2218 |       "license": "MIT",
2219 |       "peerDependencies": {
2220 |         "@types/react": "*",
2221 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2222 |       },
2223 |       "peerDependenciesMeta": {
2224 |         "@types/react": {
2225 |           "optional": true
2226 |         }
2227 |       }
2228 |     },
2229 |     "node_modules/@radix-ui/react-use-previous": {
2230 |       "version": "1.1.1",
2231 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-previous/-/react-use-previous-1.1.1.tgz",
2232 |       "integrity": "sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==",
2233 |       "license": "MIT",
2234 |       "peerDependencies": {
2235 |         "@types/react": "*",
2236 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2237 |       },
2238 |       "peerDependenciesMeta": {
2239 |         "@types/react": {
2240 |           "optional": true
2241 |         }
2242 |       }
2243 |     },
2244 |     "node_modules/@radix-ui/react-use-rect": {
2245 |       "version": "1.1.1",
2246 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-rect/-/react-use-rect-1.1.1.tgz",
2247 |       "integrity": "sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==",
2248 |       "license": "MIT",
2249 |       "dependencies": {
2250 |         "@radix-ui/rect": "1.1.1"
2251 |       },
2252 |       "peerDependencies": {
2253 |         "@types/react": "*",
2254 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2255 |       },
2256 |       "peerDependenciesMeta": {
2257 |         "@types/react": {
2258 |           "optional": true
2259 |         }
2260 |       }
2261 |     },
2262 |     "node_modules/@radix-ui/react-use-size": {
2263 |       "version": "1.1.1",
2264 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-size/-/react-use-size-1.1.1.tgz",
2265 |       "integrity": "sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==",
2266 |       "license": "MIT",
2267 |       "dependencies": {
2268 |         "@radix-ui/react-use-layout-effect": "1.1.1"
2269 |       },
2270 |       "peerDependencies": {
2271 |         "@types/react": "*",
2272 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2273 |       },
2274 |       "peerDependenciesMeta": {
2275 |         "@types/react": {
2276 |           "optional": true
2277 |         }
2278 |       }
2279 |     },
2280 |     "node_modules/@radix-ui/react-visually-hidden": {
2281 |       "version": "1.2.3",
2282 |       "resolved": "https://registry.npmjs.org/@radix-ui/react-visually-hidden/-/react-visually-hidden-1.2.3.tgz",
2283 |       "integrity": "sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==",
2284 |       "license": "MIT",
2285 |       "dependencies": {
2286 |         "@radix-ui/react-primitive": "2.1.3"
2287 |       },
2288 |       "peerDependencies": {
2289 |         "@types/react": "*",
2290 |         "@types/react-dom": "*",
2291 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
2292 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
2293 |       },
2294 |       "peerDependenciesMeta": {
2295 |         "@types/react": {
2296 |           "optional": true
2297 |         },
2298 |         "@types/react-dom": {
2299 |           "optional": true
2300 |         }
2301 |       }
2302 |     },
2303 |     "node_modules/@radix-ui/rect": {
2304 |       "version": "1.1.1",
2305 |       "resolved": "https://registry.npmjs.org/@radix-ui/rect/-/rect-1.1.1.tgz",
2306 |       "integrity": "sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==",
2307 |       "license": "MIT"
2308 |     },
2309 |     "node_modules/@remix-run/router": {
2310 |       "version": "1.23.0",
2311 |       "resolved": "https://registry.npmjs.org/@remix-run/router/-/router-1.23.0.tgz",
2312 |       "integrity": "sha512-O3rHJzAQKamUz1fvE0Qaw0xSFqsA/yafi2iqeE0pvdFtCO1viYx8QL6f3Ln/aCCTLxs68SLf0KPM9eSeM8yBnA==",
2313 |       "license": "MIT",
2314 |       "engines": {
2315 |         "node": ">=14.0.0"
2316 |       }
2317 |     },
2318 |     "node_modules/@rolldown/pluginutils": {
2319 |       "version": "1.0.0-beta.27",
2320 |       "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.27.tgz",
2321 |       "integrity": "sha512-+d0F4MKMCbeVUJwG96uQ4SgAznZNSq93I3V+9NHA4OpvqG8mRCpGdKmK8l/dl02h2CCDHwW2FqilnTyDcAnqjA==",
2322 |       "dev": true,
2323 |       "license": "MIT"
2324 |     },
2325 |     "node_modules/@rollup/rollup-android-arm-eabi": {
2326 |       "version": "4.24.0",
2327 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.24.0.tgz",
2328 |       "integrity": "sha512-Q6HJd7Y6xdB48x8ZNVDOqsbh2uByBhgK8PiQgPhwkIw/HC/YX5Ghq2mQY5sRMZWHb3VsFkWooUVOZHKr7DmDIA==",
2329 |       "cpu": [
2330 |         "arm"
2331 |       ],
2332 |       "dev": true,
2333 |       "license": "MIT",
2334 |       "optional": true,
2335 |       "os": [
2336 |         "android"
2337 |       ]
2338 |     },
2339 |     "node_modules/@rollup/rollup-android-arm64": {
2340 |       "version": "4.24.0",
2341 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.24.0.tgz",
2342 |       "integrity": "sha512-ijLnS1qFId8xhKjT81uBHuuJp2lU4x2yxa4ctFPtG+MqEE6+C5f/+X/bStmxapgmwLwiL3ih122xv8kVARNAZA==",
2343 |       "cpu": [
2344 |         "arm64"
2345 |       ],
2346 |       "dev": true,
2347 |       "license": "MIT",
2348 |       "optional": true,
2349 |       "os": [
2350 |         "android"
2351 |       ]
2352 |     },
2353 |     "node_modules/@rollup/rollup-darwin-arm64": {
2354 |       "version": "4.24.0",
2355 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.24.0.tgz",
2356 |       "integrity": "sha512-bIv+X9xeSs1XCk6DVvkO+S/z8/2AMt/2lMqdQbMrmVpgFvXlmde9mLcbQpztXm1tajC3raFDqegsH18HQPMYtA==",
2357 |       "cpu": [
2358 |         "arm64"
2359 |       ],
2360 |       "dev": true,
2361 |       "license": "MIT",
2362 |       "optional": true,
2363 |       "os": [
2364 |         "darwin"
2365 |       ]
2366 |     },
2367 |     "node_modules/@rollup/rollup-darwin-x64": {
2368 |       "version": "4.24.0",
2369 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.24.0.tgz",
2370 |       "integrity": "sha512-X6/nOwoFN7RT2svEQWUsW/5C/fYMBe4fnLK9DQk4SX4mgVBiTA9h64kjUYPvGQ0F/9xwJ5U5UfTbl6BEjaQdBQ==",
2371 |       "cpu": [
2372 |         "x64"
2373 |       ],
2374 |       "dev": true,
2375 |       "license": "MIT",
2376 |       "optional": true,
2377 |       "os": [
2378 |         "darwin"
2379 |       ]
2380 |     },
2381 |     "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
2382 |       "version": "4.24.0",
2383 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.24.0.tgz",
2384 |       "integrity": "sha512-0KXvIJQMOImLCVCz9uvvdPgfyWo93aHHp8ui3FrtOP57svqrF/roSSR5pjqL2hcMp0ljeGlU4q9o/rQaAQ3AYA==",
2385 |       "cpu": [
2386 |         "arm"
2387 |       ],
2388 |       "dev": true,
2389 |       "license": "MIT",
2390 |       "optional": true,
2391 |       "os": [
2392 |         "linux"
2393 |       ]
2394 |     },
2395 |     "node_modules/@rollup/rollup-linux-arm-musleabihf": {
2396 |       "version": "4.24.0",
2397 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.24.0.tgz",
2398 |       "integrity": "sha512-it2BW6kKFVh8xk/BnHfakEeoLPv8STIISekpoF+nBgWM4d55CZKc7T4Dx1pEbTnYm/xEKMgy1MNtYuoA8RFIWw==",
2399 |       "cpu": [
2400 |         "arm"
2401 |       ],
2402 |       "dev": true,
2403 |       "license": "MIT",
2404 |       "optional": true,
2405 |       "os": [
2406 |         "linux"
2407 |       ]
2408 |     },
2409 |     "node_modules/@rollup/rollup-linux-arm64-gnu": {
2410 |       "version": "4.24.0",
2411 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.24.0.tgz",
2412 |       "integrity": "sha512-i0xTLXjqap2eRfulFVlSnM5dEbTVque/3Pi4g2y7cxrs7+a9De42z4XxKLYJ7+OhE3IgxvfQM7vQc43bwTgPwA==",
2413 |       "cpu": [
2414 |         "arm64"
2415 |       ],
2416 |       "dev": true,
2417 |       "license": "MIT",
2418 |       "optional": true,
2419 |       "os": [
2420 |         "linux"
2421 |       ]
2422 |     },
2423 |     "node_modules/@rollup/rollup-linux-arm64-musl": {
2424 |       "version": "4.24.0",
2425 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.24.0.tgz",
2426 |       "integrity": "sha512-9E6MKUJhDuDh604Qco5yP/3qn3y7SLXYuiC0Rpr89aMScS2UAmK1wHP2b7KAa1nSjWJc/f/Lc0Wl1L47qjiyQw==",
2427 |       "cpu": [
2428 |         "arm64"
2429 |       ],
2430 |       "dev": true,
2431 |       "license": "MIT",
2432 |       "optional": true,
2433 |       "os": [
2434 |         "linux"
2435 |       ]
2436 |     },
2437 |     "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
2438 |       "version": "4.24.0",
2439 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.24.0.tgz",
2440 |       "integrity": "sha512-2XFFPJ2XMEiF5Zi2EBf4h73oR1V/lycirxZxHZNc93SqDN/IWhYYSYj8I9381ikUFXZrz2v7r2tOVk2NBwxrWw==",
2441 |       "cpu": [
2442 |         "ppc64"
2443 |       ],
2444 |       "dev": true,
2445 |       "license": "MIT",
2446 |       "optional": true,
2447 |       "os": [
2448 |         "linux"
2449 |       ]
2450 |     },
2451 |     "node_modules/@rollup/rollup-linux-riscv64-gnu": {
2452 |       "version": "4.24.0",
2453 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.24.0.tgz",
2454 |       "integrity": "sha512-M3Dg4hlwuntUCdzU7KjYqbbd+BLq3JMAOhCKdBE3TcMGMZbKkDdJ5ivNdehOssMCIokNHFOsv7DO4rlEOfyKpg==",
2455 |       "cpu": [
2456 |         "riscv64"
2457 |       ],
2458 |       "dev": true,
2459 |       "license": "MIT",
2460 |       "optional": true,
2461 |       "os": [
2462 |         "linux"
2463 |       ]
2464 |     },
2465 |     "node_modules/@rollup/rollup-linux-s390x-gnu": {
2466 |       "version": "4.24.0",
2467 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.24.0.tgz",
2468 |       "integrity": "sha512-mjBaoo4ocxJppTorZVKWFpy1bfFj9FeCMJqzlMQGjpNPY9JwQi7OuS1axzNIk0nMX6jSgy6ZURDZ2w0QW6D56g==",
2469 |       "cpu": [
2470 |         "s390x"
2471 |       ],
2472 |       "dev": true,
2473 |       "license": "MIT",
2474 |       "optional": true,
2475 |       "os": [
2476 |         "linux"
2477 |       ]
2478 |     },
2479 |     "node_modules/@rollup/rollup-linux-x64-gnu": {
2480 |       "version": "4.24.0",
2481 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.24.0.tgz",
2482 |       "integrity": "sha512-ZXFk7M72R0YYFN5q13niV0B7G8/5dcQ9JDp8keJSfr3GoZeXEoMHP/HlvqROA3OMbMdfr19IjCeNAnPUG93b6A==",
2483 |       "cpu": [
2484 |         "x64"
2485 |       ],
2486 |       "dev": true,
2487 |       "license": "MIT",
2488 |       "optional": true,
2489 |       "os": [
2490 |         "linux"
2491 |       ]
2492 |     },
2493 |     "node_modules/@rollup/rollup-linux-x64-musl": {
2494 |       "version": "4.24.0",
2495 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.24.0.tgz",
2496 |       "integrity": "sha512-w1i+L7kAXZNdYl+vFvzSZy8Y1arS7vMgIy8wusXJzRrPyof5LAb02KGr1PD2EkRcl73kHulIID0M501lN+vobQ==",
2497 |       "cpu": [
2498 |         "x64"
2499 |       ],
2500 |       "dev": true,
2501 |       "license": "MIT",
2502 |       "optional": true,
2503 |       "os": [
2504 |         "linux"
2505 |       ]
2506 |     },
2507 |     "node_modules/@rollup/rollup-win32-arm64-msvc": {
2508 |       "version": "4.24.0",
2509 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.24.0.tgz",
2510 |       "integrity": "sha512-VXBrnPWgBpVDCVY6XF3LEW0pOU51KbaHhccHw6AS6vBWIC60eqsH19DAeeObl+g8nKAz04QFdl/Cefta0xQtUQ==",
2511 |       "cpu": [
2512 |         "arm64"
2513 |       ],
2514 |       "dev": true,
2515 |       "license": "MIT",
2516 |       "optional": true,
2517 |       "os": [
2518 |         "win32"
2519 |       ]
2520 |     },
2521 |     "node_modules/@rollup/rollup-win32-ia32-msvc": {
2522 |       "version": "4.24.0",
2523 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.24.0.tgz",
2524 |       "integrity": "sha512-xrNcGDU0OxVcPTH/8n/ShH4UevZxKIO6HJFK0e15XItZP2UcaiLFd5kiX7hJnqCbSztUF8Qot+JWBC/QXRPYWQ==",
2525 |       "cpu": [
2526 |         "ia32"
2527 |       ],
2528 |       "dev": true,
2529 |       "license": "MIT",
2530 |       "optional": true,
2531 |       "os": [
2532 |         "win32"
2533 |       ]
2534 |     },
2535 |     "node_modules/@rollup/rollup-win32-x64-msvc": {
2536 |       "version": "4.24.0",
2537 |       "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.24.0.tgz",
2538 |       "integrity": "sha512-fbMkAF7fufku0N2dE5TBXcNlg0pt0cJue4xBRE2Qc5Vqikxr4VCgKj/ht6SMdFcOacVA9rqF70APJ8RN/4vMJw==",
2539 |       "cpu": [
2540 |         "x64"
2541 |       ],
2542 |       "dev": true,
2543 |       "license": "MIT",
2544 |       "optional": true,
2545 |       "os": [
2546 |         "win32"
2547 |       ]
2548 |     },
2549 |     "node_modules/@swc/core": {
2550 |       "version": "1.13.2",
2551 |       "resolved": "https://registry.npmjs.org/@swc/core/-/core-1.13.2.tgz",
2552 |       "integrity": "sha512-YWqn+0IKXDhqVLKoac4v2tV6hJqB/wOh8/Br8zjqeqBkKa77Qb0Kw2i7LOFzjFNZbZaPH6AlMGlBwNrxaauaAg==",
2553 |       "dev": true,
2554 |       "hasInstallScript": true,
2555 |       "license": "Apache-2.0",
2556 |       "dependencies": {
2557 |         "@swc/counter": "^0.1.3",
2558 |         "@swc/types": "^0.1.23"
2559 |       },
2560 |       "engines": {
2561 |         "node": ">=10"
2562 |       },
2563 |       "funding": {
2564 |         "type": "opencollective",
2565 |         "url": "https://opencollective.com/swc"
2566 |       },
2567 |       "optionalDependencies": {
2568 |         "@swc/core-darwin-arm64": "1.13.2",
2569 |         "@swc/core-darwin-x64": "1.13.2",
2570 |         "@swc/core-linux-arm-gnueabihf": "1.13.2",
2571 |         "@swc/core-linux-arm64-gnu": "1.13.2",
2572 |         "@swc/core-linux-arm64-musl": "1.13.2",
2573 |         "@swc/core-linux-x64-gnu": "1.13.2",
2574 |         "@swc/core-linux-x64-musl": "1.13.2",
2575 |         "@swc/core-win32-arm64-msvc": "1.13.2",
2576 |         "@swc/core-win32-ia32-msvc": "1.13.2",
2577 |         "@swc/core-win32-x64-msvc": "1.13.2"
2578 |       },
2579 |       "peerDependencies": {
2580 |         "@swc/helpers": ">=0.5.17"
2581 |       },
2582 |       "peerDependenciesMeta": {
2583 |         "@swc/helpers": {
2584 |           "optional": true
2585 |         }
2586 |       }
2587 |     },
2588 |     "node_modules/@swc/core-darwin-arm64": {
2589 |       "version": "1.13.2",
2590 |       "resolved": "https://registry.npmjs.org/@swc/core-darwin-arm64/-/core-darwin-arm64-1.13.2.tgz",
2591 |       "integrity": "sha512-44p7ivuLSGFJ15Vly4ivLJjg3ARo4879LtEBAabcHhSZygpmkP8eyjyWxrH3OxkY1eRZSIJe8yRZPFw4kPXFPw==",
2592 |       "cpu": [
2593 |         "arm64"
2594 |       ],
2595 |       "dev": true,
2596 |       "license": "Apache-2.0 AND MIT",
2597 |       "optional": true,
2598 |       "os": [
2599 |         "darwin"
2600 |       ],
2601 |       "engines": {
2602 |         "node": ">=10"
2603 |       }
2604 |     },
2605 |     "node_modules/@swc/core-darwin-x64": {
2606 |       "version": "1.13.2",
2607 |       "resolved": "https://registry.npmjs.org/@swc/core-darwin-x64/-/core-darwin-x64-1.13.2.tgz",
2608 |       "integrity": "sha512-Lb9EZi7X2XDAVmuUlBm2UvVAgSCbD3qKqDCxSI4jEOddzVOpNCnyZ/xEampdngUIyDDhhJLYU9duC+Mcsv5Y+A==",
2609 |       "cpu": [
2610 |         "x64"
2611 |       ],
2612 |       "dev": true,
2613 |       "license": "Apache-2.0 AND MIT",
2614 |       "optional": true,
2615 |       "os": [
2616 |         "darwin"
2617 |       ],
2618 |       "engines": {
2619 |         "node": ">=10"
2620 |       }
2621 |     },
2622 |     "node_modules/@swc/core-linux-arm-gnueabihf": {
2623 |       "version": "1.13.2",
2624 |       "resolved": "https://registry.npmjs.org/@swc/core-linux-arm-gnueabihf/-/core-linux-arm-gnueabihf-1.13.2.tgz",
2625 |       "integrity": "sha512-9TDe/92ee1x57x+0OqL1huG4BeljVx0nWW4QOOxp8CCK67Rpc/HHl2wciJ0Kl9Dxf2NvpNtkPvqj9+BUmM9WVA==",
2626 |       "cpu": [
2627 |         "arm"
2628 |       ],
2629 |       "dev": true,
2630 |       "license": "Apache-2.0",
2631 |       "optional": true,
2632 |       "os": [
2633 |         "linux"
2634 |       ],
2635 |       "engines": {
2636 |         "node": ">=10"
2637 |       }
2638 |     },
2639 |     "node_modules/@swc/core-linux-arm64-gnu": {
2640 |       "version": "1.13.2",
2641 |       "resolved": "https://registry.npmjs.org/@swc/core-linux-arm64-gnu/-/core-linux-arm64-gnu-1.13.2.tgz",
2642 |       "integrity": "sha512-KJUSl56DBk7AWMAIEcU83zl5mg3vlQYhLELhjwRFkGFMvghQvdqQ3zFOYa4TexKA7noBZa3C8fb24rI5sw9Exg==",
2643 |       "cpu": [
2644 |         "arm64"
2645 |       ],
2646 |       "dev": true,
2647 |       "license": "Apache-2.0 AND MIT",
2648 |       "optional": true,
2649 |       "os": [
2650 |         "linux"
2651 |       ],
2652 |       "engines": {
2653 |         "node": ">=10"
2654 |       }
2655 |     },
2656 |     "node_modules/@swc/core-linux-arm64-musl": {
2657 |       "version": "1.13.2",
2658 |       "resolved": "https://registry.npmjs.org/@swc/core-linux-arm64-musl/-/core-linux-arm64-musl-1.13.2.tgz",
2659 |       "integrity": "sha512-teU27iG1oyWpNh9CzcGQ48ClDRt/RCem7mYO7ehd2FY102UeTws2+OzLESS1TS1tEZipq/5xwx3FzbVgiolCiQ==",
2660 |       "cpu": [
2661 |         "arm64"
2662 |       ],
2663 |       "dev": true,
2664 |       "license": "Apache-2.0 AND MIT",
2665 |       "optional": true,
2666 |       "os": [
2667 |         "linux"
2668 |       ],
2669 |       "engines": {
2670 |         "node": ">=10"
2671 |       }
2672 |     },
2673 |     "node_modules/@swc/core-linux-x64-gnu": {
2674 |       "version": "1.13.2",
2675 |       "resolved": "https://registry.npmjs.org/@swc/core-linux-x64-gnu/-/core-linux-x64-gnu-1.13.2.tgz",
2676 |       "integrity": "sha512-dRPsyPyqpLD0HMRCRpYALIh4kdOir8pPg4AhNQZLehKowigRd30RcLXGNVZcc31Ua8CiPI4QSgjOIxK+EQe4LQ==",
2677 |       "cpu": [
2678 |         "x64"
2679 |       ],
2680 |       "dev": true,
2681 |       "license": "Apache-2.0 AND MIT",
2682 |       "optional": true,
2683 |       "os": [
2684 |         "linux"
2685 |       ],
2686 |       "engines": {
2687 |         "node": ">=10"
2688 |       }
2689 |     },
2690 |     "node_modules/@swc/core-linux-x64-musl": {
2691 |       "version": "1.13.2",
2692 |       "resolved": "https://registry.npmjs.org/@swc/core-linux-x64-musl/-/core-linux-x64-musl-1.13.2.tgz",
2693 |       "integrity": "sha512-CCxETW+KkYEQDqz1SYC15YIWYheqFC+PJVOW76Maa/8yu8Biw+HTAcblKf2isrlUtK8RvrQN94v3UXkC2NzCEw==",
2694 |       "cpu": [
2695 |         "x64"
2696 |       ],
2697 |       "dev": true,
2698 |       "license": "Apache-2.0 AND MIT",
2699 |       "optional": true,
2700 |       "os": [
2701 |         "linux"
2702 |       ],
2703 |       "engines": {
2704 |         "node": ">=10"
2705 |       }
2706 |     },
2707 |     "node_modules/@swc/core-win32-arm64-msvc": {
2708 |       "version": "1.13.2",
2709 |       "resolved": "https://registry.npmjs.org/@swc/core-win32-arm64-msvc/-/core-win32-arm64-msvc-1.13.2.tgz",
2710 |       "integrity": "sha512-Wv/QTA6PjyRLlmKcN6AmSI4jwSMRl0VTLGs57PHTqYRwwfwd7y4s2fIPJVBNbAlXd795dOEP6d/bGSQSyhOX3A==",
2711 |       "cpu": [
2712 |         "arm64"
2713 |       ],
2714 |       "dev": true,
2715 |       "license": "Apache-2.0 AND MIT",
2716 |       "optional": true,
2717 |       "os": [
2718 |         "win32"
2719 |       ],
2720 |       "engines": {
2721 |         "node": ">=10"
2722 |       }
2723 |     },
2724 |     "node_modules/@swc/core-win32-ia32-msvc": {
2725 |       "version": "1.13.2",
2726 |       "resolved": "https://registry.npmjs.org/@swc/core-win32-ia32-msvc/-/core-win32-ia32-msvc-1.13.2.tgz",
2727 |       "integrity": "sha512-PuCdtNynEkUNbUXX/wsyUC+t4mamIU5y00lT5vJcAvco3/r16Iaxl5UCzhXYaWZSNVZMzPp9qN8NlSL8M5pPxw==",
2728 |       "cpu": [
2729 |         "ia32"
2730 |       ],
2731 |       "dev": true,
2732 |       "license": "Apache-2.0 AND MIT",
2733 |       "optional": true,
2734 |       "os": [
2735 |         "win32"
2736 |       ],
2737 |       "engines": {
2738 |         "node": ">=10"
2739 |       }
2740 |     },
2741 |     "node_modules/@swc/core-win32-x64-msvc": {
2742 |       "version": "1.13.2",
2743 |       "resolved": "https://registry.npmjs.org/@swc/core-win32-x64-msvc/-/core-win32-x64-msvc-1.13.2.tgz",
2744 |       "integrity": "sha512-qlmMkFZJus8cYuBURx1a3YAG2G7IW44i+FEYV5/32ylKkzGNAr9tDJSA53XNnNXkAB5EXSPsOz7bn5C3JlEtdQ==",
2745 |       "cpu": [
2746 |         "x64"
2747 |       ],
2748 |       "dev": true,
2749 |       "license": "Apache-2.0 AND MIT",
2750 |       "optional": true,
2751 |       "os": [
2752 |         "win32"
2753 |       ],
2754 |       "engines": {
2755 |         "node": ">=10"
2756 |       }
2757 |     },
2758 |     "node_modules/@swc/counter": {
2759 |       "version": "0.1.3",
2760 |       "resolved": "https://registry.npmjs.org/@swc/counter/-/counter-0.1.3.tgz",
2761 |       "integrity": "sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==",
2762 |       "dev": true,
2763 |       "license": "Apache-2.0"
2764 |     },
2765 |     "node_modules/@swc/types": {
2766 |       "version": "0.1.23",
2767 |       "resolved": "https://registry.npmjs.org/@swc/types/-/types-0.1.23.tgz",
2768 |       "integrity": "sha512-u1iIVZV9Q0jxY+yM2vw/hZGDNudsN85bBpTqzAQ9rzkxW9D+e3aEM4Han+ow518gSewkXgjmEK0BD79ZcNVgPw==",
2769 |       "dev": true,
2770 |       "license": "Apache-2.0",
2771 |       "dependencies": {
2772 |         "@swc/counter": "^0.1.3"
2773 |       }
2774 |     },
2775 |     "node_modules/@tailwindcss/typography": {
2776 |       "version": "0.5.16",
2777 |       "resolved": "https://registry.npmjs.org/@tailwindcss/typography/-/typography-0.5.16.tgz",
2778 |       "integrity": "sha512-0wDLwCVF5V3x3b1SGXPCDcdsbDHMBe+lkFzBRaHeLvNi+nrrnZ1lA18u+OTWO8iSWU2GxUOCvlXtDuqftc1oiA==",
2779 |       "dev": true,
2780 |       "license": "MIT",
2781 |       "dependencies": {
2782 |         "lodash.castarray": "^4.4.0",
2783 |         "lodash.isplainobject": "^4.0.6",
2784 |         "lodash.merge": "^4.6.2",
2785 |         "postcss-selector-parser": "6.0.10"
2786 |       },
2787 |       "peerDependencies": {
2788 |         "tailwindcss": ">=3.0.0 || insiders || >=4.0.0-alpha.20 || >=4.0.0-beta.1"
2789 |       }
2790 |     },
2791 |     "node_modules/@tailwindcss/typography/node_modules/postcss-selector-parser": {
2792 |       "version": "6.0.10",
2793 |       "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
2794 |       "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
2795 |       "dev": true,
2796 |       "dependencies": {
2797 |         "cssesc": "^3.0.0",
2798 |         "util-deprecate": "^1.0.2"
2799 |       },
2800 |       "engines": {
2801 |         "node": ">=4"
2802 |       }
2803 |     },
2804 |     "node_modules/@tanstack/query-core": {
2805 |       "version": "5.83.0",
2806 |       "resolved": "https://registry.npmjs.org/@tanstack/query-core/-/query-core-5.83.0.tgz",
2807 |       "integrity": "sha512-0M8dA+amXUkyz5cVUm/B+zSk3xkQAcuXuz5/Q/LveT4ots2rBpPTZOzd7yJa2Utsf8D2Upl5KyjhHRY+9lB/XA==",
2808 |       "license": "MIT",
2809 |       "funding": {
2810 |         "type": "github",
2811 |         "url": "https://github.com/sponsors/tannerlinsley"
2812 |       }
2813 |     },
2814 |     "node_modules/@tanstack/react-query": {
2815 |       "version": "5.83.0",
2816 |       "resolved": "https://registry.npmjs.org/@tanstack/react-query/-/react-query-5.83.0.tgz",
2817 |       "integrity": "sha512-/XGYhZ3foc5H0VM2jLSD/NyBRIOK4q9kfeml4+0x2DlL6xVuAcVEW+hTlTapAmejObg0i3eNqhkr2dT+eciwoQ==",
2818 |       "license": "MIT",
2819 |       "dependencies": {
2820 |         "@tanstack/query-core": "5.83.0"
2821 |       },
2822 |       "funding": {
2823 |         "type": "github",
2824 |         "url": "https://github.com/sponsors/tannerlinsley"
2825 |       },
2826 |       "peerDependencies": {
2827 |         "react": "^18 || ^19"
2828 |       }
2829 |     },
2830 |     "node_modules/@types/d3-array": {
2831 |       "version": "3.2.1",
2832 |       "resolved": "https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.1.tgz",
2833 |       "integrity": "sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==",
2834 |       "license": "MIT"
2835 |     },
2836 |     "node_modules/@types/d3-color": {
2837 |       "version": "3.1.3",
2838 |       "resolved": "https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz",
2839 |       "integrity": "sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==",
2840 |       "license": "MIT"
2841 |     },
2842 |     "node_modules/@types/d3-ease": {
2843 |       "version": "3.0.2",
2844 |       "resolved": "https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz",
2845 |       "integrity": "sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==",
2846 |       "license": "MIT"
2847 |     },
2848 |     "node_modules/@types/d3-interpolate": {
2849 |       "version": "3.0.4",
2850 |       "resolved": "https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz",
2851 |       "integrity": "sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==",
2852 |       "license": "MIT",
2853 |       "dependencies": {
2854 |         "@types/d3-color": "*"
2855 |       }
2856 |     },
2857 |     "node_modules/@types/d3-path": {
2858 |       "version": "3.1.0",
2859 |       "resolved": "https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.0.tgz",
2860 |       "integrity": "sha512-P2dlU/q51fkOc/Gfl3Ul9kicV7l+ra934qBFXCFhrZMOL6du1TM0pm1ThYvENukyOn5h9v+yMJ9Fn5JK4QozrQ==",
2861 |       "license": "MIT"
2862 |     },
2863 |     "node_modules/@types/d3-scale": {
2864 |       "version": "4.0.8",
2865 |       "resolved": "https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.8.tgz",
2866 |       "integrity": "sha512-gkK1VVTr5iNiYJ7vWDI+yUFFlszhNMtVeneJ6lUTKPjprsvLLI9/tgEGiXJOnlINJA8FyA88gfnQsHbybVZrYQ==",
2867 |       "license": "MIT",
2868 |       "dependencies": {
2869 |         "@types/d3-time": "*"
2870 |       }
2871 |     },
2872 |     "node_modules/@types/d3-shape": {
2873 |       "version": "3.1.6",
2874 |       "resolved": "https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.6.tgz",
2875 |       "integrity": "sha512-5KKk5aKGu2I+O6SONMYSNflgiP0WfZIQvVUMan50wHsLG1G94JlxEVnCpQARfTtzytuY0p/9PXXZb3I7giofIA==",
2876 |       "license": "MIT",
2877 |       "dependencies": {
2878 |         "@types/d3-path": "*"
2879 |       }
2880 |     },
2881 |     "node_modules/@types/d3-time": {
2882 |       "version": "3.0.3",
2883 |       "resolved": "https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.3.tgz",
2884 |       "integrity": "sha512-2p6olUZ4w3s+07q3Tm2dbiMZy5pCDfYwtLXXHUnVzXgQlZ/OyPtUz6OL382BkOuGlLXqfT+wqv8Fw2v8/0geBw==",
2885 |       "license": "MIT"
2886 |     },
2887 |     "node_modules/@types/d3-timer": {
2888 |       "version": "3.0.2",
2889 |       "resolved": "https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz",
2890 |       "integrity": "sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==",
2891 |       "license": "MIT"
2892 |     },
2893 |     "node_modules/@types/estree": {
2894 |       "version": "1.0.6",
2895 |       "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz",
2896 |       "integrity": "sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==",
2897 |       "dev": true,
2898 |       "license": "MIT"
2899 |     },
2900 |     "node_modules/@types/json-schema": {
2901 |       "version": "7.0.15",
2902 |       "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
2903 |       "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
2904 |       "dev": true,
2905 |       "license": "MIT"
2906 |     },
2907 |     "node_modules/@types/node": {
2908 |       "version": "22.16.5",
2909 |       "resolved": "https://registry.npmjs.org/@types/node/-/node-22.16.5.tgz",
2910 |       "integrity": "sha512-bJFoMATwIGaxxx8VJPeM8TonI8t579oRvgAuT8zFugJsJZgzqv0Fu8Mhp68iecjzG7cnN3mO2dJQ5uUM2EFrgQ==",
2911 |       "dev": true,
2912 |       "license": "MIT",
2913 |       "dependencies": {
2914 |         "undici-types": "~6.21.0"
2915 |       }
2916 |     },
2917 |     "node_modules/@types/prop-types": {
2918 |       "version": "15.7.13",
2919 |       "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.13.tgz",
2920 |       "integrity": "sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==",
2921 |       "devOptional": true,
2922 |       "license": "MIT"
2923 |     },
2924 |     "node_modules/@types/react": {
2925 |       "version": "18.3.23",
2926 |       "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.23.tgz",
2927 |       "integrity": "sha512-/LDXMQh55EzZQ0uVAZmKKhfENivEvWz6E+EYzh+/MCjMhNsotd+ZHhBGIjFDTi6+fz0OhQQQLbTgdQIxxCsC0w==",
2928 |       "devOptional": true,
2929 |       "license": "MIT",
2930 |       "dependencies": {
2931 |         "@types/prop-types": "*",
2932 |         "csstype": "^3.0.2"
2933 |       }
2934 |     },
2935 |     "node_modules/@types/react-dom": {
2936 |       "version": "18.3.7",
2937 |       "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.7.tgz",
2938 |       "integrity": "sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==",
2939 |       "devOptional": true,
2940 |       "license": "MIT",
2941 |       "peerDependencies": {
2942 |         "@types/react": "^18.0.0"
2943 |       }
2944 |     },
2945 |     "node_modules/@typescript-eslint/eslint-plugin": {
2946 |       "version": "8.38.0",
2947 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.38.0.tgz",
2948 |       "integrity": "sha512-CPoznzpuAnIOl4nhj4tRr4gIPj5AfKgkiJmGQDaq+fQnRJTYlcBjbX3wbciGmpoPf8DREufuPRe1tNMZnGdanA==",
2949 |       "dev": true,
2950 |       "license": "MIT",
2951 |       "dependencies": {
2952 |         "@eslint-community/regexpp": "^4.10.0",
2953 |         "@typescript-eslint/scope-manager": "8.38.0",
2954 |         "@typescript-eslint/type-utils": "8.38.0",
2955 |         "@typescript-eslint/utils": "8.38.0",
2956 |         "@typescript-eslint/visitor-keys": "8.38.0",
2957 |         "graphemer": "^1.4.0",
2958 |         "ignore": "^7.0.0",
2959 |         "natural-compare": "^1.4.0",
2960 |         "ts-api-utils": "^2.1.0"
2961 |       },
2962 |       "engines": {
2963 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2964 |       },
2965 |       "funding": {
2966 |         "type": "opencollective",
2967 |         "url": "https://opencollective.com/typescript-eslint"
2968 |       },
2969 |       "peerDependencies": {
2970 |         "@typescript-eslint/parser": "^8.38.0",
2971 |         "eslint": "^8.57.0 || ^9.0.0",
2972 |         "typescript": ">=4.8.4 <5.9.0"
2973 |       }
2974 |     },
2975 |     "node_modules/@typescript-eslint/eslint-plugin/node_modules/ignore": {
2976 |       "version": "7.0.5",
2977 |       "resolved": "https://registry.npmjs.org/ignore/-/ignore-7.0.5.tgz",
2978 |       "integrity": "sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==",
2979 |       "dev": true,
2980 |       "license": "MIT",
2981 |       "engines": {
2982 |         "node": ">= 4"
2983 |       }
2984 |     },
2985 |     "node_modules/@typescript-eslint/parser": {
2986 |       "version": "8.38.0",
2987 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.38.0.tgz",
2988 |       "integrity": "sha512-Zhy8HCvBUEfBECzIl1PKqF4p11+d0aUJS1GeUiuqK9WmOug8YCmC4h4bjyBvMyAMI9sbRczmrYL5lKg/YMbrcQ==",
2989 |       "dev": true,
2990 |       "license": "MIT",
2991 |       "dependencies": {
2992 |         "@typescript-eslint/scope-manager": "8.38.0",
2993 |         "@typescript-eslint/types": "8.38.0",
2994 |         "@typescript-eslint/typescript-estree": "8.38.0",
2995 |         "@typescript-eslint/visitor-keys": "8.38.0",
2996 |         "debug": "^4.3.4"
2997 |       },
2998 |       "engines": {
2999 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3000 |       },
3001 |       "funding": {
3002 |         "type": "opencollective",
3003 |         "url": "https://opencollective.com/typescript-eslint"
3004 |       },
3005 |       "peerDependencies": {
3006 |         "eslint": "^8.57.0 || ^9.0.0",
3007 |         "typescript": ">=4.8.4 <5.9.0"
3008 |       }
3009 |     },
3010 |     "node_modules/@typescript-eslint/project-service": {
3011 |       "version": "8.38.0",
3012 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/project-service/-/project-service-8.38.0.tgz",
3013 |       "integrity": "sha512-dbK7Jvqcb8c9QfH01YB6pORpqX1mn5gDZc9n63Ak/+jD67oWXn3Gs0M6vddAN+eDXBCS5EmNWzbSxsn9SzFWWg==",
3014 |       "dev": true,
3015 |       "license": "MIT",
3016 |       "dependencies": {
3017 |         "@typescript-eslint/tsconfig-utils": "^8.38.0",
3018 |         "@typescript-eslint/types": "^8.38.0",
3019 |         "debug": "^4.3.4"
3020 |       },
3021 |       "engines": {
3022 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3023 |       },
3024 |       "funding": {
3025 |         "type": "opencollective",
3026 |         "url": "https://opencollective.com/typescript-eslint"
3027 |       },
3028 |       "peerDependencies": {
3029 |         "typescript": ">=4.8.4 <5.9.0"
3030 |       }
3031 |     },
3032 |     "node_modules/@typescript-eslint/scope-manager": {
3033 |       "version": "8.38.0",
3034 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.38.0.tgz",
3035 |       "integrity": "sha512-WJw3AVlFFcdT9Ri1xs/lg8LwDqgekWXWhH3iAF+1ZM+QPd7oxQ6jvtW/JPwzAScxitILUIFs0/AnQ/UWHzbATQ==",
3036 |       "dev": true,
3037 |       "license": "MIT",
3038 |       "dependencies": {
3039 |         "@typescript-eslint/types": "8.38.0",
3040 |         "@typescript-eslint/visitor-keys": "8.38.0"
3041 |       },
3042 |       "engines": {
3043 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3044 |       },
3045 |       "funding": {
3046 |         "type": "opencollective",
3047 |         "url": "https://opencollective.com/typescript-eslint"
3048 |       }
3049 |     },
3050 |     "node_modules/@typescript-eslint/tsconfig-utils": {
3051 |       "version": "8.38.0",
3052 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/tsconfig-utils/-/tsconfig-utils-8.38.0.tgz",
3053 |       "integrity": "sha512-Lum9RtSE3EroKk/bYns+sPOodqb2Fv50XOl/gMviMKNvanETUuUcC9ObRbzrJ4VSd2JalPqgSAavwrPiPvnAiQ==",
3054 |       "dev": true,
3055 |       "license": "MIT",
3056 |       "engines": {
3057 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3058 |       },
3059 |       "funding": {
3060 |         "type": "opencollective",
3061 |         "url": "https://opencollective.com/typescript-eslint"
3062 |       },
3063 |       "peerDependencies": {
3064 |         "typescript": ">=4.8.4 <5.9.0"
3065 |       }
3066 |     },
3067 |     "node_modules/@typescript-eslint/type-utils": {
3068 |       "version": "8.38.0",
3069 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.38.0.tgz",
3070 |       "integrity": "sha512-c7jAvGEZVf0ao2z+nnz8BUaHZD09Agbh+DY7qvBQqLiz8uJzRgVPj5YvOh8I8uEiH8oIUGIfHzMwUcGVco/SJg==",
3071 |       "dev": true,
3072 |       "license": "MIT",
3073 |       "dependencies": {
3074 |         "@typescript-eslint/types": "8.38.0",
3075 |         "@typescript-eslint/typescript-estree": "8.38.0",
3076 |         "@typescript-eslint/utils": "8.38.0",
3077 |         "debug": "^4.3.4",
3078 |         "ts-api-utils": "^2.1.0"
3079 |       },
3080 |       "engines": {
3081 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3082 |       },
3083 |       "funding": {
3084 |         "type": "opencollective",
3085 |         "url": "https://opencollective.com/typescript-eslint"
3086 |       },
3087 |       "peerDependencies": {
3088 |         "eslint": "^8.57.0 || ^9.0.0",
3089 |         "typescript": ">=4.8.4 <5.9.0"
3090 |       }
3091 |     },
3092 |     "node_modules/@typescript-eslint/types": {
3093 |       "version": "8.38.0",
3094 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.38.0.tgz",
3095 |       "integrity": "sha512-wzkUfX3plUqij4YwWaJyqhiPE5UCRVlFpKn1oCRn2O1bJ592XxWJj8ROQ3JD5MYXLORW84063z3tZTb/cs4Tyw==",
3096 |       "dev": true,
3097 |       "license": "MIT",
3098 |       "engines": {
3099 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3100 |       },
3101 |       "funding": {
3102 |         "type": "opencollective",
3103 |         "url": "https://opencollective.com/typescript-eslint"
3104 |       }
3105 |     },
3106 |     "node_modules/@typescript-eslint/typescript-estree": {
3107 |       "version": "8.38.0",
3108 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.38.0.tgz",
3109 |       "integrity": "sha512-fooELKcAKzxux6fA6pxOflpNS0jc+nOQEEOipXFNjSlBS6fqrJOVY/whSn70SScHrcJ2LDsxWrneFoWYSVfqhQ==",
3110 |       "dev": true,
3111 |       "license": "MIT",
3112 |       "dependencies": {
3113 |         "@typescript-eslint/project-service": "8.38.0",
3114 |         "@typescript-eslint/tsconfig-utils": "8.38.0",
3115 |         "@typescript-eslint/types": "8.38.0",
3116 |         "@typescript-eslint/visitor-keys": "8.38.0",
3117 |         "debug": "^4.3.4",
3118 |         "fast-glob": "^3.3.2",
3119 |         "is-glob": "^4.0.3",
3120 |         "minimatch": "^9.0.4",
3121 |         "semver": "^7.6.0",
3122 |         "ts-api-utils": "^2.1.0"
3123 |       },
3124 |       "engines": {
3125 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3126 |       },
3127 |       "funding": {
3128 |         "type": "opencollective",
3129 |         "url": "https://opencollective.com/typescript-eslint"
3130 |       },
3131 |       "peerDependencies": {
3132 |         "typescript": ">=4.8.4 <5.9.0"
3133 |       }
3134 |     },
3135 |     "node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion": {
3136 |       "version": "2.0.2",
3137 |       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
3138 |       "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
3139 |       "dev": true,
3140 |       "license": "MIT",
3141 |       "dependencies": {
3142 |         "balanced-match": "^1.0.0"
3143 |       }
3144 |     },
3145 |     "node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch": {
3146 |       "version": "9.0.5",
3147 |       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
3148 |       "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
3149 |       "dev": true,
3150 |       "license": "ISC",
3151 |       "dependencies": {
3152 |         "brace-expansion": "^2.0.1"
3153 |       },
3154 |       "engines": {
3155 |         "node": ">=16 || 14 >=14.17"
3156 |       },
3157 |       "funding": {
3158 |         "url": "https://github.com/sponsors/isaacs"
3159 |       }
3160 |     },
3161 |     "node_modules/@typescript-eslint/utils": {
3162 |       "version": "8.38.0",
3163 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.38.0.tgz",
3164 |       "integrity": "sha512-hHcMA86Hgt+ijJlrD8fX0j1j8w4C92zue/8LOPAFioIno+W0+L7KqE8QZKCcPGc/92Vs9x36w/4MPTJhqXdyvg==",
3165 |       "dev": true,
3166 |       "license": "MIT",
3167 |       "dependencies": {
3168 |         "@eslint-community/eslint-utils": "^4.7.0",
3169 |         "@typescript-eslint/scope-manager": "8.38.0",
3170 |         "@typescript-eslint/types": "8.38.0",
3171 |         "@typescript-eslint/typescript-estree": "8.38.0"
3172 |       },
3173 |       "engines": {
3174 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3175 |       },
3176 |       "funding": {
3177 |         "type": "opencollective",
3178 |         "url": "https://opencollective.com/typescript-eslint"
3179 |       },
3180 |       "peerDependencies": {
3181 |         "eslint": "^8.57.0 || ^9.0.0",
3182 |         "typescript": ">=4.8.4 <5.9.0"
3183 |       }
3184 |     },
3185 |     "node_modules/@typescript-eslint/visitor-keys": {
3186 |       "version": "8.38.0",
3187 |       "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.38.0.tgz",
3188 |       "integrity": "sha512-pWrTcoFNWuwHlA9CvlfSsGWs14JxfN1TH25zM5L7o0pRLhsoZkDnTsXfQRJBEWJoV5DL0jf+Z+sxiud+K0mq1g==",
3189 |       "dev": true,
3190 |       "license": "MIT",
3191 |       "dependencies": {
3192 |         "@typescript-eslint/types": "8.38.0",
3193 |         "eslint-visitor-keys": "^4.2.1"
3194 |       },
3195 |       "engines": {
3196 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3197 |       },
3198 |       "funding": {
3199 |         "type": "opencollective",
3200 |         "url": "https://opencollective.com/typescript-eslint"
3201 |       }
3202 |     },
3203 |     "node_modules/@vitejs/plugin-react-swc": {
3204 |       "version": "3.11.0",
3205 |       "resolved": "https://registry.npmjs.org/@vitejs/plugin-react-swc/-/plugin-react-swc-3.11.0.tgz",
3206 |       "integrity": "sha512-YTJCGFdNMHCMfjODYtxRNVAYmTWQ1Lb8PulP/2/f/oEEtglw8oKxKIZmmRkyXrVrHfsKOaVkAc3NT9/dMutO5w==",
3207 |       "dev": true,
3208 |       "license": "MIT",
3209 |       "dependencies": {
3210 |         "@rolldown/pluginutils": "1.0.0-beta.27",
3211 |         "@swc/core": "^1.12.11"
3212 |       },
3213 |       "peerDependencies": {
3214 |         "vite": "^4 || ^5 || ^6 || ^7"
3215 |       }
3216 |     },
3217 |     "node_modules/acorn": {
3218 |       "version": "8.15.0",
3219 |       "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
3220 |       "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
3221 |       "dev": true,
3222 |       "license": "MIT",
3223 |       "bin": {
3224 |         "acorn": "bin/acorn"
3225 |       },
3226 |       "engines": {
3227 |         "node": ">=0.4.0"
3228 |       }
3229 |     },
3230 |     "node_modules/acorn-jsx": {
3231 |       "version": "5.3.2",
3232 |       "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
3233 |       "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
3234 |       "dev": true,
3235 |       "license": "MIT",
3236 |       "peerDependencies": {
3237 |         "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
3238 |       }
3239 |     },
3240 |     "node_modules/ajv": {
3241 |       "version": "6.12.6",
3242 |       "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
3243 |       "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
3244 |       "dev": true,
3245 |       "license": "MIT",
3246 |       "dependencies": {
3247 |         "fast-deep-equal": "^3.1.1",
3248 |         "fast-json-stable-stringify": "^2.0.0",
3249 |         "json-schema-traverse": "^0.4.1",
3250 |         "uri-js": "^4.2.2"
3251 |       },
3252 |       "funding": {
3253 |         "type": "github",
3254 |         "url": "https://github.com/sponsors/epoberezkin"
3255 |       }
3256 |     },
3257 |     "node_modules/ansi-regex": {
3258 |       "version": "6.1.0",
3259 |       "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
3260 |       "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
3261 |       "license": "MIT",
3262 |       "engines": {
3263 |         "node": ">=12"
3264 |       },
3265 |       "funding": {
3266 |         "url": "https://github.com/chalk/ansi-regex?sponsor=1"
3267 |       }
3268 |     },
3269 |     "node_modules/ansi-styles": {
3270 |       "version": "4.3.0",
3271 |       "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
3272 |       "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
3273 |       "license": "MIT",
3274 |       "dependencies": {
3275 |         "color-convert": "^2.0.1"
3276 |       },
3277 |       "engines": {
3278 |         "node": ">=8"
3279 |       },
3280 |       "funding": {
3281 |         "url": "https://github.com/chalk/ansi-styles?sponsor=1"
3282 |       }
3283 |     },
3284 |     "node_modules/any-promise": {
3285 |       "version": "1.3.0",
3286 |       "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
3287 |       "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
3288 |       "license": "MIT"
3289 |     },
3290 |     "node_modules/anymatch": {
3291 |       "version": "3.1.3",
3292 |       "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
3293 |       "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
3294 |       "license": "ISC",
3295 |       "dependencies": {
3296 |         "normalize-path": "^3.0.0",
3297 |         "picomatch": "^2.0.4"
3298 |       },
3299 |       "engines": {
3300 |         "node": ">= 8"
3301 |       }
3302 |     },
3303 |     "node_modules/arg": {
3304 |       "version": "5.0.2",
3305 |       "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
3306 |       "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
3307 |       "license": "MIT"
3308 |     },
3309 |     "node_modules/argparse": {
3310 |       "version": "2.0.1",
3311 |       "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
3312 |       "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
3313 |       "dev": true,
3314 |       "license": "Python-2.0"
3315 |     },
3316 |     "node_modules/aria-hidden": {
3317 |       "version": "1.2.4",
3318 |       "resolved": "https://registry.npmjs.org/aria-hidden/-/aria-hidden-1.2.4.tgz",
3319 |       "integrity": "sha512-y+CcFFwelSXpLZk/7fMB2mUbGtX9lKycf1MWJ7CaTIERyitVlyQx6C+sxcROU2BAJ24OiZyK+8wj2i8AlBoS3A==",
3320 |       "license": "MIT",
3321 |       "dependencies": {
3322 |         "tslib": "^2.0.0"
3323 |       },
3324 |       "engines": {
3325 |         "node": ">=10"
3326 |       }
3327 |     },
3328 |     "node_modules/asynckit": {
3329 |       "version": "0.4.0",
3330 |       "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
3331 |       "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
3332 |       "license": "MIT"
3333 |     },
3334 |     "node_modules/autoprefixer": {
3335 |       "version": "10.4.21",
3336 |       "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
3337 |       "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
3338 |       "dev": true,
3339 |       "funding": [
3340 |         {
3341 |           "type": "opencollective",
3342 |           "url": "https://opencollective.com/postcss/"
3343 |         },
3344 |         {
3345 |           "type": "tidelift",
3346 |           "url": "https://tidelift.com/funding/github/npm/autoprefixer"
3347 |         },
3348 |         {
3349 |           "type": "github",
3350 |           "url": "https://github.com/sponsors/ai"
3351 |         }
3352 |       ],
3353 |       "license": "MIT",
3354 |       "dependencies": {
3355 |         "browserslist": "^4.24.4",
3356 |         "caniuse-lite": "^1.0.30001702",
3357 |         "fraction.js": "^4.3.7",
3358 |         "normalize-range": "^0.1.2",
3359 |         "picocolors": "^1.1.1",
3360 |         "postcss-value-parser": "^4.2.0"
3361 |       },
3362 |       "bin": {
3363 |         "autoprefixer": "bin/autoprefixer"
3364 |       },
3365 |       "engines": {
3366 |         "node": "^10 || ^12 || >=14"
3367 |       },
3368 |       "peerDependencies": {
3369 |         "postcss": "^8.1.0"
3370 |       }
3371 |     },
3372 |     "node_modules/axios": {
3373 |       "version": "1.12.1",
3374 |       "resolved": "https://registry.npmjs.org/axios/-/axios-1.12.1.tgz",
3375 |       "integrity": "sha512-Kn4kbSXpkFHCGE6rBFNwIv0GQs4AvDT80jlveJDKFxjbTYMUeB4QtsdPCv6H8Cm19Je7IU6VFtRl2zWZI0rudQ==",
3376 |       "license": "MIT",
3377 |       "dependencies": {
3378 |         "follow-redirects": "^1.15.6",
3379 |         "form-data": "^4.0.4",
3380 |         "proxy-from-env": "^1.1.0"
3381 |       }
3382 |     },
3383 |     "node_modules/balanced-match": {
3384 |       "version": "1.0.2",
3385 |       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
3386 |       "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
3387 |       "license": "MIT"
3388 |     },
3389 |     "node_modules/binary-extensions": {
3390 |       "version": "2.3.0",
3391 |       "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
3392 |       "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
3393 |       "license": "MIT",
3394 |       "engines": {
3395 |         "node": ">=8"
3396 |       },
3397 |       "funding": {
3398 |         "url": "https://github.com/sponsors/sindresorhus"
3399 |       }
3400 |     },
3401 |     "node_modules/brace-expansion": {
3402 |       "version": "1.1.12",
3403 |       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
3404 |       "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
3405 |       "dev": true,
3406 |       "license": "MIT",
3407 |       "dependencies": {
3408 |         "balanced-match": "^1.0.0",
3409 |         "concat-map": "0.0.1"
3410 |       }
3411 |     },
3412 |     "node_modules/braces": {
3413 |       "version": "3.0.3",
3414 |       "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
3415 |       "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
3416 |       "license": "MIT",
3417 |       "dependencies": {
3418 |         "fill-range": "^7.1.1"
3419 |       },
3420 |       "engines": {
3421 |         "node": ">=8"
3422 |       }
3423 |     },
3424 |     "node_modules/browserslist": {
3425 |       "version": "4.25.1",
3426 |       "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz",
3427 |       "integrity": "sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==",
3428 |       "dev": true,
3429 |       "funding": [
3430 |         {
3431 |           "type": "opencollective",
3432 |           "url": "https://opencollective.com/browserslist"
3433 |         },
3434 |         {
3435 |           "type": "tidelift",
3436 |           "url": "https://tidelift.com/funding/github/npm/browserslist"
3437 |         },
3438 |         {
3439 |           "type": "github",
3440 |           "url": "https://github.com/sponsors/ai"
3441 |         }
3442 |       ],
3443 |       "license": "MIT",
3444 |       "dependencies": {
3445 |         "caniuse-lite": "^1.0.30001726",
3446 |         "electron-to-chromium": "^1.5.173",
3447 |         "node-releases": "^2.0.19",
3448 |         "update-browserslist-db": "^1.1.3"
3449 |       },
3450 |       "bin": {
3451 |         "browserslist": "cli.js"
3452 |       },
3453 |       "engines": {
3454 |         "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
3455 |       }
3456 |     },
3457 |     "node_modules/call-bind-apply-helpers": {
3458 |       "version": "1.0.2",
3459 |       "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
3460 |       "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
3461 |       "license": "MIT",
3462 |       "dependencies": {
3463 |         "es-errors": "^1.3.0",
3464 |         "function-bind": "^1.1.2"
3465 |       },
3466 |       "engines": {
3467 |         "node": ">= 0.4"
3468 |       }
3469 |     },
3470 |     "node_modules/callsites": {
3471 |       "version": "3.1.0",
3472 |       "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
3473 |       "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
3474 |       "dev": true,
3475 |       "license": "MIT",
3476 |       "engines": {
3477 |         "node": ">=6"
3478 |       }
3479 |     },
3480 |     "node_modules/camelcase-css": {
3481 |       "version": "2.0.1",
3482 |       "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
3483 |       "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
3484 |       "license": "MIT",
3485 |       "engines": {
3486 |         "node": ">= 6"
3487 |       }
3488 |     },
3489 |     "node_modules/caniuse-lite": {
3490 |       "version": "1.0.30001727",
3491 |       "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz",
3492 |       "integrity": "sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==",
3493 |       "dev": true,
3494 |       "funding": [
3495 |         {
3496 |           "type": "opencollective",
3497 |           "url": "https://opencollective.com/browserslist"
3498 |         },
3499 |         {
3500 |           "type": "tidelift",
3501 |           "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
3502 |         },
3503 |         {
3504 |           "type": "github",
3505 |           "url": "https://github.com/sponsors/ai"
3506 |         }
3507 |       ],
3508 |       "license": "CC-BY-4.0"
3509 |     },
3510 |     "node_modules/chalk": {
3511 |       "version": "4.1.2",
3512 |       "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
3513 |       "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
3514 |       "dev": true,
3515 |       "license": "MIT",
3516 |       "dependencies": {
3517 |         "ansi-styles": "^4.1.0",
3518 |         "supports-color": "^7.1.0"
3519 |       },
3520 |       "engines": {
3521 |         "node": ">=10"
3522 |       },
3523 |       "funding": {
3524 |         "url": "https://github.com/chalk/chalk?sponsor=1"
3525 |       }
3526 |     },
3527 |     "node_modules/chokidar": {
3528 |       "version": "3.6.0",
3529 |       "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
3530 |       "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
3531 |       "license": "MIT",
3532 |       "dependencies": {
3533 |         "anymatch": "~3.1.2",
3534 |         "braces": "~3.0.2",
3535 |         "glob-parent": "~5.1.2",
3536 |         "is-binary-path": "~2.1.0",
3537 |         "is-glob": "~4.0.1",
3538 |         "normalize-path": "~3.0.0",
3539 |         "readdirp": "~3.6.0"
3540 |       },
3541 |       "engines": {
3542 |         "node": ">= 8.10.0"
3543 |       },
3544 |       "funding": {
3545 |         "url": "https://paulmillr.com/funding/"
3546 |       },
3547 |       "optionalDependencies": {
3548 |         "fsevents": "~2.3.2"
3549 |       }
3550 |     },
3551 |     "node_modules/chokidar/node_modules/glob-parent": {
3552 |       "version": "5.1.2",
3553 |       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
3554 |       "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
3555 |       "license": "ISC",
3556 |       "dependencies": {
3557 |         "is-glob": "^4.0.1"
3558 |       },
3559 |       "engines": {
3560 |         "node": ">= 6"
3561 |       }
3562 |     },
3563 |     "node_modules/class-variance-authority": {
3564 |       "version": "0.7.1",
3565 |       "resolved": "https://registry.npmjs.org/class-variance-authority/-/class-variance-authority-0.7.1.tgz",
3566 |       "integrity": "sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==",
3567 |       "dependencies": {
3568 |         "clsx": "^2.1.1"
3569 |       },
3570 |       "funding": {
3571 |         "url": "https://polar.sh/cva"
3572 |       }
3573 |     },
3574 |     "node_modules/clsx": {
3575 |       "version": "2.1.1",
3576 |       "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
3577 |       "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
3578 |       "license": "MIT",
3579 |       "engines": {
3580 |         "node": ">=6"
3581 |       }
3582 |     },
3583 |     "node_modules/cmdk": {
3584 |       "version": "1.1.1",
3585 |       "resolved": "https://registry.npmjs.org/cmdk/-/cmdk-1.1.1.tgz",
3586 |       "integrity": "sha512-Vsv7kFaXm+ptHDMZ7izaRsP70GgrW9NBNGswt9OZaVBLlE0SNpDq8eu/VGXyF9r7M0azK3Wy7OlYXsuyYLFzHg==",
3587 |       "license": "MIT",
3588 |       "dependencies": {
3589 |         "@radix-ui/react-compose-refs": "^1.1.1",
3590 |         "@radix-ui/react-dialog": "^1.1.6",
3591 |         "@radix-ui/react-id": "^1.1.0",
3592 |         "@radix-ui/react-primitive": "^2.0.2"
3593 |       },
3594 |       "peerDependencies": {
3595 |         "react": "^18 || ^19 || ^19.0.0-rc",
3596 |         "react-dom": "^18 || ^19 || ^19.0.0-rc"
3597 |       }
3598 |     },
3599 |     "node_modules/color-convert": {
3600 |       "version": "2.0.1",
3601 |       "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
3602 |       "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
3603 |       "license": "MIT",
3604 |       "dependencies": {
3605 |         "color-name": "~1.1.4"
3606 |       },
3607 |       "engines": {
3608 |         "node": ">=7.0.0"
3609 |       }
3610 |     },
3611 |     "node_modules/color-name": {
3612 |       "version": "1.1.4",
3613 |       "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
3614 |       "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
3615 |       "license": "MIT"
3616 |     },
3617 |     "node_modules/combined-stream": {
3618 |       "version": "1.0.8",
3619 |       "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
3620 |       "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
3621 |       "license": "MIT",
3622 |       "dependencies": {
3623 |         "delayed-stream": "~1.0.0"
3624 |       },
3625 |       "engines": {
3626 |         "node": ">= 0.8"
3627 |       }
3628 |     },
3629 |     "node_modules/commander": {
3630 |       "version": "4.1.1",
3631 |       "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
3632 |       "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
3633 |       "license": "MIT",
3634 |       "engines": {
3635 |         "node": ">= 6"
3636 |       }
3637 |     },
3638 |     "node_modules/concat-map": {
3639 |       "version": "0.0.1",
3640 |       "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
3641 |       "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
3642 |       "dev": true,
3643 |       "license": "MIT"
3644 |     },
3645 |     "node_modules/cross-spawn": {
3646 |       "version": "7.0.6",
3647 |       "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
3648 |       "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
3649 |       "dependencies": {
3650 |         "path-key": "^3.1.0",
3651 |         "shebang-command": "^2.0.0",
3652 |         "which": "^2.0.1"
3653 |       },
3654 |       "engines": {
3655 |         "node": ">= 8"
3656 |       }
3657 |     },
3658 |     "node_modules/cssesc": {
3659 |       "version": "3.0.0",
3660 |       "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
3661 |       "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
3662 |       "license": "MIT",
3663 |       "bin": {
3664 |         "cssesc": "bin/cssesc"
3665 |       },
3666 |       "engines": {
3667 |         "node": ">=4"
3668 |       }
3669 |     },
3670 |     "node_modules/csstype": {
3671 |       "version": "3.1.3",
3672 |       "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
3673 |       "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
3674 |       "license": "MIT"
3675 |     },
3676 |     "node_modules/d3-array": {
3677 |       "version": "3.2.4",
3678 |       "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
3679 |       "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
3680 |       "license": "ISC",
3681 |       "dependencies": {
3682 |         "internmap": "1 - 2"
3683 |       },
3684 |       "engines": {
3685 |         "node": ">=12"
3686 |       }
3687 |     },
3688 |     "node_modules/d3-color": {
3689 |       "version": "3.1.0",
3690 |       "resolved": "https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz",
3691 |       "integrity": "sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==",
3692 |       "license": "ISC",
3693 |       "engines": {
3694 |         "node": ">=12"
3695 |       }
3696 |     },
3697 |     "node_modules/d3-ease": {
3698 |       "version": "3.0.1",
3699 |       "resolved": "https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz",
3700 |       "integrity": "sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==",
3701 |       "license": "BSD-3-Clause",
3702 |       "engines": {
3703 |         "node": ">=12"
3704 |       }
3705 |     },
3706 |     "node_modules/d3-format": {
3707 |       "version": "3.1.0",
3708 |       "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz",
3709 |       "integrity": "sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==",
3710 |       "license": "ISC",
3711 |       "engines": {
3712 |         "node": ">=12"
3713 |       }
3714 |     },
3715 |     "node_modules/d3-interpolate": {
3716 |       "version": "3.0.1",
3717 |       "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz",
3718 |       "integrity": "sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==",
3719 |       "license": "ISC",
3720 |       "dependencies": {
3721 |         "d3-color": "1 - 3"
3722 |       },
3723 |       "engines": {
3724 |         "node": ">=12"
3725 |       }
3726 |     },
3727 |     "node_modules/d3-path": {
3728 |       "version": "3.1.0",
3729 |       "resolved": "https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz",
3730 |       "integrity": "sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==",
3731 |       "license": "ISC",
3732 |       "engines": {
3733 |         "node": ">=12"
3734 |       }
3735 |     },
3736 |     "node_modules/d3-scale": {
3737 |       "version": "4.0.2",
3738 |       "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz",
3739 |       "integrity": "sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==",
3740 |       "license": "ISC",
3741 |       "dependencies": {
3742 |         "d3-array": "2.10.0 - 3",
3743 |         "d3-format": "1 - 3",
3744 |         "d3-interpolate": "1.2.0 - 3",
3745 |         "d3-time": "2.1.1 - 3",
3746 |         "d3-time-format": "2 - 4"
3747 |       },
3748 |       "engines": {
3749 |         "node": ">=12"
3750 |       }
3751 |     },
3752 |     "node_modules/d3-shape": {
3753 |       "version": "3.2.0",
3754 |       "resolved": "https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz",
3755 |       "integrity": "sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==",
3756 |       "license": "ISC",
3757 |       "dependencies": {
3758 |         "d3-path": "^3.1.0"
3759 |       },
3760 |       "engines": {
3761 |         "node": ">=12"
3762 |       }
3763 |     },
3764 |     "node_modules/d3-time": {
3765 |       "version": "3.1.0",
3766 |       "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
3767 |       "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
3768 |       "license": "ISC",
3769 |       "dependencies": {
3770 |         "d3-array": "2 - 3"
3771 |       },
3772 |       "engines": {
3773 |         "node": ">=12"
3774 |       }
3775 |     },
3776 |     "node_modules/d3-time-format": {
3777 |       "version": "4.1.0",
3778 |       "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz",
3779 |       "integrity": "sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==",
3780 |       "license": "ISC",
3781 |       "dependencies": {
3782 |         "d3-time": "1 - 3"
3783 |       },
3784 |       "engines": {
3785 |         "node": ">=12"
3786 |       }
3787 |     },
3788 |     "node_modules/d3-timer": {
3789 |       "version": "3.0.1",
3790 |       "resolved": "https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz",
3791 |       "integrity": "sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==",
3792 |       "license": "ISC",
3793 |       "engines": {
3794 |         "node": ">=12"
3795 |       }
3796 |     },
3797 |     "node_modules/date-fns": {
3798 |       "version": "3.6.0",
3799 |       "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-3.6.0.tgz",
3800 |       "integrity": "sha512-fRHTG8g/Gif+kSh50gaGEdToemgfj74aRX3swtiouboip5JDLAyDE9F11nHMIcvOaXeOC6D7SpNhi7uFyB7Uww==",
3801 |       "license": "MIT",
3802 |       "funding": {
3803 |         "type": "github",
3804 |         "url": "https://github.com/sponsors/kossnocorp"
3805 |       }
3806 |     },
3807 |     "node_modules/debug": {
3808 |       "version": "4.3.7",
3809 |       "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
3810 |       "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
3811 |       "dev": true,
3812 |       "license": "MIT",
3813 |       "dependencies": {
3814 |         "ms": "^2.1.3"
3815 |       },
3816 |       "engines": {
3817 |         "node": ">=6.0"
3818 |       },
3819 |       "peerDependenciesMeta": {
3820 |         "supports-color": {
3821 |           "optional": true
3822 |         }
3823 |       }
3824 |     },
3825 |     "node_modules/decimal.js-light": {
3826 |       "version": "2.5.1",
3827 |       "resolved": "https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz",
3828 |       "integrity": "sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==",
3829 |       "license": "MIT"
3830 |     },
3831 |     "node_modules/deep-is": {
3832 |       "version": "0.1.4",
3833 |       "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
3834 |       "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
3835 |       "dev": true,
3836 |       "license": "MIT"
3837 |     },
3838 |     "node_modules/delayed-stream": {
3839 |       "version": "1.0.0",
3840 |       "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
3841 |       "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
3842 |       "license": "MIT",
3843 |       "engines": {
3844 |         "node": ">=0.4.0"
3845 |       }
3846 |     },
3847 |     "node_modules/detect-node-es": {
3848 |       "version": "1.1.0",
3849 |       "resolved": "https://registry.npmjs.org/detect-node-es/-/detect-node-es-1.1.0.tgz",
3850 |       "integrity": "sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==",
3851 |       "license": "MIT"
3852 |     },
3853 |     "node_modules/didyoumean": {
3854 |       "version": "1.2.2",
3855 |       "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
3856 |       "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
3857 |       "license": "Apache-2.0"
3858 |     },
3859 |     "node_modules/dlv": {
3860 |       "version": "1.1.3",
3861 |       "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
3862 |       "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
3863 |       "license": "MIT"
3864 |     },
3865 |     "node_modules/dom-helpers": {
3866 |       "version": "5.2.1",
3867 |       "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
3868 |       "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
3869 |       "license": "MIT",
3870 |       "dependencies": {
3871 |         "@babel/runtime": "^7.8.7",
3872 |         "csstype": "^3.0.2"
3873 |       }
3874 |     },
3875 |     "node_modules/dunder-proto": {
3876 |       "version": "1.0.1",
3877 |       "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
3878 |       "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
3879 |       "license": "MIT",
3880 |       "dependencies": {
3881 |         "call-bind-apply-helpers": "^1.0.1",
3882 |         "es-errors": "^1.3.0",
3883 |         "gopd": "^1.2.0"
3884 |       },
3885 |       "engines": {
3886 |         "node": ">= 0.4"
3887 |       }
3888 |     },
3889 |     "node_modules/eastasianwidth": {
3890 |       "version": "0.2.0",
3891 |       "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
3892 |       "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
3893 |       "license": "MIT"
3894 |     },
3895 |     "node_modules/electron-to-chromium": {
3896 |       "version": "1.5.192",
3897 |       "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.192.tgz",
3898 |       "integrity": "sha512-rP8Ez0w7UNw/9j5eSXCe10o1g/8B1P5SM90PCCMVkIRQn2R0LEHWz4Eh9RnxkniuDe1W0cTSOB3MLlkTGDcuCg==",
3899 |       "dev": true,
3900 |       "license": "ISC"
3901 |     },
3902 |     "node_modules/embla-carousel": {
3903 |       "version": "8.6.0",
3904 |       "resolved": "https://registry.npmjs.org/embla-carousel/-/embla-carousel-8.6.0.tgz",
3905 |       "integrity": "sha512-SjWyZBHJPbqxHOzckOfo8lHisEaJWmwd23XppYFYVh10bU66/Pn5tkVkbkCMZVdbUE5eTCI2nD8OyIP4Z+uwkA==",
3906 |       "license": "MIT"
3907 |     },
3908 |     "node_modules/embla-carousel-react": {
3909 |       "version": "8.6.0",
3910 |       "resolved": "https://registry.npmjs.org/embla-carousel-react/-/embla-carousel-react-8.6.0.tgz",
3911 |       "integrity": "sha512-0/PjqU7geVmo6F734pmPqpyHqiM99olvyecY7zdweCw+6tKEXnrE90pBiBbMMU8s5tICemzpQ3hi5EpxzGW+JA==",
3912 |       "license": "MIT",
3913 |       "dependencies": {
3914 |         "embla-carousel": "8.6.0",
3915 |         "embla-carousel-reactive-utils": "8.6.0"
3916 |       },
3917 |       "peerDependencies": {
3918 |         "react": "^16.8.0 || ^17.0.1 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
3919 |       }
3920 |     },
3921 |     "node_modules/embla-carousel-reactive-utils": {
3922 |       "version": "8.6.0",
3923 |       "resolved": "https://registry.npmjs.org/embla-carousel-reactive-utils/-/embla-carousel-reactive-utils-8.6.0.tgz",
3924 |       "integrity": "sha512-fMVUDUEx0/uIEDM0Mz3dHznDhfX+znCCDCeIophYb1QGVM7YThSWX+wz11zlYwWFOr74b4QLGg0hrGPJeG2s4A==",
3925 |       "license": "MIT",
3926 |       "peerDependencies": {
3927 |         "embla-carousel": "8.6.0"
3928 |       }
3929 |     },
3930 |     "node_modules/emoji-regex": {
3931 |       "version": "9.2.2",
3932 |       "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
3933 |       "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
3934 |       "license": "MIT"
3935 |     },
3936 |     "node_modules/es-define-property": {
3937 |       "version": "1.0.1",
3938 |       "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
3939 |       "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
3940 |       "license": "MIT",
3941 |       "engines": {
3942 |         "node": ">= 0.4"
3943 |       }
3944 |     },
3945 |     "node_modules/es-errors": {
3946 |       "version": "1.3.0",
3947 |       "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
3948 |       "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
3949 |       "license": "MIT",
3950 |       "engines": {
3951 |         "node": ">= 0.4"
3952 |       }
3953 |     },
3954 |     "node_modules/es-object-atoms": {
3955 |       "version": "1.1.1",
3956 |       "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
3957 |       "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
3958 |       "license": "MIT",
3959 |       "dependencies": {
3960 |         "es-errors": "^1.3.0"
3961 |       },
3962 |       "engines": {
3963 |         "node": ">= 0.4"
3964 |       }
3965 |     },
3966 |     "node_modules/es-set-tostringtag": {
3967 |       "version": "2.1.0",
3968 |       "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
3969 |       "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
3970 |       "license": "MIT",
3971 |       "dependencies": {
3972 |         "es-errors": "^1.3.0",
3973 |         "get-intrinsic": "^1.2.6",
3974 |         "has-tostringtag": "^1.0.2",
3975 |         "hasown": "^2.0.2"
3976 |       },
3977 |       "engines": {
3978 |         "node": ">= 0.4"
3979 |       }
3980 |     },
3981 |     "node_modules/esbuild": {
3982 |       "version": "0.21.5",
3983 |       "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz",
3984 |       "integrity": "sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==",
3985 |       "dev": true,
3986 |       "hasInstallScript": true,
3987 |       "license": "MIT",
3988 |       "bin": {
3989 |         "esbuild": "bin/esbuild"
3990 |       },
3991 |       "engines": {
3992 |         "node": ">=12"
3993 |       },
3994 |       "optionalDependencies": {
3995 |         "@esbuild/aix-ppc64": "0.21.5",
3996 |         "@esbuild/android-arm": "0.21.5",
3997 |         "@esbuild/android-arm64": "0.21.5",
3998 |         "@esbuild/android-x64": "0.21.5",
3999 |         "@esbuild/darwin-arm64": "0.21.5",
4000 |         "@esbuild/darwin-x64": "0.21.5",
4001 |         "@esbuild/freebsd-arm64": "0.21.5",
4002 |         "@esbuild/freebsd-x64": "0.21.5",
4003 |         "@esbuild/linux-arm": "0.21.5",
4004 |         "@esbuild/linux-arm64": "0.21.5",
4005 |         "@esbuild/linux-ia32": "0.21.5",
4006 |         "@esbuild/linux-loong64": "0.21.5",
4007 |         "@esbuild/linux-mips64el": "0.21.5",
4008 |         "@esbuild/linux-ppc64": "0.21.5",
4009 |         "@esbuild/linux-riscv64": "0.21.5",
4010 |         "@esbuild/linux-s390x": "0.21.5",
4011 |         "@esbuild/linux-x64": "0.21.5",
4012 |         "@esbuild/netbsd-x64": "0.21.5",
4013 |         "@esbuild/openbsd-x64": "0.21.5",
4014 |         "@esbuild/sunos-x64": "0.21.5",
4015 |         "@esbuild/win32-arm64": "0.21.5",
4016 |         "@esbuild/win32-ia32": "0.21.5",
4017 |         "@esbuild/win32-x64": "0.21.5"
4018 |       }
4019 |     },
4020 |     "node_modules/escalade": {
4021 |       "version": "3.2.0",
4022 |       "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
4023 |       "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
4024 |       "dev": true,
4025 |       "license": "MIT",
4026 |       "engines": {
4027 |         "node": ">=6"
4028 |       }
4029 |     },
4030 |     "node_modules/escape-string-regexp": {
4031 |       "version": "4.0.0",
4032 |       "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
4033 |       "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
4034 |       "dev": true,
4035 |       "license": "MIT",
4036 |       "engines": {
4037 |         "node": ">=10"
4038 |       },
4039 |       "funding": {
4040 |         "url": "https://github.com/sponsors/sindresorhus"
4041 |       }
4042 |     },
4043 |     "node_modules/eslint": {
4044 |       "version": "9.32.0",
4045 |       "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.32.0.tgz",
4046 |       "integrity": "sha512-LSehfdpgMeWcTZkWZVIJl+tkZ2nuSkyyB9C27MZqFWXuph7DvaowgcTvKqxvpLW1JZIk8PN7hFY3Rj9LQ7m7lg==",
4047 |       "dev": true,
4048 |       "license": "MIT",
4049 |       "dependencies": {
4050 |         "@eslint-community/eslint-utils": "^4.2.0",
4051 |         "@eslint-community/regexpp": "^4.12.1",
4052 |         "@eslint/config-array": "^0.21.0",
4053 |         "@eslint/config-helpers": "^0.3.0",
4054 |         "@eslint/core": "^0.15.0",
4055 |         "@eslint/eslintrc": "^3.3.1",
4056 |         "@eslint/js": "9.32.0",
4057 |         "@eslint/plugin-kit": "^0.3.4",
4058 |         "@humanfs/node": "^0.16.6",
4059 |         "@humanwhocodes/module-importer": "^1.0.1",
4060 |         "@humanwhocodes/retry": "^0.4.2",
4061 |         "@types/estree": "^1.0.6",
4062 |         "@types/json-schema": "^7.0.15",
4063 |         "ajv": "^6.12.4",
4064 |         "chalk": "^4.0.0",
4065 |         "cross-spawn": "^7.0.6",
4066 |         "debug": "^4.3.2",
4067 |         "escape-string-regexp": "^4.0.0",
4068 |         "eslint-scope": "^8.4.0",
4069 |         "eslint-visitor-keys": "^4.2.1",
4070 |         "espree": "^10.4.0",
4071 |         "esquery": "^1.5.0",
4072 |         "esutils": "^2.0.2",
4073 |         "fast-deep-equal": "^3.1.3",
4074 |         "file-entry-cache": "^8.0.0",
4075 |         "find-up": "^5.0.0",
4076 |         "glob-parent": "^6.0.2",
4077 |         "ignore": "^5.2.0",
4078 |         "imurmurhash": "^0.1.4",
4079 |         "is-glob": "^4.0.0",
4080 |         "json-stable-stringify-without-jsonify": "^1.0.1",
4081 |         "lodash.merge": "^4.6.2",
4082 |         "minimatch": "^3.1.2",
4083 |         "natural-compare": "^1.4.0",
4084 |         "optionator": "^0.9.3"
4085 |       },
4086 |       "bin": {
4087 |         "eslint": "bin/eslint.js"
4088 |       },
4089 |       "engines": {
4090 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
4091 |       },
4092 |       "funding": {
4093 |         "url": "https://eslint.org/donate"
4094 |       },
4095 |       "peerDependencies": {
4096 |         "jiti": "*"
4097 |       },
4098 |       "peerDependenciesMeta": {
4099 |         "jiti": {
4100 |           "optional": true
4101 |         }
4102 |       }
4103 |     },
4104 |     "node_modules/eslint-plugin-react-hooks": {
4105 |       "version": "5.2.0",
4106 |       "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz",
4107 |       "integrity": "sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==",
4108 |       "dev": true,
4109 |       "license": "MIT",
4110 |       "engines": {
4111 |         "node": ">=10"
4112 |       },
4113 |       "peerDependencies": {
4114 |         "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0"
4115 |       }
4116 |     },
4117 |     "node_modules/eslint-plugin-react-refresh": {
4118 |       "version": "0.4.20",
4119 |       "resolved": "https://registry.npmjs.org/eslint-plugin-react-refresh/-/eslint-plugin-react-refresh-0.4.20.tgz",
4120 |       "integrity": "sha512-XpbHQ2q5gUF8BGOX4dHe+71qoirYMhApEPZ7sfhF/dNnOF1UXnCMGZf79SFTBO7Bz5YEIT4TMieSlJBWhP9WBA==",
4121 |       "dev": true,
4122 |       "license": "MIT",
4123 |       "peerDependencies": {
4124 |         "eslint": ">=8.40"
4125 |       }
4126 |     },
4127 |     "node_modules/eslint-scope": {
4128 |       "version": "8.4.0",
4129 |       "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgz",
4130 |       "integrity": "sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==",
4131 |       "dev": true,
4132 |       "license": "BSD-2-Clause",
4133 |       "dependencies": {
4134 |         "esrecurse": "^4.3.0",
4135 |         "estraverse": "^5.2.0"
4136 |       },
4137 |       "engines": {
4138 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
4139 |       },
4140 |       "funding": {
4141 |         "url": "https://opencollective.com/eslint"
4142 |       }
4143 |     },
4144 |     "node_modules/eslint-visitor-keys": {
4145 |       "version": "4.2.1",
4146 |       "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
4147 |       "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
4148 |       "dev": true,
4149 |       "license": "Apache-2.0",
4150 |       "engines": {
4151 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
4152 |       },
4153 |       "funding": {
4154 |         "url": "https://opencollective.com/eslint"
4155 |       }
4156 |     },
4157 |     "node_modules/espree": {
4158 |       "version": "10.4.0",
4159 |       "resolved": "https://registry.npmjs.org/espree/-/espree-10.4.0.tgz",
4160 |       "integrity": "sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==",
4161 |       "dev": true,
4162 |       "license": "BSD-2-Clause",
4163 |       "dependencies": {
4164 |         "acorn": "^8.15.0",
4165 |         "acorn-jsx": "^5.3.2",
4166 |         "eslint-visitor-keys": "^4.2.1"
4167 |       },
4168 |       "engines": {
4169 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
4170 |       },
4171 |       "funding": {
4172 |         "url": "https://opencollective.com/eslint"
4173 |       }
4174 |     },
4175 |     "node_modules/esquery": {
4176 |       "version": "1.6.0",
4177 |       "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
4178 |       "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
4179 |       "dev": true,
4180 |       "license": "BSD-3-Clause",
4181 |       "dependencies": {
4182 |         "estraverse": "^5.1.0"
4183 |       },
4184 |       "engines": {
4185 |         "node": ">=0.10"
4186 |       }
4187 |     },
4188 |     "node_modules/esrecurse": {
4189 |       "version": "4.3.0",
4190 |       "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
4191 |       "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
4192 |       "dev": true,
4193 |       "license": "BSD-2-Clause",
4194 |       "dependencies": {
4195 |         "estraverse": "^5.2.0"
4196 |       },
4197 |       "engines": {
4198 |         "node": ">=4.0"
4199 |       }
4200 |     },
4201 |     "node_modules/estraverse": {
4202 |       "version": "5.3.0",
4203 |       "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
4204 |       "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
4205 |       "dev": true,
4206 |       "license": "BSD-2-Clause",
4207 |       "engines": {
4208 |         "node": ">=4.0"
4209 |       }
4210 |     },
4211 |     "node_modules/estree-walker": {
4212 |       "version": "3.0.3",
4213 |       "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz",
4214 |       "integrity": "sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==",
4215 |       "dev": true,
4216 |       "license": "MIT",
4217 |       "dependencies": {
4218 |         "@types/estree": "^1.0.0"
4219 |       }
4220 |     },
4221 |     "node_modules/esutils": {
4222 |       "version": "2.0.3",
4223 |       "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
4224 |       "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
4225 |       "dev": true,
4226 |       "license": "BSD-2-Clause",
4227 |       "engines": {
4228 |         "node": ">=0.10.0"
4229 |       }
4230 |     },
4231 |     "node_modules/eventemitter3": {
4232 |       "version": "4.0.7",
4233 |       "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz",
4234 |       "integrity": "sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==",
4235 |       "license": "MIT"
4236 |     },
4237 |     "node_modules/fast-deep-equal": {
4238 |       "version": "3.1.3",
4239 |       "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
4240 |       "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
4241 |       "dev": true,
4242 |       "license": "MIT"
4243 |     },
4244 |     "node_modules/fast-equals": {
4245 |       "version": "5.2.2",
4246 |       "resolved": "https://registry.npmjs.org/fast-equals/-/fast-equals-5.2.2.tgz",
4247 |       "integrity": "sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==",
4248 |       "license": "MIT",
4249 |       "engines": {
4250 |         "node": ">=6.0.0"
4251 |       }
4252 |     },
4253 |     "node_modules/fast-glob": {
4254 |       "version": "3.3.2",
4255 |       "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz",
4256 |       "integrity": "sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==",
4257 |       "license": "MIT",
4258 |       "dependencies": {
4259 |         "@nodelib/fs.stat": "^2.0.2",
4260 |         "@nodelib/fs.walk": "^1.2.3",
4261 |         "glob-parent": "^5.1.2",
4262 |         "merge2": "^1.3.0",
4263 |         "micromatch": "^4.0.4"
4264 |       },
4265 |       "engines": {
4266 |         "node": ">=8.6.0"
4267 |       }
4268 |     },
4269 |     "node_modules/fast-glob/node_modules/glob-parent": {
4270 |       "version": "5.1.2",
4271 |       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
4272 |       "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
4273 |       "license": "ISC",
4274 |       "dependencies": {
4275 |         "is-glob": "^4.0.1"
4276 |       },
4277 |       "engines": {
4278 |         "node": ">= 6"
4279 |       }
4280 |     },
4281 |     "node_modules/fast-json-stable-stringify": {
4282 |       "version": "2.1.0",
4283 |       "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
4284 |       "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
4285 |       "dev": true,
4286 |       "license": "MIT"
4287 |     },
4288 |     "node_modules/fast-levenshtein": {
4289 |       "version": "2.0.6",
4290 |       "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
4291 |       "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
4292 |       "dev": true,
4293 |       "license": "MIT"
4294 |     },
4295 |     "node_modules/fastq": {
4296 |       "version": "1.17.1",
4297 |       "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.17.1.tgz",
4298 |       "integrity": "sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==",
4299 |       "license": "ISC",
4300 |       "dependencies": {
4301 |         "reusify": "^1.0.4"
4302 |       }
4303 |     },
4304 |     "node_modules/file-entry-cache": {
4305 |       "version": "8.0.0",
4306 |       "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
4307 |       "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
4308 |       "dev": true,
4309 |       "license": "MIT",
4310 |       "dependencies": {
4311 |         "flat-cache": "^4.0.0"
4312 |       },
4313 |       "engines": {
4314 |         "node": ">=16.0.0"
4315 |       }
4316 |     },
4317 |     "node_modules/fill-range": {
4318 |       "version": "7.1.1",
4319 |       "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
4320 |       "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
4321 |       "license": "MIT",
4322 |       "dependencies": {
4323 |         "to-regex-range": "^5.0.1"
4324 |       },
4325 |       "engines": {
4326 |         "node": ">=8"
4327 |       }
4328 |     },
4329 |     "node_modules/find-up": {
4330 |       "version": "5.0.0",
4331 |       "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
4332 |       "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
4333 |       "dev": true,
4334 |       "license": "MIT",
4335 |       "dependencies": {
4336 |         "locate-path": "^6.0.0",
4337 |         "path-exists": "^4.0.0"
4338 |       },
4339 |       "engines": {
4340 |         "node": ">=10"
4341 |       },
4342 |       "funding": {
4343 |         "url": "https://github.com/sponsors/sindresorhus"
4344 |       }
4345 |     },
4346 |     "node_modules/flat-cache": {
4347 |       "version": "4.0.1",
4348 |       "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
4349 |       "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
4350 |       "dev": true,
4351 |       "license": "MIT",
4352 |       "dependencies": {
4353 |         "flatted": "^3.2.9",
4354 |         "keyv": "^4.5.4"
4355 |       },
4356 |       "engines": {
4357 |         "node": ">=16"
4358 |       }
4359 |     },
4360 |     "node_modules/flatted": {
4361 |       "version": "3.3.1",
4362 |       "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.1.tgz",
4363 |       "integrity": "sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==",
4364 |       "dev": true,
4365 |       "license": "ISC"
4366 |     },
4367 |     "node_modules/follow-redirects": {
4368 |       "version": "1.15.11",
4369 |       "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.11.tgz",
4370 |       "integrity": "sha512-deG2P0JfjrTxl50XGCDyfI97ZGVCxIpfKYmfyrQ54n5FO/0gfIES8C/Psl6kWVDolizcaaxZJnTS0QSMxvnsBQ==",
4371 |       "funding": [
4372 |         {
4373 |           "type": "individual",
4374 |           "url": "https://github.com/sponsors/RubenVerborgh"
4375 |         }
4376 |       ],
4377 |       "license": "MIT",
4378 |       "engines": {
4379 |         "node": ">=4.0"
4380 |       },
4381 |       "peerDependenciesMeta": {
4382 |         "debug": {
4383 |           "optional": true
4384 |         }
4385 |       }
4386 |     },
4387 |     "node_modules/foreground-child": {
4388 |       "version": "3.3.0",
4389 |       "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.0.tgz",
4390 |       "integrity": "sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==",
4391 |       "license": "ISC",
4392 |       "dependencies": {
4393 |         "cross-spawn": "^7.0.0",
4394 |         "signal-exit": "^4.0.1"
4395 |       },
4396 |       "engines": {
4397 |         "node": ">=14"
4398 |       },
4399 |       "funding": {
4400 |         "url": "https://github.com/sponsors/isaacs"
4401 |       }
4402 |     },
4403 |     "node_modules/form-data": {
4404 |       "version": "4.0.4",
4405 |       "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz",
4406 |       "integrity": "sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==",
4407 |       "license": "MIT",
4408 |       "dependencies": {
4409 |         "asynckit": "^0.4.0",
4410 |         "combined-stream": "^1.0.8",
4411 |         "es-set-tostringtag": "^2.1.0",
4412 |         "hasown": "^2.0.2",
4413 |         "mime-types": "^2.1.12"
4414 |       },
4415 |       "engines": {
4416 |         "node": ">= 6"
4417 |       }
4418 |     },
4419 |     "node_modules/fraction.js": {
4420 |       "version": "4.3.7",
4421 |       "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
4422 |       "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
4423 |       "dev": true,
4424 |       "license": "MIT",
4425 |       "engines": {
4426 |         "node": "*"
4427 |       },
4428 |       "funding": {
4429 |         "type": "patreon",
4430 |         "url": "https://github.com/sponsors/rawify"
4431 |       }
4432 |     },
4433 |     "node_modules/fsevents": {
4434 |       "version": "2.3.3",
4435 |       "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
4436 |       "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
4437 |       "hasInstallScript": true,
4438 |       "license": "MIT",
4439 |       "optional": true,
4440 |       "os": [
4441 |         "darwin"
4442 |       ],
4443 |       "engines": {
4444 |         "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
4445 |       }
4446 |     },
4447 |     "node_modules/function-bind": {
4448 |       "version": "1.1.2",
4449 |       "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
4450 |       "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
4451 |       "license": "MIT",
4452 |       "funding": {
4453 |         "url": "https://github.com/sponsors/ljharb"
4454 |       }
4455 |     },
4456 |     "node_modules/get-intrinsic": {
4457 |       "version": "1.3.0",
4458 |       "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
4459 |       "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
4460 |       "license": "MIT",
4461 |       "dependencies": {
4462 |         "call-bind-apply-helpers": "^1.0.2",
4463 |         "es-define-property": "^1.0.1",
4464 |         "es-errors": "^1.3.0",
4465 |         "es-object-atoms": "^1.1.1",
4466 |         "function-bind": "^1.1.2",
4467 |         "get-proto": "^1.0.1",
4468 |         "gopd": "^1.2.0",
4469 |         "has-symbols": "^1.1.0",
4470 |         "hasown": "^2.0.2",
4471 |         "math-intrinsics": "^1.1.0"
4472 |       },
4473 |       "engines": {
4474 |         "node": ">= 0.4"
4475 |       },
4476 |       "funding": {
4477 |         "url": "https://github.com/sponsors/ljharb"
4478 |       }
4479 |     },
4480 |     "node_modules/get-nonce": {
4481 |       "version": "1.0.1",
4482 |       "resolved": "https://registry.npmjs.org/get-nonce/-/get-nonce-1.0.1.tgz",
4483 |       "integrity": "sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==",
4484 |       "license": "MIT",
4485 |       "engines": {
4486 |         "node": ">=6"
4487 |       }
4488 |     },
4489 |     "node_modules/get-proto": {
4490 |       "version": "1.0.1",
4491 |       "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
4492 |       "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
4493 |       "license": "MIT",
4494 |       "dependencies": {
4495 |         "dunder-proto": "^1.0.1",
4496 |         "es-object-atoms": "^1.0.0"
4497 |       },
4498 |       "engines": {
4499 |         "node": ">= 0.4"
4500 |       }
4501 |     },
4502 |     "node_modules/glob": {
4503 |       "version": "10.4.5",
4504 |       "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
4505 |       "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
4506 |       "license": "ISC",
4507 |       "dependencies": {
4508 |         "foreground-child": "^3.1.0",
4509 |         "jackspeak": "^3.1.2",
4510 |         "minimatch": "^9.0.4",
4511 |         "minipass": "^7.1.2",
4512 |         "package-json-from-dist": "^1.0.0",
4513 |         "path-scurry": "^1.11.1"
4514 |       },
4515 |       "bin": {
4516 |         "glob": "dist/esm/bin.mjs"
4517 |       },
4518 |       "funding": {
4519 |         "url": "https://github.com/sponsors/isaacs"
4520 |       }
4521 |     },
4522 |     "node_modules/glob-parent": {
4523 |       "version": "6.0.2",
4524 |       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
4525 |       "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
4526 |       "license": "ISC",
4527 |       "dependencies": {
4528 |         "is-glob": "^4.0.3"
4529 |       },
4530 |       "engines": {
4531 |         "node": ">=10.13.0"
4532 |       }
4533 |     },
4534 |     "node_modules/glob/node_modules/brace-expansion": {
4535 |       "version": "2.0.2",
4536 |       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
4537 |       "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
4538 |       "license": "MIT",
4539 |       "dependencies": {
4540 |         "balanced-match": "^1.0.0"
4541 |       }
4542 |     },
4543 |     "node_modules/glob/node_modules/minimatch": {
4544 |       "version": "9.0.5",
4545 |       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
4546 |       "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
4547 |       "license": "ISC",
4548 |       "dependencies": {
4549 |         "brace-expansion": "^2.0.1"
4550 |       },
4551 |       "engines": {
4552 |         "node": ">=16 || 14 >=14.17"
4553 |       },
4554 |       "funding": {
4555 |         "url": "https://github.com/sponsors/isaacs"
4556 |       }
4557 |     },
4558 |     "node_modules/globals": {
4559 |       "version": "15.15.0",
4560 |       "resolved": "https://registry.npmjs.org/globals/-/globals-15.15.0.tgz",
4561 |       "integrity": "sha512-7ACyT3wmyp3I61S4fG682L0VA2RGD9otkqGJIwNUMF1SWUombIIk+af1unuDYgMm082aHYwD+mzJvv9Iu8dsgg==",
4562 |       "dev": true,
4563 |       "license": "MIT",
4564 |       "engines": {
4565 |         "node": ">=18"
4566 |       },
4567 |       "funding": {
4568 |         "url": "https://github.com/sponsors/sindresorhus"
4569 |       }
4570 |     },
4571 |     "node_modules/gopd": {
4572 |       "version": "1.2.0",
4573 |       "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
4574 |       "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
4575 |       "license": "MIT",
4576 |       "engines": {
4577 |         "node": ">= 0.4"
4578 |       },
4579 |       "funding": {
4580 |         "url": "https://github.com/sponsors/ljharb"
4581 |       }
4582 |     },
4583 |     "node_modules/graphemer": {
4584 |       "version": "1.4.0",
4585 |       "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
4586 |       "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
4587 |       "dev": true,
4588 |       "license": "MIT"
4589 |     },
4590 |     "node_modules/has-flag": {
4591 |       "version": "4.0.0",
4592 |       "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
4593 |       "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
4594 |       "dev": true,
4595 |       "license": "MIT",
4596 |       "engines": {
4597 |         "node": ">=8"
4598 |       }
4599 |     },
4600 |     "node_modules/has-symbols": {
4601 |       "version": "1.1.0",
4602 |       "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
4603 |       "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
4604 |       "license": "MIT",
4605 |       "engines": {
4606 |         "node": ">= 0.4"
4607 |       },
4608 |       "funding": {
4609 |         "url": "https://github.com/sponsors/ljharb"
4610 |       }
4611 |     },
4612 |     "node_modules/has-tostringtag": {
4613 |       "version": "1.0.2",
4614 |       "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
4615 |       "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
4616 |       "license": "MIT",
4617 |       "dependencies": {
4618 |         "has-symbols": "^1.0.3"
4619 |       },
4620 |       "engines": {
4621 |         "node": ">= 0.4"
4622 |       },
4623 |       "funding": {
4624 |         "url": "https://github.com/sponsors/ljharb"
4625 |       }
4626 |     },
4627 |     "node_modules/hasown": {
4628 |       "version": "2.0.2",
4629 |       "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
4630 |       "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
4631 |       "license": "MIT",
4632 |       "dependencies": {
4633 |         "function-bind": "^1.1.2"
4634 |       },
4635 |       "engines": {
4636 |         "node": ">= 0.4"
4637 |       }
4638 |     },
4639 |     "node_modules/ignore": {
4640 |       "version": "5.3.2",
4641 |       "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
4642 |       "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
4643 |       "dev": true,
4644 |       "license": "MIT",
4645 |       "engines": {
4646 |         "node": ">= 4"
4647 |       }
4648 |     },
4649 |     "node_modules/import-fresh": {
4650 |       "version": "3.3.1",
4651 |       "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
4652 |       "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
4653 |       "dev": true,
4654 |       "license": "MIT",
4655 |       "dependencies": {
4656 |         "parent-module": "^1.0.0",
4657 |         "resolve-from": "^4.0.0"
4658 |       },
4659 |       "engines": {
4660 |         "node": ">=6"
4661 |       },
4662 |       "funding": {
4663 |         "url": "https://github.com/sponsors/sindresorhus"
4664 |       }
4665 |     },
4666 |     "node_modules/imurmurhash": {
4667 |       "version": "0.1.4",
4668 |       "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
4669 |       "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
4670 |       "dev": true,
4671 |       "license": "MIT",
4672 |       "engines": {
4673 |         "node": ">=0.8.19"
4674 |       }
4675 |     },
4676 |     "node_modules/input-otp": {
4677 |       "version": "1.4.2",
4678 |       "resolved": "https://registry.npmjs.org/input-otp/-/input-otp-1.4.2.tgz",
4679 |       "integrity": "sha512-l3jWwYNvrEa6NTCt7BECfCm48GvwuZzkoeG3gBL2w4CHeOXW3eKFmf9UNYkNfYc3mxMrthMnxjIE07MT0zLBQA==",
4680 |       "license": "MIT",
4681 |       "peerDependencies": {
4682 |         "react": "^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc",
4683 |         "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc"
4684 |       }
4685 |     },
4686 |     "node_modules/internmap": {
4687 |       "version": "2.0.3",
4688 |       "resolved": "https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz",
4689 |       "integrity": "sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==",
4690 |       "license": "ISC",
4691 |       "engines": {
4692 |         "node": ">=12"
4693 |       }
4694 |     },
4695 |     "node_modules/is-binary-path": {
4696 |       "version": "2.1.0",
4697 |       "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
4698 |       "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
4699 |       "license": "MIT",
4700 |       "dependencies": {
4701 |         "binary-extensions": "^2.0.0"
4702 |       },
4703 |       "engines": {
4704 |         "node": ">=8"
4705 |       }
4706 |     },
4707 |     "node_modules/is-core-module": {
4708 |       "version": "2.15.1",
4709 |       "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.15.1.tgz",
4710 |       "integrity": "sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==",
4711 |       "license": "MIT",
4712 |       "dependencies": {
4713 |         "hasown": "^2.0.2"
4714 |       },
4715 |       "engines": {
4716 |         "node": ">= 0.4"
4717 |       },
4718 |       "funding": {
4719 |         "url": "https://github.com/sponsors/ljharb"
4720 |       }
4721 |     },
4722 |     "node_modules/is-extglob": {
4723 |       "version": "2.1.1",
4724 |       "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
4725 |       "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
4726 |       "license": "MIT",
4727 |       "engines": {
4728 |         "node": ">=0.10.0"
4729 |       }
4730 |     },
4731 |     "node_modules/is-fullwidth-code-point": {
4732 |       "version": "3.0.0",
4733 |       "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
4734 |       "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
4735 |       "license": "MIT",
4736 |       "engines": {
4737 |         "node": ">=8"
4738 |       }
4739 |     },
4740 |     "node_modules/is-glob": {
4741 |       "version": "4.0.3",
4742 |       "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
4743 |       "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
4744 |       "license": "MIT",
4745 |       "dependencies": {
4746 |         "is-extglob": "^2.1.1"
4747 |       },
4748 |       "engines": {
4749 |         "node": ">=0.10.0"
4750 |       }
4751 |     },
4752 |     "node_modules/is-number": {
4753 |       "version": "7.0.0",
4754 |       "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
4755 |       "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
4756 |       "license": "MIT",
4757 |       "engines": {
4758 |         "node": ">=0.12.0"
4759 |       }
4760 |     },
4761 |     "node_modules/isexe": {
4762 |       "version": "2.0.0",
4763 |       "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
4764 |       "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
4765 |       "license": "ISC"
4766 |     },
4767 |     "node_modules/jackspeak": {
4768 |       "version": "3.4.3",
4769 |       "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
4770 |       "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
4771 |       "license": "BlueOak-1.0.0",
4772 |       "dependencies": {
4773 |         "@isaacs/cliui": "^8.0.2"
4774 |       },
4775 |       "funding": {
4776 |         "url": "https://github.com/sponsors/isaacs"
4777 |       },
4778 |       "optionalDependencies": {
4779 |         "@pkgjs/parseargs": "^0.11.0"
4780 |       }
4781 |     },
4782 |     "node_modules/jiti": {
4783 |       "version": "1.21.6",
4784 |       "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.6.tgz",
4785 |       "integrity": "sha512-2yTgeWTWzMWkHu6Jp9NKgePDaYHbntiwvYuuJLbbN9vl7DC9DvXKOB2BC3ZZ92D3cvV/aflH0osDfwpHepQ53w==",
4786 |       "license": "MIT",
4787 |       "bin": {
4788 |         "jiti": "bin/jiti.js"
4789 |       }
4790 |     },
4791 |     "node_modules/js-tokens": {
4792 |       "version": "4.0.0",
4793 |       "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
4794 |       "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
4795 |       "license": "MIT"
4796 |     },
4797 |     "node_modules/js-yaml": {
4798 |       "version": "4.1.0",
4799 |       "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
4800 |       "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
4801 |       "dev": true,
4802 |       "license": "MIT",
4803 |       "dependencies": {
4804 |         "argparse": "^2.0.1"
4805 |       },
4806 |       "bin": {
4807 |         "js-yaml": "bin/js-yaml.js"
4808 |       }
4809 |     },
4810 |     "node_modules/json-buffer": {
4811 |       "version": "3.0.1",
4812 |       "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
4813 |       "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
4814 |       "dev": true,
4815 |       "license": "MIT"
4816 |     },
4817 |     "node_modules/json-schema-traverse": {
4818 |       "version": "0.4.1",
4819 |       "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
4820 |       "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
4821 |       "dev": true,
4822 |       "license": "MIT"
4823 |     },
4824 |     "node_modules/json-stable-stringify-without-jsonify": {
4825 |       "version": "1.0.1",
4826 |       "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
4827 |       "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
4828 |       "dev": true,
4829 |       "license": "MIT"
4830 |     },
4831 |     "node_modules/keyv": {
4832 |       "version": "4.5.4",
4833 |       "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
4834 |       "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
4835 |       "dev": true,
4836 |       "license": "MIT",
4837 |       "dependencies": {
4838 |         "json-buffer": "3.0.1"
4839 |       }
4840 |     },
4841 |     "node_modules/levn": {
4842 |       "version": "0.4.1",
4843 |       "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
4844 |       "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
4845 |       "dev": true,
4846 |       "license": "MIT",
4847 |       "dependencies": {
4848 |         "prelude-ls": "^1.2.1",
4849 |         "type-check": "~0.4.0"
4850 |       },
4851 |       "engines": {
4852 |         "node": ">= 0.8.0"
4853 |       }
4854 |     },
4855 |     "node_modules/lilconfig": {
4856 |       "version": "3.1.3",
4857 |       "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
4858 |       "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
4859 |       "license": "MIT",
4860 |       "engines": {
4861 |         "node": ">=14"
4862 |       },
4863 |       "funding": {
4864 |         "url": "https://github.com/sponsors/antonk52"
4865 |       }
4866 |     },
4867 |     "node_modules/lines-and-columns": {
4868 |       "version": "1.2.4",
4869 |       "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
4870 |       "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
4871 |       "license": "MIT"
4872 |     },
4873 |     "node_modules/locate-path": {
4874 |       "version": "6.0.0",
4875 |       "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
4876 |       "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
4877 |       "dev": true,
4878 |       "license": "MIT",
4879 |       "dependencies": {
4880 |         "p-locate": "^5.0.0"
4881 |       },
4882 |       "engines": {
4883 |         "node": ">=10"
4884 |       },
4885 |       "funding": {
4886 |         "url": "https://github.com/sponsors/sindresorhus"
4887 |       }
4888 |     },
4889 |     "node_modules/lodash": {
4890 |       "version": "4.17.21",
4891 |       "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
4892 |       "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
4893 |       "license": "MIT"
4894 |     },
4895 |     "node_modules/lodash.castarray": {
4896 |       "version": "4.4.0",
4897 |       "resolved": "https://registry.npmjs.org/lodash.castarray/-/lodash.castarray-4.4.0.tgz",
4898 |       "integrity": "sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==",
4899 |       "dev": true
4900 |     },
4901 |     "node_modules/lodash.isplainobject": {
4902 |       "version": "4.0.6",
4903 |       "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
4904 |       "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
4905 |       "dev": true
4906 |     },
4907 |     "node_modules/lodash.merge": {
4908 |       "version": "4.6.2",
4909 |       "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
4910 |       "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
4911 |       "dev": true,
4912 |       "license": "MIT"
4913 |     },
4914 |     "node_modules/loose-envify": {
4915 |       "version": "1.4.0",
4916 |       "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
4917 |       "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
4918 |       "license": "MIT",
4919 |       "dependencies": {
4920 |         "js-tokens": "^3.0.0 || ^4.0.0"
4921 |       },
4922 |       "bin": {
4923 |         "loose-envify": "cli.js"
4924 |       }
4925 |     },
4926 |     "node_modules/lovable-tagger": {
4927 |       "version": "1.1.9",
4928 |       "resolved": "https://registry.npmjs.org/lovable-tagger/-/lovable-tagger-1.1.9.tgz",
4929 |       "integrity": "sha512-Y1KyTYKu9H8RTiRTmKnbQvlO5qEEgsszCiMDSh1onTAdgSuLZRFdiuRxj8JN2zQNt/nMoi6R2414JfstM/s1ig==",
4930 |       "dev": true,
4931 |       "license": "MIT",
4932 |       "dependencies": {
4933 |         "@babel/parser": "^7.25.9",
4934 |         "@babel/types": "^7.25.8",
4935 |         "esbuild": "^0.25.0",
4936 |         "estree-walker": "^3.0.3",
4937 |         "magic-string": "^0.30.12",
4938 |         "tailwindcss": "^3.4.17"
4939 |       },
4940 |       "peerDependencies": {
4941 |         "vite": "^5.0.0"
4942 |       }
4943 |     },
4944 |     "node_modules/lovable-tagger/node_modules/@esbuild/aix-ppc64": {
4945 |       "version": "0.25.0",
4946 |       "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.0.tgz",
4947 |       "integrity": "sha512-O7vun9Sf8DFjH2UtqK8Ku3LkquL9SZL8OLY1T5NZkA34+wG3OQF7cl4Ql8vdNzM6fzBbYfLaiRLIOZ+2FOCgBQ==",
4948 |       "cpu": [
4949 |         "ppc64"
4950 |       ],
4951 |       "dev": true,
4952 |       "license": "MIT",
4953 |       "optional": true,
4954 |       "os": [
4955 |         "aix"
4956 |       ],
4957 |       "engines": {
4958 |         "node": ">=18"
4959 |       }
4960 |     },
4961 |     "node_modules/lovable-tagger/node_modules/@esbuild/android-arm": {
4962 |       "version": "0.25.0",
4963 |       "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.0.tgz",
4964 |       "integrity": "sha512-PTyWCYYiU0+1eJKmw21lWtC+d08JDZPQ5g+kFyxP0V+es6VPPSUhM6zk8iImp2jbV6GwjX4pap0JFbUQN65X1g==",
4965 |       "cpu": [
4966 |         "arm"
4967 |       ],
4968 |       "dev": true,
4969 |       "license": "MIT",
4970 |       "optional": true,
4971 |       "os": [
4972 |         "android"
4973 |       ],
4974 |       "engines": {
4975 |         "node": ">=18"
4976 |       }
4977 |     },
4978 |     "node_modules/lovable-tagger/node_modules/@esbuild/android-arm64": {
4979 |       "version": "0.25.0",
4980 |       "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.0.tgz",
4981 |       "integrity": "sha512-grvv8WncGjDSyUBjN9yHXNt+cq0snxXbDxy5pJtzMKGmmpPxeAmAhWxXI+01lU5rwZomDgD3kJwulEnhTRUd6g==",
4982 |       "cpu": [
4983 |         "arm64"
4984 |       ],
4985 |       "dev": true,
4986 |       "license": "MIT",
4987 |       "optional": true,
4988 |       "os": [
4989 |         "android"
4990 |       ],
4991 |       "engines": {
4992 |         "node": ">=18"
4993 |       }
4994 |     },
4995 |     "node_modules/lovable-tagger/node_modules/@esbuild/android-x64": {
4996 |       "version": "0.25.0",
4997 |       "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.0.tgz",
4998 |       "integrity": "sha512-m/ix7SfKG5buCnxasr52+LI78SQ+wgdENi9CqyCXwjVR2X4Jkz+BpC3le3AoBPYTC9NHklwngVXvbJ9/Akhrfg==",
4999 |       "cpu": [
5000 |         "x64"
5001 |       ],
5002 |       "dev": true,
5003 |       "license": "MIT",
5004 |       "optional": true,
5005 |       "os": [
5006 |         "android"
5007 |       ],
5008 |       "engines": {
5009 |         "node": ">=18"
5010 |       }
5011 |     },
5012 |     "node_modules/lovable-tagger/node_modules/@esbuild/darwin-arm64": {
5013 |       "version": "0.25.0",
5014 |       "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.0.tgz",
5015 |       "integrity": "sha512-mVwdUb5SRkPayVadIOI78K7aAnPamoeFR2bT5nszFUZ9P8UpK4ratOdYbZZXYSqPKMHfS1wdHCJk1P1EZpRdvw==",
5016 |       "cpu": [
5017 |         "arm64"
5018 |       ],
5019 |       "dev": true,
5020 |       "license": "MIT",
5021 |       "optional": true,
5022 |       "os": [
5023 |         "darwin"
5024 |       ],
5025 |       "engines": {
5026 |         "node": ">=18"
5027 |       }
5028 |     },
5029 |     "node_modules/lovable-tagger/node_modules/@esbuild/darwin-x64": {
5030 |       "version": "0.25.0",
5031 |       "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.0.tgz",
5032 |       "integrity": "sha512-DgDaYsPWFTS4S3nWpFcMn/33ZZwAAeAFKNHNa1QN0rI4pUjgqf0f7ONmXf6d22tqTY+H9FNdgeaAa+YIFUn2Rg==",
5033 |       "cpu": [
5034 |         "x64"
5035 |       ],
5036 |       "dev": true,
5037 |       "license": "MIT",
5038 |       "optional": true,
5039 |       "os": [
5040 |         "darwin"
5041 |       ],
5042 |       "engines": {
5043 |         "node": ">=18"
5044 |       }
5045 |     },
5046 |     "node_modules/lovable-tagger/node_modules/@esbuild/freebsd-arm64": {
5047 |       "version": "0.25.0",
5048 |       "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.0.tgz",
5049 |       "integrity": "sha512-VN4ocxy6dxefN1MepBx/iD1dH5K8qNtNe227I0mnTRjry8tj5MRk4zprLEdG8WPyAPb93/e4pSgi1SoHdgOa4w==",
5050 |       "cpu": [
5051 |         "arm64"
5052 |       ],
5053 |       "dev": true,
5054 |       "license": "MIT",
5055 |       "optional": true,
5056 |       "os": [
5057 |         "freebsd"
5058 |       ],
5059 |       "engines": {
5060 |         "node": ">=18"
5061 |       }
5062 |     },
5063 |     "node_modules/lovable-tagger/node_modules/@esbuild/freebsd-x64": {
5064 |       "version": "0.25.0",
5065 |       "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.0.tgz",
5066 |       "integrity": "sha512-mrSgt7lCh07FY+hDD1TxiTyIHyttn6vnjesnPoVDNmDfOmggTLXRv8Id5fNZey1gl/V2dyVK1VXXqVsQIiAk+A==",
5067 |       "cpu": [
5068 |         "x64"
5069 |       ],
5070 |       "dev": true,
5071 |       "license": "MIT",
5072 |       "optional": true,
5073 |       "os": [
5074 |         "freebsd"
5075 |       ],
5076 |       "engines": {
5077 |         "node": ">=18"
5078 |       }
5079 |     },
5080 |     "node_modules/lovable-tagger/node_modules/@esbuild/linux-arm": {
5081 |       "version": "0.25.0",
5082 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.0.tgz",
5083 |       "integrity": "sha512-vkB3IYj2IDo3g9xX7HqhPYxVkNQe8qTK55fraQyTzTX/fxaDtXiEnavv9geOsonh2Fd2RMB+i5cbhu2zMNWJwg==",
5084 |       "cpu": [
5085 |         "arm"
5086 |       ],
5087 |       "dev": true,
5088 |       "license": "MIT",
5089 |       "optional": true,
5090 |       "os": [
5091 |         "linux"
5092 |       ],
5093 |       "engines": {
5094 |         "node": ">=18"
5095 |       }
5096 |     },
5097 |     "node_modules/lovable-tagger/node_modules/@esbuild/linux-arm64": {
5098 |       "version": "0.25.0",
5099 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.0.tgz",
5100 |       "integrity": "sha512-9QAQjTWNDM/Vk2bgBl17yWuZxZNQIF0OUUuPZRKoDtqF2k4EtYbpyiG5/Dk7nqeK6kIJWPYldkOcBqjXjrUlmg==",
5101 |       "cpu": [
5102 |         "arm64"
5103 |       ],
5104 |       "dev": true,
5105 |       "license": "MIT",
5106 |       "optional": true,
5107 |       "os": [
5108 |         "linux"
5109 |       ],
5110 |       "engines": {
5111 |         "node": ">=18"
5112 |       }
5113 |     },
5114 |     "node_modules/lovable-tagger/node_modules/@esbuild/linux-ia32": {
5115 |       "version": "0.25.0",
5116 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.0.tgz",
5117 |       "integrity": "sha512-43ET5bHbphBegyeqLb7I1eYn2P/JYGNmzzdidq/w0T8E2SsYL1U6un2NFROFRg1JZLTzdCoRomg8Rvf9M6W6Gg==",
5118 |       "cpu": [
5119 |         "ia32"
5120 |       ],
5121 |       "dev": true,
5122 |       "license": "MIT",
5123 |       "optional": true,
5124 |       "os": [
5125 |         "linux"
5126 |       ],
5127 |       "engines": {
5128 |         "node": ">=18"
5129 |       }
5130 |     },
5131 |     "node_modules/lovable-tagger/node_modules/@esbuild/linux-loong64": {
5132 |       "version": "0.25.0",
5133 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.0.tgz",
5134 |       "integrity": "sha512-fC95c/xyNFueMhClxJmeRIj2yrSMdDfmqJnyOY4ZqsALkDrrKJfIg5NTMSzVBr5YW1jf+l7/cndBfP3MSDpoHw==",
5135 |       "cpu": [
5136 |         "loong64"
5137 |       ],
5138 |       "dev": true,
5139 |       "license": "MIT",
5140 |       "optional": true,
5141 |       "os": [
5142 |         "linux"
5143 |       ],
5144 |       "engines": {
5145 |         "node": ">=18"
5146 |       }
5147 |     },
5148 |     "node_modules/lovable-tagger/node_modules/@esbuild/linux-mips64el": {
5149 |       "version": "0.25.0",
5150 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.0.tgz",
5151 |       "integrity": "sha512-nkAMFju7KDW73T1DdH7glcyIptm95a7Le8irTQNO/qtkoyypZAnjchQgooFUDQhNAy4iu08N79W4T4pMBwhPwQ==",
5152 |       "cpu": [
5153 |         "mips64el"
5154 |       ],
5155 |       "dev": true,
5156 |       "license": "MIT",
5157 |       "optional": true,
5158 |       "os": [
5159 |         "linux"
5160 |       ],
5161 |       "engines": {
5162 |         "node": ">=18"
5163 |       }
5164 |     },
5165 |     "node_modules/lovable-tagger/node_modules/@esbuild/linux-ppc64": {
5166 |       "version": "0.25.0",
5167 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.0.tgz",
5168 |       "integrity": "sha512-NhyOejdhRGS8Iwv+KKR2zTq2PpysF9XqY+Zk77vQHqNbo/PwZCzB5/h7VGuREZm1fixhs4Q/qWRSi5zmAiO4Fw==",
5169 |       "cpu": [
5170 |         "ppc64"
5171 |       ],
5172 |       "dev": true,
5173 |       "license": "MIT",
5174 |       "optional": true,
5175 |       "os": [
5176 |         "linux"
5177 |       ],
5178 |       "engines": {
5179 |         "node": ">=18"
5180 |       }
5181 |     },
5182 |     "node_modules/lovable-tagger/node_modules/@esbuild/linux-riscv64": {
5183 |       "version": "0.25.0",
5184 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.0.tgz",
5185 |       "integrity": "sha512-5S/rbP5OY+GHLC5qXp1y/Mx//e92L1YDqkiBbO9TQOvuFXM+iDqUNG5XopAnXoRH3FjIUDkeGcY1cgNvnXp/kA==",
5186 |       "cpu": [
5187 |         "riscv64"
5188 |       ],
5189 |       "dev": true,
5190 |       "license": "MIT",
5191 |       "optional": true,
5192 |       "os": [
5193 |         "linux"
5194 |       ],
5195 |       "engines": {
5196 |         "node": ">=18"
5197 |       }
5198 |     },
5199 |     "node_modules/lovable-tagger/node_modules/@esbuild/linux-s390x": {
5200 |       "version": "0.25.0",
5201 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.0.tgz",
5202 |       "integrity": "sha512-XM2BFsEBz0Fw37V0zU4CXfcfuACMrppsMFKdYY2WuTS3yi8O1nFOhil/xhKTmE1nPmVyvQJjJivgDT+xh8pXJA==",
5203 |       "cpu": [
5204 |         "s390x"
5205 |       ],
5206 |       "dev": true,
5207 |       "license": "MIT",
5208 |       "optional": true,
5209 |       "os": [
5210 |         "linux"
5211 |       ],
5212 |       "engines": {
5213 |         "node": ">=18"
5214 |       }
5215 |     },
5216 |     "node_modules/lovable-tagger/node_modules/@esbuild/linux-x64": {
5217 |       "version": "0.25.0",
5218 |       "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.0.tgz",
5219 |       "integrity": "sha512-9yl91rHw/cpwMCNytUDxwj2XjFpxML0y9HAOH9pNVQDpQrBxHy01Dx+vaMu0N1CKa/RzBD2hB4u//nfc+Sd3Cw==",
5220 |       "cpu": [
5221 |         "x64"
5222 |       ],
5223 |       "dev": true,
5224 |       "license": "MIT",
5225 |       "optional": true,
5226 |       "os": [
5227 |         "linux"
5228 |       ],
5229 |       "engines": {
5230 |         "node": ">=18"
5231 |       }
5232 |     },
5233 |     "node_modules/lovable-tagger/node_modules/@esbuild/netbsd-x64": {
5234 |       "version": "0.25.0",
5235 |       "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.0.tgz",
5236 |       "integrity": "sha512-jl+qisSB5jk01N5f7sPCsBENCOlPiS/xptD5yxOx2oqQfyourJwIKLRA2yqWdifj3owQZCL2sn6o08dBzZGQzA==",
5237 |       "cpu": [
5238 |         "x64"
5239 |       ],
5240 |       "dev": true,
5241 |       "license": "MIT",
5242 |       "optional": true,
5243 |       "os": [
5244 |         "netbsd"
5245 |       ],
5246 |       "engines": {
5247 |         "node": ">=18"
5248 |       }
5249 |     },
5250 |     "node_modules/lovable-tagger/node_modules/@esbuild/openbsd-x64": {
5251 |       "version": "0.25.0",
5252 |       "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.0.tgz",
5253 |       "integrity": "sha512-2gwwriSMPcCFRlPlKx3zLQhfN/2WjJ2NSlg5TKLQOJdV0mSxIcYNTMhk3H3ulL/cak+Xj0lY1Ym9ysDV1igceg==",
5254 |       "cpu": [
5255 |         "x64"
5256 |       ],
5257 |       "dev": true,
5258 |       "license": "MIT",
5259 |       "optional": true,
5260 |       "os": [
5261 |         "openbsd"
5262 |       ],
5263 |       "engines": {
5264 |         "node": ">=18"
5265 |       }
5266 |     },
5267 |     "node_modules/lovable-tagger/node_modules/@esbuild/sunos-x64": {
5268 |       "version": "0.25.0",
5269 |       "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.0.tgz",
5270 |       "integrity": "sha512-bxI7ThgLzPrPz484/S9jLlvUAHYMzy6I0XiU1ZMeAEOBcS0VePBFxh1JjTQt3Xiat5b6Oh4x7UC7IwKQKIJRIg==",
5271 |       "cpu": [
5272 |         "x64"
5273 |       ],
5274 |       "dev": true,
5275 |       "license": "MIT",
5276 |       "optional": true,
5277 |       "os": [
5278 |         "sunos"
5279 |       ],
5280 |       "engines": {
5281 |         "node": ">=18"
5282 |       }
5283 |     },
5284 |     "node_modules/lovable-tagger/node_modules/@esbuild/win32-arm64": {
5285 |       "version": "0.25.0",
5286 |       "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.0.tgz",
5287 |       "integrity": "sha512-ZUAc2YK6JW89xTbXvftxdnYy3m4iHIkDtK3CLce8wg8M2L+YZhIvO1DKpxrd0Yr59AeNNkTiic9YLf6FTtXWMw==",
5288 |       "cpu": [
5289 |         "arm64"
5290 |       ],
5291 |       "dev": true,
5292 |       "license": "MIT",
5293 |       "optional": true,
5294 |       "os": [
5295 |         "win32"
5296 |       ],
5297 |       "engines": {
5298 |         "node": ">=18"
5299 |       }
5300 |     },
5301 |     "node_modules/lovable-tagger/node_modules/@esbuild/win32-ia32": {
5302 |       "version": "0.25.0",
5303 |       "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.0.tgz",
5304 |       "integrity": "sha512-eSNxISBu8XweVEWG31/JzjkIGbGIJN/TrRoiSVZwZ6pkC6VX4Im/WV2cz559/TXLcYbcrDN8JtKgd9DJVIo8GA==",
5305 |       "cpu": [
5306 |         "ia32"
5307 |       ],
5308 |       "dev": true,
5309 |       "license": "MIT",
5310 |       "optional": true,
5311 |       "os": [
5312 |         "win32"
5313 |       ],
5314 |       "engines": {
5315 |         "node": ">=18"
5316 |       }
5317 |     },
5318 |     "node_modules/lovable-tagger/node_modules/@esbuild/win32-x64": {
5319 |       "version": "0.25.0",
5320 |       "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.0.tgz",
5321 |       "integrity": "sha512-ZENoHJBxA20C2zFzh6AI4fT6RraMzjYw4xKWemRTRmRVtN9c5DcH9r/f2ihEkMjOW5eGgrwCslG/+Y/3bL+DHQ==",
5322 |       "cpu": [
5323 |         "x64"
5324 |       ],
5325 |       "dev": true,
5326 |       "license": "MIT",
5327 |       "optional": true,
5328 |       "os": [
5329 |         "win32"
5330 |       ],
5331 |       "engines": {
5332 |         "node": ">=18"
5333 |       }
5334 |     },
5335 |     "node_modules/lovable-tagger/node_modules/esbuild": {
5336 |       "version": "0.25.0",
5337 |       "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.0.tgz",
5338 |       "integrity": "sha512-BXq5mqc8ltbaN34cDqWuYKyNhX8D/Z0J1xdtdQ8UcIIIyJyz+ZMKUt58tF3SrZ85jcfN/PZYhjR5uDQAYNVbuw==",
5339 |       "dev": true,
5340 |       "hasInstallScript": true,
5341 |       "license": "MIT",
5342 |       "bin": {
5343 |         "esbuild": "bin/esbuild"
5344 |       },
5345 |       "engines": {
5346 |         "node": ">=18"
5347 |       },
5348 |       "optionalDependencies": {
5349 |         "@esbuild/aix-ppc64": "0.25.0",
5350 |         "@esbuild/android-arm": "0.25.0",
5351 |         "@esbuild/android-arm64": "0.25.0",
5352 |         "@esbuild/android-x64": "0.25.0",
5353 |         "@esbuild/darwin-arm64": "0.25.0",
5354 |         "@esbuild/darwin-x64": "0.25.0",
5355 |         "@esbuild/freebsd-arm64": "0.25.0",
5356 |         "@esbuild/freebsd-x64": "0.25.0",
5357 |         "@esbuild/linux-arm": "0.25.0",
5358 |         "@esbuild/linux-arm64": "0.25.0",
5359 |         "@esbuild/linux-ia32": "0.25.0",
5360 |         "@esbuild/linux-loong64": "0.25.0",
5361 |         "@esbuild/linux-mips64el": "0.25.0",
5362 |         "@esbuild/linux-ppc64": "0.25.0",
5363 |         "@esbuild/linux-riscv64": "0.25.0",
5364 |         "@esbuild/linux-s390x": "0.25.0",
5365 |         "@esbuild/linux-x64": "0.25.0",
5366 |         "@esbuild/netbsd-arm64": "0.25.0",
5367 |         "@esbuild/netbsd-x64": "0.25.0",
5368 |         "@esbuild/openbsd-arm64": "0.25.0",
5369 |         "@esbuild/openbsd-x64": "0.25.0",
5370 |         "@esbuild/sunos-x64": "0.25.0",
5371 |         "@esbuild/win32-arm64": "0.25.0",
5372 |         "@esbuild/win32-ia32": "0.25.0",
5373 |         "@esbuild/win32-x64": "0.25.0"
5374 |       }
5375 |     },
5376 |     "node_modules/lru-cache": {
5377 |       "version": "10.4.3",
5378 |       "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
5379 |       "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
5380 |       "license": "ISC"
5381 |     },
5382 |     "node_modules/lucide-react": {
5383 |       "version": "0.462.0",
5384 |       "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.462.0.tgz",
5385 |       "integrity": "sha512-NTL7EbAao9IFtuSivSZgrAh4fZd09Lr+6MTkqIxuHaH2nnYiYIzXPo06cOxHg9wKLdj6LL8TByG4qpePqwgx/g==",
5386 |       "peerDependencies": {
5387 |         "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc"
5388 |       }
5389 |     },
5390 |     "node_modules/magic-string": {
5391 |       "version": "0.30.12",
5392 |       "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.12.tgz",
5393 |       "integrity": "sha512-Ea8I3sQMVXr8JhN4z+H/d8zwo+tYDgHE9+5G4Wnrwhs0gaK9fXTKx0Tw5Xwsd/bCPTTZNRAdpyzvoeORe9LYpw==",
5394 |       "dev": true,
5395 |       "license": "MIT",
5396 |       "dependencies": {
5397 |         "@jridgewell/sourcemap-codec": "^1.5.0"
5398 |       }
5399 |     },
5400 |     "node_modules/math-intrinsics": {
5401 |       "version": "1.1.0",
5402 |       "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
5403 |       "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
5404 |       "license": "MIT",
5405 |       "engines": {
5406 |         "node": ">= 0.4"
5407 |       }
5408 |     },
5409 |     "node_modules/merge2": {
5410 |       "version": "1.4.1",
5411 |       "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
5412 |       "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
5413 |       "license": "MIT",
5414 |       "engines": {
5415 |         "node": ">= 8"
5416 |       }
5417 |     },
5418 |     "node_modules/micromatch": {
5419 |       "version": "4.0.8",
5420 |       "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
5421 |       "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
5422 |       "license": "MIT",
5423 |       "dependencies": {
5424 |         "braces": "^3.0.3",
5425 |         "picomatch": "^2.3.1"
5426 |       },
5427 |       "engines": {
5428 |         "node": ">=8.6"
5429 |       }
5430 |     },
5431 |     "node_modules/mime-db": {
5432 |       "version": "1.52.0",
5433 |       "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
5434 |       "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
5435 |       "license": "MIT",
5436 |       "engines": {
5437 |         "node": ">= 0.6"
5438 |       }
5439 |     },
5440 |     "node_modules/mime-types": {
5441 |       "version": "2.1.35",
5442 |       "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
5443 |       "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
5444 |       "license": "MIT",
5445 |       "dependencies": {
5446 |         "mime-db": "1.52.0"
5447 |       },
5448 |       "engines": {
5449 |         "node": ">= 0.6"
5450 |       }
5451 |     },
5452 |     "node_modules/minimatch": {
5453 |       "version": "3.1.2",
5454 |       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
5455 |       "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
5456 |       "dev": true,
5457 |       "license": "ISC",
5458 |       "dependencies": {
5459 |         "brace-expansion": "^1.1.7"
5460 |       },
5461 |       "engines": {
5462 |         "node": "*"
5463 |       }
5464 |     },
5465 |     "node_modules/minipass": {
5466 |       "version": "7.1.2",
5467 |       "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
5468 |       "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
5469 |       "license": "ISC",
5470 |       "engines": {
5471 |         "node": ">=16 || 14 >=14.17"
5472 |       }
5473 |     },
5474 |     "node_modules/ms": {
5475 |       "version": "2.1.3",
5476 |       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
5477 |       "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
5478 |       "dev": true,
5479 |       "license": "MIT"
5480 |     },
5481 |     "node_modules/mz": {
5482 |       "version": "2.7.0",
5483 |       "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
5484 |       "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
5485 |       "license": "MIT",
5486 |       "dependencies": {
5487 |         "any-promise": "^1.0.0",
5488 |         "object-assign": "^4.0.1",
5489 |         "thenify-all": "^1.0.0"
5490 |       }
5491 |     },
5492 |     "node_modules/nanoid": {
5493 |       "version": "3.3.11",
5494 |       "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
5495 |       "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
5496 |       "funding": [
5497 |         {
5498 |           "type": "github",
5499 |           "url": "https://github.com/sponsors/ai"
5500 |         }
5501 |       ],
5502 |       "license": "MIT",
5503 |       "bin": {
5504 |         "nanoid": "bin/nanoid.cjs"
5505 |       },
5506 |       "engines": {
5507 |         "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
5508 |       }
5509 |     },
5510 |     "node_modules/natural-compare": {
5511 |       "version": "1.4.0",
5512 |       "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
5513 |       "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
5514 |       "dev": true,
5515 |       "license": "MIT"
5516 |     },
5517 |     "node_modules/next-themes": {
5518 |       "version": "0.3.0",
5519 |       "resolved": "https://registry.npmjs.org/next-themes/-/next-themes-0.3.0.tgz",
5520 |       "integrity": "sha512-/QHIrsYpd6Kfk7xakK4svpDI5mmXP0gfvCoJdGpZQ2TOrQZmsW0QxjaiLn8wbIKjtm4BTSqLoix4lxYYOnLJ/w==",
5521 |       "license": "MIT",
5522 |       "peerDependencies": {
5523 |         "react": "^16.8 || ^17 || ^18",
5524 |         "react-dom": "^16.8 || ^17 || ^18"
5525 |       }
5526 |     },
5527 |     "node_modules/node-releases": {
5528 |       "version": "2.0.19",
5529 |       "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
5530 |       "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
5531 |       "dev": true,
5532 |       "license": "MIT"
5533 |     },
5534 |     "node_modules/normalize-path": {
5535 |       "version": "3.0.0",
5536 |       "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
5537 |       "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
5538 |       "license": "MIT",
5539 |       "engines": {
5540 |         "node": ">=0.10.0"
5541 |       }
5542 |     },
5543 |     "node_modules/normalize-range": {
5544 |       "version": "0.1.2",
5545 |       "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
5546 |       "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
5547 |       "dev": true,
5548 |       "license": "MIT",
5549 |       "engines": {
5550 |         "node": ">=0.10.0"
5551 |       }
5552 |     },
5553 |     "node_modules/object-assign": {
5554 |       "version": "4.1.1",
5555 |       "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
5556 |       "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
5557 |       "license": "MIT",
5558 |       "engines": {
5559 |         "node": ">=0.10.0"
5560 |       }
5561 |     },
5562 |     "node_modules/object-hash": {
5563 |       "version": "3.0.0",
5564 |       "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
5565 |       "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
5566 |       "license": "MIT",
5567 |       "engines": {
5568 |         "node": ">= 6"
5569 |       }
5570 |     },
5571 |     "node_modules/optionator": {
5572 |       "version": "0.9.4",
5573 |       "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
5574 |       "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
5575 |       "dev": true,
5576 |       "license": "MIT",
5577 |       "dependencies": {
5578 |         "deep-is": "^0.1.3",
5579 |         "fast-levenshtein": "^2.0.6",
5580 |         "levn": "^0.4.1",
5581 |         "prelude-ls": "^1.2.1",
5582 |         "type-check": "^0.4.0",
5583 |         "word-wrap": "^1.2.5"
5584 |       },
5585 |       "engines": {
5586 |         "node": ">= 0.8.0"
5587 |       }
5588 |     },
5589 |     "node_modules/p-limit": {
5590 |       "version": "3.1.0",
5591 |       "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
5592 |       "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
5593 |       "dev": true,
5594 |       "license": "MIT",
5595 |       "dependencies": {
5596 |         "yocto-queue": "^0.1.0"
5597 |       },
5598 |       "engines": {
5599 |         "node": ">=10"
5600 |       },
5601 |       "funding": {
5602 |         "url": "https://github.com/sponsors/sindresorhus"
5603 |       }
5604 |     },
5605 |     "node_modules/p-locate": {
5606 |       "version": "5.0.0",
5607 |       "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
5608 |       "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
5609 |       "dev": true,
5610 |       "license": "MIT",
5611 |       "dependencies": {
5612 |         "p-limit": "^3.0.2"
5613 |       },
5614 |       "engines": {
5615 |         "node": ">=10"
5616 |       },
5617 |       "funding": {
5618 |         "url": "https://github.com/sponsors/sindresorhus"
5619 |       }
5620 |     },
5621 |     "node_modules/package-json-from-dist": {
5622 |       "version": "1.0.1",
5623 |       "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
5624 |       "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
5625 |       "license": "BlueOak-1.0.0"
5626 |     },
5627 |     "node_modules/parent-module": {
5628 |       "version": "1.0.1",
5629 |       "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
5630 |       "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
5631 |       "dev": true,
5632 |       "license": "MIT",
5633 |       "dependencies": {
5634 |         "callsites": "^3.0.0"
5635 |       },
5636 |       "engines": {
5637 |         "node": ">=6"
5638 |       }
5639 |     },
5640 |     "node_modules/path-exists": {
5641 |       "version": "4.0.0",
5642 |       "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
5643 |       "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
5644 |       "dev": true,
5645 |       "license": "MIT",
5646 |       "engines": {
5647 |         "node": ">=8"
5648 |       }
5649 |     },
5650 |     "node_modules/path-key": {
5651 |       "version": "3.1.1",
5652 |       "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
5653 |       "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
5654 |       "license": "MIT",
5655 |       "engines": {
5656 |         "node": ">=8"
5657 |       }
5658 |     },
5659 |     "node_modules/path-parse": {
5660 |       "version": "1.0.7",
5661 |       "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
5662 |       "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
5663 |       "license": "MIT"
5664 |     },
5665 |     "node_modules/path-scurry": {
5666 |       "version": "1.11.1",
5667 |       "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
5668 |       "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
5669 |       "license": "BlueOak-1.0.0",
5670 |       "dependencies": {
5671 |         "lru-cache": "^10.2.0",
5672 |         "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
5673 |       },
5674 |       "engines": {
5675 |         "node": ">=16 || 14 >=14.18"
5676 |       },
5677 |       "funding": {
5678 |         "url": "https://github.com/sponsors/isaacs"
5679 |       }
5680 |     },
5681 |     "node_modules/picocolors": {
5682 |       "version": "1.1.1",
5683 |       "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
5684 |       "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
5685 |       "license": "ISC"
5686 |     },
5687 |     "node_modules/picomatch": {
5688 |       "version": "2.3.1",
5689 |       "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
5690 |       "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
5691 |       "license": "MIT",
5692 |       "engines": {
5693 |         "node": ">=8.6"
5694 |       },
5695 |       "funding": {
5696 |         "url": "https://github.com/sponsors/jonschlinkert"
5697 |       }
5698 |     },
5699 |     "node_modules/pify": {
5700 |       "version": "2.3.0",
5701 |       "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
5702 |       "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
5703 |       "license": "MIT",
5704 |       "engines": {
5705 |         "node": ">=0.10.0"
5706 |       }
5707 |     },
5708 |     "node_modules/pirates": {
5709 |       "version": "4.0.6",
5710 |       "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.6.tgz",
5711 |       "integrity": "sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==",
5712 |       "license": "MIT",
5713 |       "engines": {
5714 |         "node": ">= 6"
5715 |       }
5716 |     },
5717 |     "node_modules/postcss": {
5718 |       "version": "8.5.6",
5719 |       "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
5720 |       "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
5721 |       "funding": [
5722 |         {
5723 |           "type": "opencollective",
5724 |           "url": "https://opencollective.com/postcss/"
5725 |         },
5726 |         {
5727 |           "type": "tidelift",
5728 |           "url": "https://tidelift.com/funding/github/npm/postcss"
5729 |         },
5730 |         {
5731 |           "type": "github",
5732 |           "url": "https://github.com/sponsors/ai"
5733 |         }
5734 |       ],
5735 |       "license": "MIT",
5736 |       "dependencies": {
5737 |         "nanoid": "^3.3.11",
5738 |         "picocolors": "^1.1.1",
5739 |         "source-map-js": "^1.2.1"
5740 |       },
5741 |       "engines": {
5742 |         "node": "^10 || ^12 || >=14"
5743 |       }
5744 |     },
5745 |     "node_modules/postcss-import": {
5746 |       "version": "15.1.0",
5747 |       "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
5748 |       "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
5749 |       "license": "MIT",
5750 |       "dependencies": {
5751 |         "postcss-value-parser": "^4.0.0",
5752 |         "read-cache": "^1.0.0",
5753 |         "resolve": "^1.1.7"
5754 |       },
5755 |       "engines": {
5756 |         "node": ">=14.0.0"
5757 |       },
5758 |       "peerDependencies": {
5759 |         "postcss": "^8.0.0"
5760 |       }
5761 |     },
5762 |     "node_modules/postcss-js": {
5763 |       "version": "4.0.1",
5764 |       "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
5765 |       "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
5766 |       "license": "MIT",
5767 |       "dependencies": {
5768 |         "camelcase-css": "^2.0.1"
5769 |       },
5770 |       "engines": {
5771 |         "node": "^12 || ^14 || >= 16"
5772 |       },
5773 |       "funding": {
5774 |         "type": "opencollective",
5775 |         "url": "https://opencollective.com/postcss/"
5776 |       },
5777 |       "peerDependencies": {
5778 |         "postcss": "^8.4.21"
5779 |       }
5780 |     },
5781 |     "node_modules/postcss-load-config": {
5782 |       "version": "4.0.2",
5783 |       "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
5784 |       "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
5785 |       "funding": [
5786 |         {
5787 |           "type": "opencollective",
5788 |           "url": "https://opencollective.com/postcss/"
5789 |         },
5790 |         {
5791 |           "type": "github",
5792 |           "url": "https://github.com/sponsors/ai"
5793 |         }
5794 |       ],
5795 |       "license": "MIT",
5796 |       "dependencies": {
5797 |         "lilconfig": "^3.0.0",
5798 |         "yaml": "^2.3.4"
5799 |       },
5800 |       "engines": {
5801 |         "node": ">= 14"
5802 |       },
5803 |       "peerDependencies": {
5804 |         "postcss": ">=8.0.9",
5805 |         "ts-node": ">=9.0.0"
5806 |       },
5807 |       "peerDependenciesMeta": {
5808 |         "postcss": {
5809 |           "optional": true
5810 |         },
5811 |         "ts-node": {
5812 |           "optional": true
5813 |         }
5814 |       }
5815 |     },
5816 |     "node_modules/postcss-nested": {
5817 |       "version": "6.2.0",
5818 |       "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
5819 |       "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
5820 |       "funding": [
5821 |         {
5822 |           "type": "opencollective",
5823 |           "url": "https://opencollective.com/postcss/"
5824 |         },
5825 |         {
5826 |           "type": "github",
5827 |           "url": "https://github.com/sponsors/ai"
5828 |         }
5829 |       ],
5830 |       "license": "MIT",
5831 |       "dependencies": {
5832 |         "postcss-selector-parser": "^6.1.1"
5833 |       },
5834 |       "engines": {
5835 |         "node": ">=12.0"
5836 |       },
5837 |       "peerDependencies": {
5838 |         "postcss": "^8.2.14"
5839 |       }
5840 |     },
5841 |     "node_modules/postcss-selector-parser": {
5842 |       "version": "6.1.2",
5843 |       "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
5844 |       "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
5845 |       "license": "MIT",
5846 |       "dependencies": {
5847 |         "cssesc": "^3.0.0",
5848 |         "util-deprecate": "^1.0.2"
5849 |       },
5850 |       "engines": {
5851 |         "node": ">=4"
5852 |       }
5853 |     },
5854 |     "node_modules/postcss-value-parser": {
5855 |       "version": "4.2.0",
5856 |       "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
5857 |       "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
5858 |       "license": "MIT"
5859 |     },
5860 |     "node_modules/prelude-ls": {
5861 |       "version": "1.2.1",
5862 |       "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
5863 |       "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
5864 |       "dev": true,
5865 |       "license": "MIT",
5866 |       "engines": {
5867 |         "node": ">= 0.8.0"
5868 |       }
5869 |     },
5870 |     "node_modules/prop-types": {
5871 |       "version": "15.8.1",
5872 |       "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
5873 |       "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
5874 |       "license": "MIT",
5875 |       "dependencies": {
5876 |         "loose-envify": "^1.4.0",
5877 |         "object-assign": "^4.1.1",
5878 |         "react-is": "^16.13.1"
5879 |       }
5880 |     },
5881 |     "node_modules/prop-types/node_modules/react-is": {
5882 |       "version": "16.13.1",
5883 |       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
5884 |       "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
5885 |       "license": "MIT"
5886 |     },
5887 |     "node_modules/proxy-from-env": {
5888 |       "version": "1.1.0",
5889 |       "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
5890 |       "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==",
5891 |       "license": "MIT"
5892 |     },
5893 |     "node_modules/punycode": {
5894 |       "version": "2.3.1",
5895 |       "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
5896 |       "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
5897 |       "dev": true,
5898 |       "license": "MIT",
5899 |       "engines": {
5900 |         "node": ">=6"
5901 |       }
5902 |     },
5903 |     "node_modules/queue-microtask": {
5904 |       "version": "1.2.3",
5905 |       "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
5906 |       "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
5907 |       "funding": [
5908 |         {
5909 |           "type": "github",
5910 |           "url": "https://github.com/sponsors/feross"
5911 |         },
5912 |         {
5913 |           "type": "patreon",
5914 |           "url": "https://www.patreon.com/feross"
5915 |         },
5916 |         {
5917 |           "type": "consulting",
5918 |           "url": "https://feross.org/support"
5919 |         }
5920 |       ],
5921 |       "license": "MIT"
5922 |     },
5923 |     "node_modules/react": {
5924 |       "version": "18.3.1",
5925 |       "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
5926 |       "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
5927 |       "license": "MIT",
5928 |       "dependencies": {
5929 |         "loose-envify": "^1.1.0"
5930 |       },
5931 |       "engines": {
5932 |         "node": ">=0.10.0"
5933 |       }
5934 |     },
5935 |     "node_modules/react-day-picker": {
5936 |       "version": "8.10.1",
5937 |       "resolved": "https://registry.npmjs.org/react-day-picker/-/react-day-picker-8.10.1.tgz",
5938 |       "integrity": "sha512-TMx7fNbhLk15eqcMt+7Z7S2KF7mfTId/XJDjKE8f+IUcFn0l08/kI4FiYTL/0yuOLmEcbR4Fwe3GJf/NiiMnPA==",
5939 |       "license": "MIT",
5940 |       "funding": {
5941 |         "type": "individual",
5942 |         "url": "https://github.com/sponsors/gpbl"
5943 |       },
5944 |       "peerDependencies": {
5945 |         "date-fns": "^2.28.0 || ^3.0.0",
5946 |         "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
5947 |       }
5948 |     },
5949 |     "node_modules/react-dom": {
5950 |       "version": "18.3.1",
5951 |       "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
5952 |       "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
5953 |       "license": "MIT",
5954 |       "dependencies": {
5955 |         "loose-envify": "^1.1.0",
5956 |         "scheduler": "^0.23.2"
5957 |       },
5958 |       "peerDependencies": {
5959 |         "react": "^18.3.1"
5960 |       }
5961 |     },
5962 |     "node_modules/react-hook-form": {
5963 |       "version": "7.61.1",
5964 |       "resolved": "https://registry.npmjs.org/react-hook-form/-/react-hook-form-7.61.1.tgz",
5965 |       "integrity": "sha512-2vbXUFDYgqEgM2RcXcAT2PwDW/80QARi+PKmHy5q2KhuKvOlG8iIYgf7eIlIANR5trW9fJbP4r5aub3a4egsew==",
5966 |       "license": "MIT",
5967 |       "engines": {
5968 |         "node": ">=18.0.0"
5969 |       },
5970 |       "funding": {
5971 |         "type": "opencollective",
5972 |         "url": "https://opencollective.com/react-hook-form"
5973 |       },
5974 |       "peerDependencies": {
5975 |         "react": "^16.8.0 || ^17 || ^18 || ^19"
5976 |       }
5977 |     },
5978 |     "node_modules/react-is": {
5979 |       "version": "18.3.1",
5980 |       "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz",
5981 |       "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
5982 |       "license": "MIT"
5983 |     },
5984 |     "node_modules/react-remove-scroll": {
5985 |       "version": "2.7.1",
5986 |       "resolved": "https://registry.npmjs.org/react-remove-scroll/-/react-remove-scroll-2.7.1.tgz",
5987 |       "integrity": "sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==",
5988 |       "license": "MIT",
5989 |       "dependencies": {
5990 |         "react-remove-scroll-bar": "^2.3.7",
5991 |         "react-style-singleton": "^2.2.3",
5992 |         "tslib": "^2.1.0",
5993 |         "use-callback-ref": "^1.3.3",
5994 |         "use-sidecar": "^1.1.3"
5995 |       },
5996 |       "engines": {
5997 |         "node": ">=10"
5998 |       },
5999 |       "peerDependencies": {
6000 |         "@types/react": "*",
6001 |         "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
6002 |       },
6003 |       "peerDependenciesMeta": {
6004 |         "@types/react": {
6005 |           "optional": true
6006 |         }
6007 |       }
6008 |     },
6009 |     "node_modules/react-remove-scroll-bar": {
6010 |       "version": "2.3.8",
6011 |       "resolved": "https://registry.npmjs.org/react-remove-scroll-bar/-/react-remove-scroll-bar-2.3.8.tgz",
6012 |       "integrity": "sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==",
6013 |       "license": "MIT",
6014 |       "dependencies": {
6015 |         "react-style-singleton": "^2.2.2",
6016 |         "tslib": "^2.0.0"
6017 |       },
6018 |       "engines": {
6019 |         "node": ">=10"
6020 |       },
6021 |       "peerDependencies": {
6022 |         "@types/react": "*",
6023 |         "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
6024 |       },
6025 |       "peerDependenciesMeta": {
6026 |         "@types/react": {
6027 |           "optional": true
6028 |         }
6029 |       }
6030 |     },
6031 |     "node_modules/react-resizable-panels": {
6032 |       "version": "2.1.9",
6033 |       "resolved": "https://registry.npmjs.org/react-resizable-panels/-/react-resizable-panels-2.1.9.tgz",
6034 |       "integrity": "sha512-z77+X08YDIrgAes4jl8xhnUu1LNIRp4+E7cv4xHmLOxxUPO/ML7PSrE813b90vj7xvQ1lcf7g2uA9GeMZonjhQ==",
6035 |       "license": "MIT",
6036 |       "peerDependencies": {
6037 |         "react": "^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc",
6038 |         "react-dom": "^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
6039 |       }
6040 |     },
6041 |     "node_modules/react-router": {
6042 |       "version": "6.30.1",
6043 |       "resolved": "https://registry.npmjs.org/react-router/-/react-router-6.30.1.tgz",
6044 |       "integrity": "sha512-X1m21aEmxGXqENEPG3T6u0Th7g0aS4ZmoNynhbs+Cn+q+QGTLt+d5IQ2bHAXKzKcxGJjxACpVbnYQSCRcfxHlQ==",
6045 |       "license": "MIT",
6046 |       "dependencies": {
6047 |         "@remix-run/router": "1.23.0"
6048 |       },
6049 |       "engines": {
6050 |         "node": ">=14.0.0"
6051 |       },
6052 |       "peerDependencies": {
6053 |         "react": ">=16.8"
6054 |       }
6055 |     },
6056 |     "node_modules/react-router-dom": {
6057 |       "version": "6.30.1",
6058 |       "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-6.30.1.tgz",
6059 |       "integrity": "sha512-llKsgOkZdbPU1Eg3zK8lCn+sjD9wMRZZPuzmdWWX5SUs8OFkN5HnFVC0u5KMeMaC9aoancFI/KoLuKPqN+hxHw==",
6060 |       "license": "MIT",
6061 |       "dependencies": {
6062 |         "@remix-run/router": "1.23.0",
6063 |         "react-router": "6.30.1"
6064 |       },
6065 |       "engines": {
6066 |         "node": ">=14.0.0"
6067 |       },
6068 |       "peerDependencies": {
6069 |         "react": ">=16.8",
6070 |         "react-dom": ">=16.8"
6071 |       }
6072 |     },
6073 |     "node_modules/react-smooth": {
6074 |       "version": "4.0.4",
6075 |       "resolved": "https://registry.npmjs.org/react-smooth/-/react-smooth-4.0.4.tgz",
6076 |       "integrity": "sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==",
6077 |       "license": "MIT",
6078 |       "dependencies": {
6079 |         "fast-equals": "^5.0.1",
6080 |         "prop-types": "^15.8.1",
6081 |         "react-transition-group": "^4.4.5"
6082 |       },
6083 |       "peerDependencies": {
6084 |         "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
6085 |         "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
6086 |       }
6087 |     },
6088 |     "node_modules/react-style-singleton": {
6089 |       "version": "2.2.3",
6090 |       "resolved": "https://registry.npmjs.org/react-style-singleton/-/react-style-singleton-2.2.3.tgz",
6091 |       "integrity": "sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==",
6092 |       "license": "MIT",
6093 |       "dependencies": {
6094 |         "get-nonce": "^1.0.0",
6095 |         "tslib": "^2.0.0"
6096 |       },
6097 |       "engines": {
6098 |         "node": ">=10"
6099 |       },
6100 |       "peerDependencies": {
6101 |         "@types/react": "*",
6102 |         "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
6103 |       },
6104 |       "peerDependenciesMeta": {
6105 |         "@types/react": {
6106 |           "optional": true
6107 |         }
6108 |       }
6109 |     },
6110 |     "node_modules/react-transition-group": {
6111 |       "version": "4.4.5",
6112 |       "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
6113 |       "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
6114 |       "license": "BSD-3-Clause",
6115 |       "dependencies": {
6116 |         "@babel/runtime": "^7.5.5",
6117 |         "dom-helpers": "^5.0.1",
6118 |         "loose-envify": "^1.4.0",
6119 |         "prop-types": "^15.6.2"
6120 |       },
6121 |       "peerDependencies": {
6122 |         "react": ">=16.6.0",
6123 |         "react-dom": ">=16.6.0"
6124 |       }
6125 |     },
6126 |     "node_modules/read-cache": {
6127 |       "version": "1.0.0",
6128 |       "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
6129 |       "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
6130 |       "license": "MIT",
6131 |       "dependencies": {
6132 |         "pify": "^2.3.0"
6133 |       }
6134 |     },
6135 |     "node_modules/readdirp": {
6136 |       "version": "3.6.0",
6137 |       "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
6138 |       "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
6139 |       "license": "MIT",
6140 |       "dependencies": {
6141 |         "picomatch": "^2.2.1"
6142 |       },
6143 |       "engines": {
6144 |         "node": ">=8.10.0"
6145 |       }
6146 |     },
6147 |     "node_modules/recharts": {
6148 |       "version": "2.15.4",
6149 |       "resolved": "https://registry.npmjs.org/recharts/-/recharts-2.15.4.tgz",
6150 |       "integrity": "sha512-UT/q6fwS3c1dHbXv2uFgYJ9BMFHu3fwnd7AYZaEQhXuYQ4hgsxLvsUXzGdKeZrW5xopzDCvuA2N41WJ88I7zIw==",
6151 |       "license": "MIT",
6152 |       "dependencies": {
6153 |         "clsx": "^2.0.0",
6154 |         "eventemitter3": "^4.0.1",
6155 |         "lodash": "^4.17.21",
6156 |         "react-is": "^18.3.1",
6157 |         "react-smooth": "^4.0.4",
6158 |         "recharts-scale": "^0.4.4",
6159 |         "tiny-invariant": "^1.3.1",
6160 |         "victory-vendor": "^36.6.8"
6161 |       },
6162 |       "engines": {
6163 |         "node": ">=14"
6164 |       },
6165 |       "peerDependencies": {
6166 |         "react": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
6167 |         "react-dom": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
6168 |       }
6169 |     },
6170 |     "node_modules/recharts-scale": {
6171 |       "version": "0.4.5",
6172 |       "resolved": "https://registry.npmjs.org/recharts-scale/-/recharts-scale-0.4.5.tgz",
6173 |       "integrity": "sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==",
6174 |       "license": "MIT",
6175 |       "dependencies": {
6176 |         "decimal.js-light": "^2.4.1"
6177 |       }
6178 |     },
6179 |     "node_modules/resolve": {
6180 |       "version": "1.22.8",
6181 |       "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz",
6182 |       "integrity": "sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==",
6183 |       "license": "MIT",
6184 |       "dependencies": {
6185 |         "is-core-module": "^2.13.0",
6186 |         "path-parse": "^1.0.7",
6187 |         "supports-preserve-symlinks-flag": "^1.0.0"
6188 |       },
6189 |       "bin": {
6190 |         "resolve": "bin/resolve"
6191 |       },
6192 |       "funding": {
6193 |         "url": "https://github.com/sponsors/ljharb"
6194 |       }
6195 |     },
6196 |     "node_modules/resolve-from": {
6197 |       "version": "4.0.0",
6198 |       "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
6199 |       "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
6200 |       "dev": true,
6201 |       "license": "MIT",
6202 |       "engines": {
6203 |         "node": ">=4"
6204 |       }
6205 |     },
6206 |     "node_modules/reusify": {
6207 |       "version": "1.0.4",
6208 |       "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
6209 |       "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
6210 |       "license": "MIT",
6211 |       "engines": {
6212 |         "iojs": ">=1.0.0",
6213 |         "node": ">=0.10.0"
6214 |       }
6215 |     },
6216 |     "node_modules/rollup": {
6217 |       "version": "4.24.0",
6218 |       "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.24.0.tgz",
6219 |       "integrity": "sha512-DOmrlGSXNk1DM0ljiQA+i+o0rSLhtii1je5wgk60j49d1jHT5YYttBv1iWOnYSTG+fZZESUOSNiAl89SIet+Cg==",
6220 |       "dev": true,
6221 |       "license": "MIT",
6222 |       "dependencies": {
6223 |         "@types/estree": "1.0.6"
6224 |       },
6225 |       "bin": {
6226 |         "rollup": "dist/bin/rollup"
6227 |       },
6228 |       "engines": {
6229 |         "node": ">=18.0.0",
6230 |         "npm": ">=8.0.0"
6231 |       },
6232 |       "optionalDependencies": {
6233 |         "@rollup/rollup-android-arm-eabi": "4.24.0",
6234 |         "@rollup/rollup-android-arm64": "4.24.0",
6235 |         "@rollup/rollup-darwin-arm64": "4.24.0",
6236 |         "@rollup/rollup-darwin-x64": "4.24.0",
6237 |         "@rollup/rollup-linux-arm-gnueabihf": "4.24.0",
6238 |         "@rollup/rollup-linux-arm-musleabihf": "4.24.0",
6239 |         "@rollup/rollup-linux-arm64-gnu": "4.24.0",
6240 |         "@rollup/rollup-linux-arm64-musl": "4.24.0",
6241 |         "@rollup/rollup-linux-powerpc64le-gnu": "4.24.0",
6242 |         "@rollup/rollup-linux-riscv64-gnu": "4.24.0",
6243 |         "@rollup/rollup-linux-s390x-gnu": "4.24.0",
6244 |         "@rollup/rollup-linux-x64-gnu": "4.24.0",
6245 |         "@rollup/rollup-linux-x64-musl": "4.24.0",
6246 |         "@rollup/rollup-win32-arm64-msvc": "4.24.0",
6247 |         "@rollup/rollup-win32-ia32-msvc": "4.24.0",
6248 |         "@rollup/rollup-win32-x64-msvc": "4.24.0",
6249 |         "fsevents": "~2.3.2"
6250 |       }
6251 |     },
6252 |     "node_modules/run-parallel": {
6253 |       "version": "1.2.0",
6254 |       "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
6255 |       "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
6256 |       "funding": [
6257 |         {
6258 |           "type": "github",
6259 |           "url": "https://github.com/sponsors/feross"
6260 |         },
6261 |         {
6262 |           "type": "patreon",
6263 |           "url": "https://www.patreon.com/feross"
6264 |         },
6265 |         {
6266 |           "type": "consulting",
6267 |           "url": "https://feross.org/support"
6268 |         }
6269 |       ],
6270 |       "license": "MIT",
6271 |       "dependencies": {
6272 |         "queue-microtask": "^1.2.2"
6273 |       }
6274 |     },
6275 |     "node_modules/scheduler": {
6276 |       "version": "0.23.2",
6277 |       "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
6278 |       "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
6279 |       "license": "MIT",
6280 |       "dependencies": {
6281 |         "loose-envify": "^1.1.0"
6282 |       }
6283 |     },
6284 |     "node_modules/semver": {
6285 |       "version": "7.7.2",
6286 |       "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
6287 |       "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
6288 |       "dev": true,
6289 |       "license": "ISC",
6290 |       "bin": {
6291 |         "semver": "bin/semver.js"
6292 |       },
6293 |       "engines": {
6294 |         "node": ">=10"
6295 |       }
6296 |     },
6297 |     "node_modules/shebang-command": {
6298 |       "version": "2.0.0",
6299 |       "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
6300 |       "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
6301 |       "license": "MIT",
6302 |       "dependencies": {
6303 |         "shebang-regex": "^3.0.0"
6304 |       },
6305 |       "engines": {
6306 |         "node": ">=8"
6307 |       }
6308 |     },
6309 |     "node_modules/shebang-regex": {
6310 |       "version": "3.0.0",
6311 |       "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
6312 |       "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
6313 |       "license": "MIT",
6314 |       "engines": {
6315 |         "node": ">=8"
6316 |       }
6317 |     },
6318 |     "node_modules/signal-exit": {
6319 |       "version": "4.1.0",
6320 |       "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
6321 |       "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
6322 |       "license": "ISC",
6323 |       "engines": {
6324 |         "node": ">=14"
6325 |       },
6326 |       "funding": {
6327 |         "url": "https://github.com/sponsors/isaacs"
6328 |       }
6329 |     },
6330 |     "node_modules/sonner": {
6331 |       "version": "1.7.4",
6332 |       "resolved": "https://registry.npmjs.org/sonner/-/sonner-1.7.4.tgz",
6333 |       "integrity": "sha512-DIS8z4PfJRbIyfVFDVnK9rO3eYDtse4Omcm6bt0oEr5/jtLgysmjuBl1frJ9E/EQZrFmKx2A8m/s5s9CRXIzhw==",
6334 |       "license": "MIT",
6335 |       "peerDependencies": {
6336 |         "react": "^18.0.0 || ^19.0.0 || ^19.0.0-rc",
6337 |         "react-dom": "^18.0.0 || ^19.0.0 || ^19.0.0-rc"
6338 |       }
6339 |     },
6340 |     "node_modules/source-map-js": {
6341 |       "version": "1.2.1",
6342 |       "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
6343 |       "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
6344 |       "license": "BSD-3-Clause",
6345 |       "engines": {
6346 |         "node": ">=0.10.0"
6347 |       }
6348 |     },
6349 |     "node_modules/string-width": {
6350 |       "version": "5.1.2",
6351 |       "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
6352 |       "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
6353 |       "license": "MIT",
6354 |       "dependencies": {
6355 |         "eastasianwidth": "^0.2.0",
6356 |         "emoji-regex": "^9.2.2",
6357 |         "strip-ansi": "^7.0.1"
6358 |       },
6359 |       "engines": {
6360 |         "node": ">=12"
6361 |       },
6362 |       "funding": {
6363 |         "url": "https://github.com/sponsors/sindresorhus"
6364 |       }
6365 |     },
6366 |     "node_modules/string-width-cjs": {
6367 |       "name": "string-width",
6368 |       "version": "4.2.3",
6369 |       "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
6370 |       "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
6371 |       "license": "MIT",
6372 |       "dependencies": {
6373 |         "emoji-regex": "^8.0.0",
6374 |         "is-fullwidth-code-point": "^3.0.0",
6375 |         "strip-ansi": "^6.0.1"
6376 |       },
6377 |       "engines": {
6378 |         "node": ">=8"
6379 |       }
6380 |     },
6381 |     "node_modules/string-width-cjs/node_modules/ansi-regex": {
6382 |       "version": "5.0.1",
6383 |       "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
6384 |       "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
6385 |       "license": "MIT",
6386 |       "engines": {
6387 |         "node": ">=8"
6388 |       }
6389 |     },
6390 |     "node_modules/string-width-cjs/node_modules/emoji-regex": {
6391 |       "version": "8.0.0",
6392 |       "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
6393 |       "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
6394 |       "license": "MIT"
6395 |     },
6396 |     "node_modules/string-width-cjs/node_modules/strip-ansi": {
6397 |       "version": "6.0.1",
6398 |       "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
6399 |       "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
6400 |       "license": "MIT",
6401 |       "dependencies": {
6402 |         "ansi-regex": "^5.0.1"
6403 |       },
6404 |       "engines": {
6405 |         "node": ">=8"
6406 |       }
6407 |     },
6408 |     "node_modules/strip-ansi": {
6409 |       "version": "7.1.0",
6410 |       "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
6411 |       "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
6412 |       "license": "MIT",
6413 |       "dependencies": {
6414 |         "ansi-regex": "^6.0.1"
6415 |       },
6416 |       "engines": {
6417 |         "node": ">=12"
6418 |       },
6419 |       "funding": {
6420 |         "url": "https://github.com/chalk/strip-ansi?sponsor=1"
6421 |       }
6422 |     },
6423 |     "node_modules/strip-ansi-cjs": {
6424 |       "name": "strip-ansi",
6425 |       "version": "6.0.1",
6426 |       "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
6427 |       "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
6428 |       "license": "MIT",
6429 |       "dependencies": {
6430 |         "ansi-regex": "^5.0.1"
6431 |       },
6432 |       "engines": {
6433 |         "node": ">=8"
6434 |       }
6435 |     },
6436 |     "node_modules/strip-ansi-cjs/node_modules/ansi-regex": {
6437 |       "version": "5.0.1",
6438 |       "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
6439 |       "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
6440 |       "license": "MIT",
6441 |       "engines": {
6442 |         "node": ">=8"
6443 |       }
6444 |     },
6445 |     "node_modules/strip-json-comments": {
6446 |       "version": "3.1.1",
6447 |       "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
6448 |       "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
6449 |       "dev": true,
6450 |       "license": "MIT",
6451 |       "engines": {
6452 |         "node": ">=8"
6453 |       },
6454 |       "funding": {
6455 |         "url": "https://github.com/sponsors/sindresorhus"
6456 |       }
6457 |     },
6458 |     "node_modules/sucrase": {
6459 |       "version": "3.35.0",
6460 |       "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
6461 |       "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
6462 |       "license": "MIT",
6463 |       "dependencies": {
6464 |         "@jridgewell/gen-mapping": "^0.3.2",
6465 |         "commander": "^4.0.0",
6466 |         "glob": "^10.3.10",
6467 |         "lines-and-columns": "^1.1.6",
6468 |         "mz": "^2.7.0",
6469 |         "pirates": "^4.0.1",
6470 |         "ts-interface-checker": "^0.1.9"
6471 |       },
6472 |       "bin": {
6473 |         "sucrase": "bin/sucrase",
6474 |         "sucrase-node": "bin/sucrase-node"
6475 |       },
6476 |       "engines": {
6477 |         "node": ">=16 || 14 >=14.17"
6478 |       }
6479 |     },
6480 |     "node_modules/supports-color": {
6481 |       "version": "7.2.0",
6482 |       "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
6483 |       "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
6484 |       "dev": true,
6485 |       "license": "MIT",
6486 |       "dependencies": {
6487 |         "has-flag": "^4.0.0"
6488 |       },
6489 |       "engines": {
6490 |         "node": ">=8"
6491 |       }
6492 |     },
6493 |     "node_modules/supports-preserve-symlinks-flag": {
6494 |       "version": "1.0.0",
6495 |       "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
6496 |       "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
6497 |       "license": "MIT",
6498 |       "engines": {
6499 |         "node": ">= 0.4"
6500 |       },
6501 |       "funding": {
6502 |         "url": "https://github.com/sponsors/ljharb"
6503 |       }
6504 |     },
6505 |     "node_modules/tailwind-merge": {
6506 |       "version": "2.6.0",
6507 |       "resolved": "https://registry.npmjs.org/tailwind-merge/-/tailwind-merge-2.6.0.tgz",
6508 |       "integrity": "sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==",
6509 |       "license": "MIT",
6510 |       "funding": {
6511 |         "type": "github",
6512 |         "url": "https://github.com/sponsors/dcastil"
6513 |       }
6514 |     },
6515 |     "node_modules/tailwindcss": {
6516 |       "version": "3.4.17",
6517 |       "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
6518 |       "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
6519 |       "license": "MIT",
6520 |       "dependencies": {
6521 |         "@alloc/quick-lru": "^5.2.0",
6522 |         "arg": "^5.0.2",
6523 |         "chokidar": "^3.6.0",
6524 |         "didyoumean": "^1.2.2",
6525 |         "dlv": "^1.1.3",
6526 |         "fast-glob": "^3.3.2",
6527 |         "glob-parent": "^6.0.2",
6528 |         "is-glob": "^4.0.3",
6529 |         "jiti": "^1.21.6",
6530 |         "lilconfig": "^3.1.3",
6531 |         "micromatch": "^4.0.8",
6532 |         "normalize-path": "^3.0.0",
6533 |         "object-hash": "^3.0.0",
6534 |         "picocolors": "^1.1.1",
6535 |         "postcss": "^8.4.47",
6536 |         "postcss-import": "^15.1.0",
6537 |         "postcss-js": "^4.0.1",
6538 |         "postcss-load-config": "^4.0.2",
6539 |         "postcss-nested": "^6.2.0",
6540 |         "postcss-selector-parser": "^6.1.2",
6541 |         "resolve": "^1.22.8",
6542 |         "sucrase": "^3.35.0"
6543 |       },
6544 |       "bin": {
6545 |         "tailwind": "lib/cli.js",
6546 |         "tailwindcss": "lib/cli.js"
6547 |       },
6548 |       "engines": {
6549 |         "node": ">=14.0.0"
6550 |       }
6551 |     },
6552 |     "node_modules/tailwindcss-animate": {
6553 |       "version": "1.0.7",
6554 |       "resolved": "https://registry.npmjs.org/tailwindcss-animate/-/tailwindcss-animate-1.0.7.tgz",
6555 |       "integrity": "sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==",
6556 |       "license": "MIT",
6557 |       "peerDependencies": {
6558 |         "tailwindcss": ">=3.0.0 || insiders"
6559 |       }
6560 |     },
6561 |     "node_modules/thenify": {
6562 |       "version": "3.3.1",
6563 |       "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
6564 |       "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
6565 |       "license": "MIT",
6566 |       "dependencies": {
6567 |         "any-promise": "^1.0.0"
6568 |       }
6569 |     },
6570 |     "node_modules/thenify-all": {
6571 |       "version": "1.6.0",
6572 |       "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
6573 |       "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
6574 |       "license": "MIT",
6575 |       "dependencies": {
6576 |         "thenify": ">= 3.1.0 < 4"
6577 |       },
6578 |       "engines": {
6579 |         "node": ">=0.8"
6580 |       }
6581 |     },
6582 |     "node_modules/tiny-invariant": {
6583 |       "version": "1.3.3",
6584 |       "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz",
6585 |       "integrity": "sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==",
6586 |       "license": "MIT"
6587 |     },
6588 |     "node_modules/to-regex-range": {
6589 |       "version": "5.0.1",
6590 |       "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
6591 |       "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
6592 |       "license": "MIT",
6593 |       "dependencies": {
6594 |         "is-number": "^7.0.0"
6595 |       },
6596 |       "engines": {
6597 |         "node": ">=8.0"
6598 |       }
6599 |     },
6600 |     "node_modules/ts-api-utils": {
6601 |       "version": "2.1.0",
6602 |       "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgz",
6603 |       "integrity": "sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==",
6604 |       "dev": true,
6605 |       "license": "MIT",
6606 |       "engines": {
6607 |         "node": ">=18.12"
6608 |       },
6609 |       "peerDependencies": {
6610 |         "typescript": ">=4.8.4"
6611 |       }
6612 |     },
6613 |     "node_modules/ts-interface-checker": {
6614 |       "version": "0.1.13",
6615 |       "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
6616 |       "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
6617 |       "license": "Apache-2.0"
6618 |     },
6619 |     "node_modules/tslib": {
6620 |       "version": "2.8.0",
6621 |       "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.0.tgz",
6622 |       "integrity": "sha512-jWVzBLplnCmoaTr13V9dYbiQ99wvZRd0vNWaDRg+aVYRcjDF3nDksxFDE/+fkXnKhpnUUkmx5pK/v8mCtLVqZA==",
6623 |       "license": "0BSD"
6624 |     },
6625 |     "node_modules/type-check": {
6626 |       "version": "0.4.0",
6627 |       "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
6628 |       "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
6629 |       "dev": true,
6630 |       "license": "MIT",
6631 |       "dependencies": {
6632 |         "prelude-ls": "^1.2.1"
6633 |       },
6634 |       "engines": {
6635 |         "node": ">= 0.8.0"
6636 |       }
6637 |     },
6638 |     "node_modules/typescript": {
6639 |       "version": "5.8.3",
6640 |       "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
6641 |       "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
6642 |       "dev": true,
6643 |       "license": "Apache-2.0",
6644 |       "bin": {
6645 |         "tsc": "bin/tsc",
6646 |         "tsserver": "bin/tsserver"
6647 |       },
6648 |       "engines": {
6649 |         "node": ">=14.17"
6650 |       }
6651 |     },
6652 |     "node_modules/typescript-eslint": {
6653 |       "version": "8.38.0",
6654 |       "resolved": "https://registry.npmjs.org/typescript-eslint/-/typescript-eslint-8.38.0.tgz",
6655 |       "integrity": "sha512-FsZlrYK6bPDGoLeZRuvx2v6qrM03I0U0SnfCLPs/XCCPCFD80xU9Pg09H/K+XFa68uJuZo7l/Xhs+eDRg2l3hg==",
6656 |       "dev": true,
6657 |       "license": "MIT",
6658 |       "dependencies": {
6659 |         "@typescript-eslint/eslint-plugin": "8.38.0",
6660 |         "@typescript-eslint/parser": "8.38.0",
6661 |         "@typescript-eslint/typescript-estree": "8.38.0",
6662 |         "@typescript-eslint/utils": "8.38.0"
6663 |       },
6664 |       "engines": {
6665 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
6666 |       },
6667 |       "funding": {
6668 |         "type": "opencollective",
6669 |         "url": "https://opencollective.com/typescript-eslint"
6670 |       },
6671 |       "peerDependencies": {
6672 |         "eslint": "^8.57.0 || ^9.0.0",
6673 |         "typescript": ">=4.8.4 <5.9.0"
6674 |       }
6675 |     },
6676 |     "node_modules/undici-types": {
6677 |       "version": "6.21.0",
6678 |       "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
6679 |       "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
6680 |       "dev": true,
6681 |       "license": "MIT"
6682 |     },
6683 |     "node_modules/update-browserslist-db": {
6684 |       "version": "1.1.3",
6685 |       "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
6686 |       "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
6687 |       "dev": true,
6688 |       "funding": [
6689 |         {
6690 |           "type": "opencollective",
6691 |           "url": "https://opencollective.com/browserslist"
6692 |         },
6693 |         {
6694 |           "type": "tidelift",
6695 |           "url": "https://tidelift.com/funding/github/npm/browserslist"
6696 |         },
6697 |         {
6698 |           "type": "github",
6699 |           "url": "https://github.com/sponsors/ai"
6700 |         }
6701 |       ],
6702 |       "license": "MIT",
6703 |       "dependencies": {
6704 |         "escalade": "^3.2.0",
6705 |         "picocolors": "^1.1.1"
6706 |       },
6707 |       "bin": {
6708 |         "update-browserslist-db": "cli.js"
6709 |       },
6710 |       "peerDependencies": {
6711 |         "browserslist": ">= 4.21.0"
6712 |       }
6713 |     },
6714 |     "node_modules/uri-js": {
6715 |       "version": "4.4.1",
6716 |       "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
6717 |       "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
6718 |       "dev": true,
6719 |       "license": "BSD-2-Clause",
6720 |       "dependencies": {
6721 |         "punycode": "^2.1.0"
6722 |       }
6723 |     },
6724 |     "node_modules/use-callback-ref": {
6725 |       "version": "1.3.3",
6726 |       "resolved": "https://registry.npmjs.org/use-callback-ref/-/use-callback-ref-1.3.3.tgz",
6727 |       "integrity": "sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==",
6728 |       "license": "MIT",
6729 |       "dependencies": {
6730 |         "tslib": "^2.0.0"
6731 |       },
6732 |       "engines": {
6733 |         "node": ">=10"
6734 |       },
6735 |       "peerDependencies": {
6736 |         "@types/react": "*",
6737 |         "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
6738 |       },
6739 |       "peerDependenciesMeta": {
6740 |         "@types/react": {
6741 |           "optional": true
6742 |         }
6743 |       }
6744 |     },
6745 |     "node_modules/use-sidecar": {
6746 |       "version": "1.1.3",
6747 |       "resolved": "https://registry.npmjs.org/use-sidecar/-/use-sidecar-1.1.3.tgz",
6748 |       "integrity": "sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==",
6749 |       "license": "MIT",
6750 |       "dependencies": {
6751 |         "detect-node-es": "^1.1.0",
6752 |         "tslib": "^2.0.0"
6753 |       },
6754 |       "engines": {
6755 |         "node": ">=10"
6756 |       },
6757 |       "peerDependencies": {
6758 |         "@types/react": "*",
6759 |         "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
6760 |       },
6761 |       "peerDependenciesMeta": {
6762 |         "@types/react": {
6763 |           "optional": true
6764 |         }
6765 |       }
6766 |     },
6767 |     "node_modules/use-sync-external-store": {
6768 |       "version": "1.5.0",
6769 |       "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz",
6770 |       "integrity": "sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==",
6771 |       "license": "MIT",
6772 |       "peerDependencies": {
6773 |         "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
6774 |       }
6775 |     },
6776 |     "node_modules/util-deprecate": {
6777 |       "version": "1.0.2",
6778 |       "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
6779 |       "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
6780 |       "license": "MIT"
6781 |     },
6782 |     "node_modules/vaul": {
6783 |       "version": "0.9.9",
6784 |       "resolved": "https://registry.npmjs.org/vaul/-/vaul-0.9.9.tgz",
6785 |       "integrity": "sha512-7afKg48srluhZwIkaU+lgGtFCUsYBSGOl8vcc8N/M3YQlZFlynHD15AE+pwrYdc826o7nrIND4lL9Y6b9WWZZQ==",
6786 |       "license": "MIT",
6787 |       "dependencies": {
6788 |         "@radix-ui/react-dialog": "^1.1.1"
6789 |       },
6790 |       "peerDependencies": {
6791 |         "react": "^16.8 || ^17.0 || ^18.0",
6792 |         "react-dom": "^16.8 || ^17.0 || ^18.0"
6793 |       }
6794 |     },
6795 |     "node_modules/victory-vendor": {
6796 |       "version": "36.9.2",
6797 |       "resolved": "https://registry.npmjs.org/victory-vendor/-/victory-vendor-36.9.2.tgz",
6798 |       "integrity": "sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==",
6799 |       "license": "MIT AND ISC",
6800 |       "dependencies": {
6801 |         "@types/d3-array": "^3.0.3",
6802 |         "@types/d3-ease": "^3.0.0",
6803 |         "@types/d3-interpolate": "^3.0.1",
6804 |         "@types/d3-scale": "^4.0.2",
6805 |         "@types/d3-shape": "^3.1.0",
6806 |         "@types/d3-time": "^3.0.0",
6807 |         "@types/d3-timer": "^3.0.0",
6808 |         "d3-array": "^3.1.6",
6809 |         "d3-ease": "^3.0.1",
6810 |         "d3-interpolate": "^3.0.1",
6811 |         "d3-scale": "^4.0.2",
6812 |         "d3-shape": "^3.1.0",
6813 |         "d3-time": "^3.0.0",
6814 |         "d3-timer": "^3.0.1"
6815 |       }
6816 |     },
6817 |     "node_modules/vite": {
6818 |       "version": "5.4.19",
6819 |       "resolved": "https://registry.npmjs.org/vite/-/vite-5.4.19.tgz",
6820 |       "integrity": "sha512-qO3aKv3HoQC8QKiNSTuUM1l9o/XX3+c+VTgLHbJWHZGeTPVAg2XwazI9UWzoxjIJCGCV2zU60uqMzjeLZuULqA==",
6821 |       "dev": true,
6822 |       "license": "MIT",
6823 |       "dependencies": {
6824 |         "esbuild": "^0.21.3",
6825 |         "postcss": "^8.4.43",
6826 |         "rollup": "^4.20.0"
6827 |       },
6828 |       "bin": {
6829 |         "vite": "bin/vite.js"
6830 |       },
6831 |       "engines": {
6832 |         "node": "^18.0.0 || >=20.0.0"
6833 |       },
6834 |       "funding": {
6835 |         "url": "https://github.com/vitejs/vite?sponsor=1"
6836 |       },
6837 |       "optionalDependencies": {
6838 |         "fsevents": "~2.3.3"
6839 |       },
6840 |       "peerDependencies": {
6841 |         "@types/node": "^18.0.0 || >=20.0.0",
6842 |         "less": "*",
6843 |         "lightningcss": "^1.21.0",
6844 |         "sass": "*",
6845 |         "sass-embedded": "*",
6846 |         "stylus": "*",
6847 |         "sugarss": "*",
6848 |         "terser": "^5.4.0"
6849 |       },
6850 |       "peerDependenciesMeta": {
6851 |         "@types/node": {
6852 |           "optional": true
6853 |         },
6854 |         "less": {
6855 |           "optional": true
6856 |         },
6857 |         "lightningcss": {
6858 |           "optional": true
6859 |         },
6860 |         "sass": {
6861 |           "optional": true
6862 |         },
6863 |         "sass-embedded": {
6864 |           "optional": true
6865 |         },
6866 |         "stylus": {
6867 |           "optional": true
6868 |         },
6869 |         "sugarss": {
6870 |           "optional": true
6871 |         },
6872 |         "terser": {
6873 |           "optional": true
6874 |         }
6875 |       }
6876 |     },
6877 |     "node_modules/which": {
6878 |       "version": "2.0.2",
6879 |       "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
6880 |       "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
6881 |       "license": "ISC",
6882 |       "dependencies": {
6883 |         "isexe": "^2.0.0"
6884 |       },
6885 |       "bin": {
6886 |         "node-which": "bin/node-which"
6887 |       },
6888 |       "engines": {
6889 |         "node": ">= 8"
6890 |       }
6891 |     },
6892 |     "node_modules/word-wrap": {
6893 |       "version": "1.2.5",
6894 |       "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
6895 |       "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
6896 |       "dev": true,
6897 |       "license": "MIT",
6898 |       "engines": {
6899 |         "node": ">=0.10.0"
6900 |       }
6901 |     },
6902 |     "node_modules/wrap-ansi": {
6903 |       "version": "8.1.0",
6904 |       "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
6905 |       "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
6906 |       "license": "MIT",
6907 |       "dependencies": {
6908 |         "ansi-styles": "^6.1.0",
6909 |         "string-width": "^5.0.1",
6910 |         "strip-ansi": "^7.0.1"
6911 |       },
6912 |       "engines": {
6913 |         "node": ">=12"
6914 |       },
6915 |       "funding": {
6916 |         "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
6917 |       }
6918 |     },
6919 |     "node_modules/wrap-ansi-cjs": {
6920 |       "name": "wrap-ansi",
6921 |       "version": "7.0.0",
6922 |       "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
6923 |       "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
6924 |       "license": "MIT",
6925 |       "dependencies": {
6926 |         "ansi-styles": "^4.0.0",
6927 |         "string-width": "^4.1.0",
6928 |         "strip-ansi": "^6.0.0"
6929 |       },
6930 |       "engines": {
6931 |         "node": ">=10"
6932 |       },
6933 |       "funding": {
6934 |         "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
6935 |       }
6936 |     },
6937 |     "node_modules/wrap-ansi-cjs/node_modules/ansi-regex": {
6938 |       "version": "5.0.1",
6939 |       "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
6940 |       "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
6941 |       "license": "MIT",
6942 |       "engines": {
6943 |         "node": ">=8"
6944 |       }
6945 |     },
6946 |     "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
6947 |       "version": "8.0.0",
6948 |       "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
6949 |       "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
6950 |       "license": "MIT"
6951 |     },
6952 |     "node_modules/wrap-ansi-cjs/node_modules/string-width": {
6953 |       "version": "4.2.3",
6954 |       "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
6955 |       "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
6956 |       "license": "MIT",
6957 |       "dependencies": {
6958 |         "emoji-regex": "^8.0.0",
6959 |         "is-fullwidth-code-point": "^3.0.0",
6960 |         "strip-ansi": "^6.0.1"
6961 |       },
6962 |       "engines": {
6963 |         "node": ">=8"
6964 |       }
6965 |     },
6966 |     "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
6967 |       "version": "6.0.1",
6968 |       "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
6969 |       "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
6970 |       "license": "MIT",
6971 |       "dependencies": {
6972 |         "ansi-regex": "^5.0.1"
6973 |       },
6974 |       "engines": {
6975 |         "node": ">=8"
6976 |       }
6977 |     },
6978 |     "node_modules/wrap-ansi/node_modules/ansi-styles": {
6979 |       "version": "6.2.1",
6980 |       "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
6981 |       "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
6982 |       "license": "MIT",
6983 |       "engines": {
6984 |         "node": ">=12"
6985 |       },
6986 |       "funding": {
6987 |         "url": "https://github.com/chalk/ansi-styles?sponsor=1"
6988 |       }
6989 |     },
6990 |     "node_modules/yaml": {
6991 |       "version": "2.6.0",
6992 |       "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.6.0.tgz",
6993 |       "integrity": "sha512-a6ae//JvKDEra2kdi1qzCyrJW/WZCgFi8ydDV+eXExl95t+5R+ijnqHJbz9tmMh8FUjx3iv2fCQ4dclAQlO2UQ==",
6994 |       "license": "ISC",
6995 |       "bin": {
6996 |         "yaml": "bin.mjs"
6997 |       },
6998 |       "engines": {
6999 |         "node": ">= 14"
7000 |       }
7001 |     },
7002 |     "node_modules/yocto-queue": {
7003 |       "version": "0.1.0",
7004 |       "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
7005 |       "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
7006 |       "dev": true,
7007 |       "license": "MIT",
7008 |       "engines": {
7009 |         "node": ">=10"
7010 |       },
7011 |       "funding": {
7012 |         "url": "https://github.com/sponsors/sindresorhus"
7013 |       }
7014 |     },
7015 |     "node_modules/zod": {
7016 |       "version": "3.25.76",
7017 |       "resolved": "https://registry.npmjs.org/zod/-/zod-3.25.76.tgz",
7018 |       "integrity": "sha512-gzUt/qt81nXsFGKIFcC3YnfEAx5NkunCfnDlvuBSSFS02bcXu4Lmea0AFIUwbLWxWPx3d9p8S5QoaujKcNQxcQ==",
7019 |       "license": "MIT",
7020 |       "funding": {
7021 |         "url": "https://github.com/sponsors/colinhacks"
7022 |       }
7023 |     }
7024 |   }
7025 | }
7026 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "vite_react_shadcn_ts",
 3 |   "private": true,
 4 |   "version": "0.0.0",
 5 |   "type": "module",
 6 |   "scripts": {
 7 |     "dev": "vite",
 8 |     "build": "vite build",
 9 |     "build:dev": "vite build --mode development",
10 |     "lint": "eslint .",
11 |     "preview": "vite preview"
12 |   },
13 |   "dependencies": {
14 |     "@hookform/resolvers": "^3.10.0",
15 |     "@radix-ui/react-accordion": "^1.2.11",
16 |     "@radix-ui/react-alert-dialog": "^1.1.14",
17 |     "@radix-ui/react-aspect-ratio": "^1.1.7",
18 |     "@radix-ui/react-avatar": "^1.1.10",
19 |     "@radix-ui/react-checkbox": "^1.3.2",
20 |     "@radix-ui/react-collapsible": "^1.1.11",
21 |     "@radix-ui/react-context-menu": "^2.2.15",
22 |     "@radix-ui/react-dialog": "^1.1.14",
23 |     "@radix-ui/react-dropdown-menu": "^2.1.15",
24 |     "@radix-ui/react-hover-card": "^1.1.14",
25 |     "@radix-ui/react-label": "^2.1.7",
26 |     "@radix-ui/react-menubar": "^1.1.15",
27 |     "@radix-ui/react-navigation-menu": "^1.2.13",
28 |     "@radix-ui/react-popover": "^1.1.14",
29 |     "@radix-ui/react-progress": "^1.1.7",
30 |     "@radix-ui/react-radio-group": "^1.3.7",
31 |     "@radix-ui/react-scroll-area": "^1.2.9",
32 |     "@radix-ui/react-select": "^2.2.5",
33 |     "@radix-ui/react-separator": "^1.1.7",
34 |     "@radix-ui/react-slider": "^1.3.5",
35 |     "@radix-ui/react-slot": "^1.2.3",
36 |     "@radix-ui/react-switch": "^1.2.5",
37 |     "@radix-ui/react-tabs": "^1.1.12",
38 |     "@radix-ui/react-toast": "^1.2.14",
39 |     "@radix-ui/react-toggle": "^1.1.9",
40 |     "@radix-ui/react-toggle-group": "^1.1.10",
41 |     "@radix-ui/react-tooltip": "^1.2.7",
42 |     "@tanstack/react-query": "^5.83.0",
43 |     "axios": "^1.12.1",
44 |     "class-variance-authority": "^0.7.1",
45 |     "clsx": "^2.1.1",
46 |     "cmdk": "^1.1.1",
47 |     "date-fns": "^3.6.0",
48 |     "embla-carousel-react": "^8.6.0",
49 |     "input-otp": "^1.4.2",
50 |     "lucide-react": "^0.462.0",
51 |     "next-themes": "^0.3.0",
52 |     "react": "^18.3.1",
53 |     "react-day-picker": "^8.10.1",
54 |     "react-dom": "^18.3.1",
55 |     "react-hook-form": "^7.61.1",
56 |     "react-resizable-panels": "^2.1.9",
57 |     "react-router-dom": "^6.30.1",
58 |     "recharts": "^2.15.4",
59 |     "sonner": "^1.7.4",
60 |     "tailwind-merge": "^2.6.0",
61 |     "tailwindcss-animate": "^1.0.7",
62 |     "vaul": "^0.9.9",
63 |     "zod": "^3.25.76"
64 |   },
65 |   "devDependencies": {
66 |     "@eslint/js": "^9.32.0",
67 |     "@tailwindcss/typography": "^0.5.16",
68 |     "@types/node": "^22.16.5",
69 |     "@types/react": "^18.3.23",
70 |     "@types/react-dom": "^18.3.7",
71 |     "@vitejs/plugin-react-swc": "^3.11.0",
72 |     "autoprefixer": "^10.4.21",
73 |     "eslint": "^9.32.0",
74 |     "eslint-plugin-react-hooks": "^5.2.0",
75 |     "eslint-plugin-react-refresh": "^0.4.20",
76 |     "globals": "^15.15.0",
77 |     "lovable-tagger": "^1.1.9",
78 |     "postcss": "^8.5.6",
79 |     "tailwindcss": "^3.4.17",
80 |     "typescript": "^5.8.3",
81 |     "typescript-eslint": "^8.38.0",
82 |     "vite": "^5.4.19"
83 |   }
84 | }
85 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/postcss.config.js:
--------------------------------------------------------------------------------
1 | export default {
2 |   plugins: {
3 |     tailwindcss: {},
4 |     autoprefixer: {},
5 |   },
6 | };
7 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/public/favicon.ico:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/truthlens-landing-page-main/public/favicon.ico


--------------------------------------------------------------------------------
/truthlens-landing-page-main/public/placeholder.svg:
--------------------------------------------------------------------------------
1 | <svg xmlns="http://www.w3.org/2000/svg" width="1200" height="1200" fill="none"><rect width="1200" height="1200" fill="#EAEAEA" rx="3"/><g opacity=".5"><g opacity=".5"><path fill="#FAFAFA" d="M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z"/><path stroke="#C9C9C9" stroke-width="2.418" d="M600.709 736.5c-75.454 0-136.621-61.167-136.621-136.62 0-75.454 61.167-136.621 136.621-136.621 75.453 0 136.62 61.167 136.62 136.621 0 75.453-61.167 136.62-136.62 136.62Z"/></g><path stroke="url(#a)" stroke-width="2.418" d="M0-1.209h553.581" transform="scale(1 -1) rotate(45 1163.11 91.165)"/><path stroke="url(#b)" stroke-width="2.418" d="M404.846 598.671h391.726"/><path stroke="url(#c)" stroke-width="2.418" d="M599.5 795.742V404.017"/><path stroke="url(#d)" stroke-width="2.418" d="m795.717 796.597-391.441-391.44"/><path fill="#fff" d="M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z"/><g clip-path="url(#e)"><path fill="#666" fill-rule="evenodd" d="M616.426 586.58h-31.434v16.176l3.553-3.554.531-.531h9.068l.074-.074 8.463-8.463h2.565l7.18 7.181V586.58Zm-15.715 14.654 3.698 3.699 1.283 1.282-2.565 2.565-1.282-1.283-5.2-5.199h-6.066l-5.514 5.514-.073.073v2.876a2.418 2.418 0 0 0 2.418 2.418h26.598a2.418 2.418 0 0 0 2.418-2.418v-8.317l-8.463-8.463-7.181 7.181-.071.072Zm-19.347 5.442v4.085a6.045 6.045 0 0 0 6.046 6.045h26.598a6.044 6.044 0 0 0 6.045-6.045v-7.108l1.356-1.355-1.282-1.283-.074-.073v-17.989h-38.689v23.43l-.146.146.146.147Z" clip-rule="evenodd"/></g><path stroke="#C9C9C9" stroke-width="2.418" d="M600.709 656.704c-31.384 0-56.825-25.441-56.825-56.824 0-31.384 25.441-56.825 56.825-56.825 31.383 0 56.824 25.441 56.824 56.825 0 31.383-25.441 56.824-56.824 56.824Z"/></g><defs><linearGradient id="a" x1="554.061" x2="-.48" y1=".083" y2=".087" gradientUnits="userSpaceOnUse"><stop stop-color="#C9C9C9" stop-opacity="0"/><stop offset=".208" stop-color="#C9C9C9"/><stop offset=".792" stop-color="#C9C9C9"/><stop offset="1" stop-color="#C9C9C9" stop-opacity="0"/></linearGradient><linearGradient id="b" x1="796.912" x2="404.507" y1="599.963" y2="599.965" gradientUnits="userSpaceOnUse"><stop stop-color="#C9C9C9" stop-opacity="0"/><stop offset=".208" stop-color="#C9C9C9"/><stop offset=".792" stop-color="#C9C9C9"/><stop offset="1" stop-color="#C9C9C9" stop-opacity="0"/></linearGradient><linearGradient id="c" x1="600.792" x2="600.794" y1="403.677" y2="796.082" gradientUnits="userSpaceOnUse"><stop stop-color="#C9C9C9" stop-opacity="0"/><stop offset=".208" stop-color="#C9C9C9"/><stop offset=".792" stop-color="#C9C9C9"/><stop offset="1" stop-color="#C9C9C9" stop-opacity="0"/></linearGradient><linearGradient id="d" x1="404.85" x2="796.972" y1="403.903" y2="796.02" gradientUnits="userSpaceOnUse"><stop stop-color="#C9C9C9" stop-opacity="0"/><stop offset=".208" stop-color="#C9C9C9"/><stop offset=".792" stop-color="#C9C9C9"/><stop offset="1" stop-color="#C9C9C9" stop-opacity="0"/></linearGradient><clipPath id="e"><path fill="#fff" d="M581.364 580.535h38.689v38.689h-38.689z"/></clipPath></defs></svg>


--------------------------------------------------------------------------------
/truthlens-landing-page-main/public/robots.txt:
--------------------------------------------------------------------------------
 1 | User-agent: Googlebot
 2 | Allow: /
 3 | 
 4 | User-agent: Bingbot
 5 | Allow: /
 6 | 
 7 | User-agent: Twitterbot
 8 | Allow: /
 9 | 
10 | User-agent: facebookexternalhit
11 | Allow: /
12 | 
13 | User-agent: *
14 | Allow: /
15 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/App.css:
--------------------------------------------------------------------------------
 1 | #root {
 2 |   max-width: 1280px;
 3 |   margin: 0 auto;
 4 |   padding: 2rem;
 5 |   text-align: center;
 6 | }
 7 | 
 8 | .logo {
 9 |   height: 6em;
10 |   padding: 1.5em;
11 |   will-change: filter;
12 |   transition: filter 300ms;
13 | }
14 | .logo:hover {
15 |   filter: drop-shadow(0 0 2em #646cffaa);
16 | }
17 | .logo.react:hover {
18 |   filter: drop-shadow(0 0 2em #61dafbaa);
19 | }
20 | 
21 | @keyframes logo-spin {
22 |   from {
23 |     transform: rotate(0deg);
24 |   }
25 |   to {
26 |     transform: rotate(360deg);
27 |   }
28 | }
29 | 
30 | @media (prefers-reduced-motion: no-preference) {
31 |   a:nth-of-type(2) .logo {
32 |     animation: logo-spin infinite 20s linear;
33 |   }
34 | }
35 | 
36 | .card {
37 |   padding: 2em;
38 | }
39 | 
40 | .read-the-docs {
41 |   color: #888;
42 | }
43 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/App.tsx:
--------------------------------------------------------------------------------
 1 | import { Toaster } from "@/components/ui/toaster";
 2 | import { Toaster as Sonner } from "@/components/ui/sonner";
 3 | import { TooltipProvider } from "@/components/ui/tooltip";
 4 | import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
 5 | import { BrowserRouter, Routes, Route } from "react-router-dom";
 6 | import Index from "./pages/Index";
 7 | import Archive from "./pages/Archive";
 8 | import Authority from "./pages/Authority";
 9 | import Learn from "./pages/Learn";
10 | import Results from "./pages/Results";
11 | import NotFound from "./pages/NotFound";
12 | 
13 | const queryClient = new QueryClient();
14 | 
15 | const App = () => (
16 |   <QueryClientProvider client={queryClient}>
17 |     <TooltipProvider>
18 |       <Toaster />
19 |       <Sonner />
20 |       <BrowserRouter>
21 |         <Routes>
22 |           <Route path="/" element={<Index />} />
23 |           <Route path="/archive" element={<Archive />} />
24 |           <Route path="/authority" element={<Authority />} />
25 |           <Route path="/learn" element={<Learn />} />
26 |           <Route path="/results" element={<Results />} />
27 |           {/* ADD ALL CUSTOM ROUTES ABOVE THE CATCH-ALL "*" ROUTE */}
28 |           <Route path="*" element={<NotFound />} />
29 |         </Routes>
30 |       </BrowserRouter>
31 |     </TooltipProvider>
32 |   </QueryClientProvider>
33 | );
34 | 
35 | export default App;
36 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/api/client.ts:
--------------------------------------------------------------------------------
 1 | // src/api/client.ts
 2 | export const API_BASE = import.meta.env.VITE_API_BASE_URL as string;
 3 | 
 4 | export async function postJson<T>(path: string, body: unknown): Promise<T> {
 5 |   const res = await fetch(`${API_BASE}${path}`, {
 6 |     method: 'POST',
 7 |     headers: { 'Content-Type': 'application/json' },
 8 |     body: JSON.stringify(body),
 9 |   });
10 |   if (!res.ok) {
11 |     const msg = await res.text().catch(() => '');
12 |     throw new Error(`HTTP ${res.status} ${msg}`.trim());
13 |   }
14 |   return res.json() as Promise<T>;
15 | }
16 | 
17 | /**
18 |  * streamAnalysis: connect to the /verify-stream SSE endpoint,
19 |  * invoke onMessage for each event with parsed data,
20 |  * and onComplete when the stream ends.
21 |  */
22 | export async function streamAnalysis(
23 |   path: string,
24 |   body: unknown,
25 |   onMessage: (data: any) => void,
26 |   onError: (err: Error) => void,
27 |   onComplete?: () => void
28 | ): Promise<void> {
29 |   const url = `${API_BASE}${path}`;
30 |   try {
31 |     const res = await fetch(url, {
32 |       method: 'POST',
33 |       headers: { 'Content-Type': 'application/json' },
34 |       body: JSON.stringify(body),
35 |     });
36 |     if (!res.ok || !res.body) {
37 |       const msg = await res.text().catch(() => '');
38 |       throw new Error(`HTTP ${res.status} ${msg}`.trim());
39 |     }
40 |     const reader = res.body.getReader();
41 |     const decoder = new TextDecoder('utf-8');
42 |     let buffer = '';
43 | 
44 |     while (true) {
45 |       const { value, done } = await reader.read();
46 |       if (done) break;
47 |       buffer += decoder.decode(value, { stream: true });
48 |       let parts = buffer.split('\n\n');
49 |       buffer = parts.pop()!; // last incomplete chunk
50 |       for (const part of parts) {
51 |         if (part.startsWith('data:')) {
52 |           const payload = part.replace(/^data:\s*/, '').trim();
53 |           try {
54 |             const parsed = JSON.parse(payload);
55 |             onMessage(parsed);
56 |           } catch {
57 |             // ignore non-JSON or heartbeat
58 |           }
59 |         }
60 |       }
61 |     }
62 |     onComplete?.();
63 |   } catch (err: any) {
64 |     onError(err);
65 |   }
66 | }
67 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/assets/brain-icon.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/truthlens-landing-page-main/src/assets/brain-icon.png


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/assets/check-icon.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/truthlens-landing-page-main/src/assets/check-icon.png


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/assets/magnifying-glass.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/truthlens-landing-page-main/src/assets/magnifying-glass.png


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/assets/shield-icon.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/ssagar0805/CrediScope-AI/main/truthlens-landing-page-main/src/assets/shield-icon.png


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/EducationSection.tsx:
--------------------------------------------------------------------------------
 1 | const EducationSection = () => {
 2 |   const educationCards = [
 3 |     {
 4 |       icon: "🔍",
 5 |       title: "Source Verification",
 6 |       description: "Learn to identify credible sources and verify information authenticity",
 7 |       link: "#"
 8 |     },
 9 |     {
10 |       icon: "📸",
11 |       title: "Image Analysis", 
12 |       description: "Detect manipulated images and reverse-search visual content",
13 |       link: "#"
14 |     },
15 |     {
16 |       icon: "📊",
17 |       title: "Data Verification",
18 |       description: "Understand statistics, polls, and data manipulation techniques",
19 |       link: "#"
20 |     },
21 |     {
22 |       icon: "💭",
23 |       title: "Emotional Manipulation",
24 |       description: "Recognize psychological tactics used to spread misinformation",
25 |       link: "#"
26 |     }
27 |   ];
28 | 
29 |   return (
30 |     <section id="education" className="py-16 lg:py-20 bg-background">
31 |       <div className="container mx-auto px-4 lg:px-6">
32 |         <div className="text-center mb-16">
33 |           <h2 className="text-3xl md:text-4xl font-bold text-foreground mb-4">
34 |             Education Center
35 |           </h2>
36 |           <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
37 |             Build your fact-checking skills with our comprehensive learning resources
38 |           </p>
39 |         </div>
40 | 
41 |         <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto">
42 |           {educationCards.map((card) => (
43 |             <div 
44 |               key={card.title}
45 |               className="bg-card rounded-xl shadow-sm border border-border p-6 hover:shadow-md transition-all group cursor-pointer"
46 |               style={{ boxShadow: "var(--card-shadow)" }}
47 |             >
48 |               <div className="text-3xl mb-4">{card.icon}</div>
49 |               
50 |               <h3 className="text-lg font-semibold text-card-foreground mb-3">
51 |                 {card.title}
52 |               </h3>
53 |               
54 |               <p className="text-muted-foreground text-sm leading-relaxed mb-4">
55 |                 {card.description}
56 |               </p>
57 | 
58 |               <a 
59 |                 href={card.link}
60 |                 className="inline-flex items-center text-primary hover:text-primary-hover text-sm font-medium group-hover:translate-x-1 transition-transform"
61 |               >
62 |                 Learn More →
63 |               </a>
64 |             </div>
65 |           ))}
66 |         </div>
67 |       </div>
68 |     </section>
69 |   );
70 | };
71 | 
72 | export default EducationSection;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/FinalCTASection.tsx:
--------------------------------------------------------------------------------
 1 | import { Button } from "@/components/ui/button";
 2 | 
 3 | const FinalCTASection = () => {
 4 |   return (
 5 |     <section className="py-16 lg:py-20 bg-gradient-to-r from-primary/10 to-secondary/10">
 6 |       <div className="container mx-auto px-4 lg:px-6">
 7 |         <div className="max-w-3xl mx-auto text-center">
 8 |           <h2 className="text-3xl md:text-4xl font-bold text-foreground mb-6">
 9 |             Help Build a More Informed India
10 |           </h2>
11 |           <p className="text-lg text-muted-foreground mb-8 leading-relaxed">
12 |             Join thousands of citizens in the fight against misinformation. 
13 |             Every fact-check makes our democracy stronger.
14 |           </p>
15 |           
16 |           <div className="flex flex-col sm:flex-row gap-4 justify-center">
17 |             <Button size="lg" className="bg-primary hover:bg-primary-hover text-primary-foreground px-8">
18 |               Start Fact-Checking
19 |             </Button>
20 |             <Button variant="outline" size="lg" className="px-8">
21 |               Learn More
22 |             </Button>
23 |           </div>
24 |         </div>
25 |       </div>
26 |     </section>
27 |   );
28 | };
29 | 
30 | export default FinalCTASection;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/HeroSection.tsx:
--------------------------------------------------------------------------------
  1 | import { useState } from "react";
  2 | import { useNavigate } from "react-router-dom";
  3 | import { Button } from "@/components/ui/button";
  4 | import axios from "axios";
  5 | import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
  6 | 
  7 | const HeroSection = () => {
  8 |   const [activeTab, setActiveTab] = useState("text");
  9 |   const navigate = useNavigate();
 10 |   const [text, setText] = useState("");
 11 |   const [url, setUrl] = useState("");
 12 |   const [loading, setLoading] = useState(false);
 13 |   const [result, setResult] = useState<any>(null);
 14 |   const API_BASE = import.meta.env.VITE_API_BASE_URL as string;
 15 | 
 16 |   const renderInputField = () => {
 17 |     switch (activeTab) {
 18 |       case "text":
 19 |         return (
 20 |           <textarea 
 21 |             id="tl-input-text" 
 22 |             placeholder="Enter suspicious message, news article, or claim…" 
 23 |             className="w-full min-h-[120px] p-4 border border-input rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-ring bg-background" 
 24 |             value={text} 
 25 |             onChange={(e) => setText(e.target.value)} 
 26 |           />
 27 |         );
 28 |       case "url":
 29 |         return (
 30 |           <input 
 31 |             id="tl-input-url" 
 32 |             type="url" 
 33 |             placeholder="Paste URL of article, post, or content to verify…" 
 34 |             className="w-full p-4 border border-input rounded-lg focus:outline-none focus:ring-2 focus:ring-ring bg-background" 
 35 |             value={url} 
 36 |             onChange={(e) => setUrl(e.target.value)} 
 37 |           />
 38 |         );
 39 |       case "file":
 40 |         return (
 41 |           <div id="tl-input-file" className="w-full p-8 border-2 border-dashed border-input rounded-lg text-center">
 42 |             <p className="text-muted-foreground">Upload image or document for analysis</p>
 43 |             <p className="text-sm text-muted-foreground mt-2">Drag & drop or click to browse</p>
 44 |           </div>
 45 |         );
 46 |       default:
 47 |         return null;
 48 |     }
 49 |   };
 50 | 
 51 |   const handleAnalyze = async () => {
 52 |     console.log("handleAnalyze triggered", { activeTab, text, url });
 53 | 
 54 |     try {
 55 |       if (activeTab === "text" && !text.trim()) { 
 56 |         alert("Please enter some text."); 
 57 |         return; 
 58 |       }
 59 |       if (activeTab === "url" && !url.trim()) { 
 60 |         alert("Please enter a URL."); 
 61 |         return; 
 62 |       }
 63 |       if (activeTab === "file") { 
 64 |         alert("File upload will be added next."); 
 65 |         return; 
 66 |       }
 67 | 
 68 |       setLoading(true);
 69 | 
 70 |       // FIXED: Send JSON body matching your new backend VerifyRequest model
 71 |       const requestBody = {
 72 |         content_type: activeTab, // "text" or "url"
 73 |         content: activeTab === "text" ? text : url,
 74 |         language: "en"
 75 |       };
 76 | 
 77 |       const analyzePath = `${API_BASE}/api/v1/verify`;
 78 |       
 79 |       console.log("Calling POST:", analyzePath, requestBody);
 80 |       
 81 |       const res = await axios.post(analyzePath, requestBody, {
 82 |         headers: { "Content-Type": "application/json" }
 83 |       });
 84 | 
 85 |       const data = res.data;
 86 |       const confidence_percent = Math.round((data?.confidence_score || 0) * 100);
 87 |       const navState = { 
 88 |         ...data, 
 89 |         confidence_percent,
 90 |         content: activeTab === "text" ? text : url,  // ADD THIS LINE
 91 |         text: activeTab === "text" ? text : "",      // ADD THIS LINE
 92 |         url: activeTab === "url" ? url : ""          // ADD THIS LINE
 93 |       };
 94 |       
 95 |       setResult(navState);
 96 |       
 97 |       navigate(
 98 |         { pathname: "/results", search: `?analysis_id=${data.analysis_id || ""}` },
 99 |         { state: navState }
100 |       );
101 |       console.log("Verify response:", res.data);
102 |     } catch (err: any) {
103 |       console.error(err);
104 |       alert(`Error: ${err?.response?.status || ""} ${err?.message || "Request failed"}`);
105 |     } finally {
106 |       setLoading(false);
107 |     }
108 |   };
109 | 
110 |   return (
111 |     <section className="relative py-20 lg:py-24 overflow-hidden">
112 |       {/* Gradient Background */}
113 |       <div 
114 |         className="absolute inset-0 bg-gradient-to-br from-truthlens-primary to-truthlens-secondary"
115 |         style={{
116 |           background: "var(--truthlens-gradient)"
117 |         }}
118 |       />
119 |       
120 |       <div className="relative z-10 container mx-auto px-4 lg:px-6">
121 |         <div className="max-w-4xl mx-auto text-center text-white">
122 |           {/* Main Headlines */}
123 |           <div className="mb-8">
124 |             <h1 className="text-3xl md:text-5xl lg:text-6xl font-bold mb-4 leading-tight">
125 |               See Reality as It Is
126 |             </h1>
127 |             <h2 className="text-2xl md:text-3xl lg:text-4xl font-semibold mb-6 text-orange-200">
128 |               Empowering India with unbiased truth
129 |             </h2>
130 |             <p className="text-lg md:text-xl text-blue-100 mb-8">
131 |               AI-powered fact-checking for every Indian citizen
132 |             </p>
133 |           </div>
134 | 
135 |           {/* Stats Row */}
136 |           <div className="flex flex-col md:flex-row justify-center gap-8 md:gap-16 mb-12">
137 |             <div className="text-center">
138 |               <div className="text-3xl md:text-4xl font-bold">10K+</div>
139 |               <div className="text-sm md:text-base text-blue-200">Content Analyzed</div>
140 |             </div>
141 |             <div className="text-center">
142 |               <div className="text-3xl md:text-4xl font-bold">95%</div>
143 |               <div className="text-sm md:text-base text-blue-200">Accuracy Rate</div>
144 |             </div>
145 |             <div className="text-center">
146 |               <div className="text-3xl md:text-4xl font-bold">24/7</div>
147 |               <div className="text-sm md:text-base text-blue-200">AI Monitoring</div>
148 |             </div>
149 |           </div>
150 | 
151 |           {/* Input Card */}
152 |           <div className="max-w-2xl mx-auto bg-card rounded-xl shadow-lg p-6">
153 |             <h3 className="text-xl font-semibold text-card-foreground mb-4">Start Your Fact-Check</h3>
154 |             
155 |             {/* Tabs */}
156 |             <div className="flex bg-secondary rounded-lg p-1 mb-4">
157 |               <button
158 |                 onClick={() => setActiveTab("text")}
159 |                 className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-all ${
160 |                   activeTab === "text"
161 |                     ? "bg-primary text-primary-foreground shadow-sm"
162 |                     : "text-secondary-foreground hover:bg-secondary/80"
163 |                 }`}
164 |                 aria-selected={activeTab === "text"}
165 |               >
166 |                 Text
167 |               </button>
168 |               <button
169 |                 onClick={() => setActiveTab("url")}
170 |                 className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-all ${
171 |                   activeTab === "url"
172 |                     ? "bg-primary text-primary-foreground shadow-sm"
173 |                     : "text-secondary-foreground hover:bg-secondary/80"
174 |                 }`}
175 |                 aria-selected={activeTab === "url"}
176 |               >
177 |                 URL
178 |               </button>
179 |               <button
180 |                 onClick={() => setActiveTab("file")}
181 |                 className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-all ${
182 |                   activeTab === "file"
183 |                     ? "bg-primary text-primary-foreground shadow-sm"
184 |                     : "text-secondary-foreground hover:bg-secondary/80"
185 |                 }`}
186 |                 aria-selected={activeTab === "file"}
187 |               >
188 |                 File
189 |               </button>
190 |             </div>
191 | 
192 |             {/* Input Field */}
193 |             <div className="mb-6">
194 |               {renderInputField()}
195 |             </div>
196 | 
197 |             {/* Action Buttons */}
198 |             <div className="flex flex-col sm:flex-row gap-3 justify-center">
199 |               <Button
200 |                 size="lg"
201 |                 className="bg-primary hover:bg-primary-hover text-primary-foreground"
202 |                 onClick={handleAnalyze}
203 |                 disabled={loading}
204 |               >
205 |                 {loading ? "Analyzing..." : "Start Fact-Checking"}
206 |               </Button>
207 |               <Button variant="outline" size="lg" className="border-2 border-card-foreground/20 text-card-foreground hover:bg-card-foreground hover:text-card">
208 |                 Learn More
209 |               </Button>
210 |             </div>
211 | 
212 |             {/* Result Card */}
213 |             {result && (
214 |               <Card className="mt-6 text-left">
215 |                 <CardHeader>
216 |                   <CardTitle className="flex items-center gap-3">
217 |                     <span>Analysis Result</span>
218 |                     <span
219 |                       className={`px-3 py-1 rounded-full text-sm font-semibold ${
220 |                         result.verdict === "true"
221 |                           ? "bg-green-500/10 text-green-600"
222 |                           : result.verdict === "false"
223 |                           ? "bg-red-500/10 text-red-600"
224 |                           : "bg-amber-500/10 text-amber-600"
225 |                       }`}
226 |                     >
227 |                       {(result.verdict || "inconclusive").toUpperCase()}
228 |                     </span>
229 |                   </CardTitle>
230 |                 </CardHeader>
231 |                 <CardContent className="space-y-3">
232 |                   <div className="text-sm text-muted-foreground">
233 |                     Confidence: <span className="font-semibold text-foreground">{result.confidence_percent}%</span>
234 |                   </div>
235 |                   {result.summary && (
236 |                     <p className="text-foreground">{result.summary}</p>
237 |                   )}
238 |                   {result.analysis_id && (
239 |                     <div className="text-xs text-muted-foreground">
240 |                       ID: {result.analysis_id}
241 |                     </div>
242 |                   )}
243 |                 </CardContent>
244 |               </Card>
245 |             )}
246 |           </div>
247 |         </div>
248 |       </div>
249 |     </section>
250 |   );
251 | };
252 | 
253 | export default HeroSection;
254 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/HowItWorksSection.tsx:
--------------------------------------------------------------------------------
 1 | import shieldIcon from "@/assets/shield-icon.png";
 2 | import brainIcon from "@/assets/brain-icon.png";
 3 | import checkIcon from "@/assets/check-icon.png";
 4 | 
 5 | const HowItWorksSection = () => {
 6 |   const steps = [
 7 |     {
 8 |       icon: shieldIcon,
 9 |       title: "Submit",
10 |       description: "Submit suspicious content for AI-powered analysis"
11 |     },
12 |     {
13 |       icon: brainIcon,
14 |       title: "Analyze", 
15 |       description: "Our AI scans multiple sources and fact-checks the claim"
16 |     },
17 |     {
18 |       icon: checkIcon,
19 |       title: "Act",
20 |       description: "Get verified results and take informed action"
21 |     }
22 |   ];
23 | 
24 |   return (
25 |     <section id="how-it-works" className="py-16 lg:py-20 bg-background">
26 |       <div className="container mx-auto px-4 lg:px-6">
27 |         <div className="text-center mb-16">
28 |           <h2 className="text-3xl md:text-4xl font-bold text-foreground mb-4">
29 |             How It Works
30 |           </h2>
31 |           <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
32 |             Three simple steps to verify any content and protect yourself from misinformation
33 |           </p>
34 |         </div>
35 | 
36 |         <div className="grid md:grid-cols-3 gap-8 max-w-4xl mx-auto">
37 |           {steps.map((step, index) => (
38 |             <div key={step.title} className="text-center group">
39 |               <div className="relative mb-6">
40 |                 <div className="w-20 h-20 mx-auto bg-primary/10 rounded-full flex items-center justify-center group-hover:bg-primary/20 transition-colors">
41 |                   <img 
42 |                     src={step.icon} 
43 |                     alt={`${step.title} icon`}
44 |                     className="w-10 h-10 opacity-80"
45 |                   />
46 |                 </div>
47 |                 {index < steps.length - 1 && (
48 |                   <div className="hidden md:block absolute top-10 left-full w-full h-0.5 bg-border -translate-y-0.5"></div>
49 |                 )}
50 |               </div>
51 |               <h3 className="text-xl font-semibold text-foreground mb-2">{step.title}</h3>
52 |               <p className="text-muted-foreground">{step.description}</p>
53 |             </div>
54 |           ))}
55 |         </div>
56 |       </div>
57 |     </section>
58 |   );
59 | };
60 | 
61 | export default HowItWorksSection;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/TrendsSection.tsx:
--------------------------------------------------------------------------------
 1 | const TrendsSection = () => {
 2 |   const trends = [
 3 |     {
 4 |       category: "Health",
 5 |       emoji: "🏥",
 6 |       title: "Health Misinformation",
 7 |       description: "False medical claims and unverified health advice spreading across social media platforms",
 8 |       cases: 247,
 9 |       bgColor: "bg-green-500/10",
10 |       textColor: "text-green-600"
11 |     },
12 |     {
13 |       category: "Political",
14 |       emoji: "🗳️", 
15 |       title: "Political Claims",
16 |       description: "Misleading political statements and fabricated news about government policies and leaders",
17 |       cases: 189,
18 |       bgColor: "bg-indigo-500/10", 
19 |       textColor: "text-indigo-600"
20 |     },
21 |     {
22 |       category: "Financial",
23 |       emoji: "💰",
24 |       title: "Financial Scams", 
25 |       description: "Investment frauds, fake schemes, and misleading financial advice targeting Indian investors",
26 |       cases: 156,
27 |       bgColor: "bg-amber-500/10",
28 |       textColor: "text-amber-600"
29 |     }
30 |   ];
31 | 
32 |   return (
33 |     <section id="trends" className="py-16 lg:py-20 bg-secondary/30">
34 |       <div className="container mx-auto px-4 lg:px-6">
35 |         <div className="text-center mb-16">
36 |           <h2 className="text-3xl md:text-4xl font-bold text-foreground mb-4">
37 |             Recent Misinformation Trends
38 |           </h2>
39 |           <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
40 |             Stay informed about the latest misinformation patterns affecting India
41 |           </p>
42 |         </div>
43 | 
44 |         <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
45 |           {trends.map((trend) => (
46 |             <div 
47 |               key={trend.category}
48 |               className="bg-card rounded-xl shadow-sm border border-border p-6 hover:shadow-md transition-all group"
49 |               style={{ boxShadow: "var(--card-shadow)" }}
50 |             >
51 |               <div className="flex items-start justify-between mb-4">
52 |                 <div className="text-3xl">{trend.emoji}</div>
53 |                 <div className={`px-3 py-1 ${trend.bgColor} ${trend.textColor} rounded-full text-sm font-semibold`}>
54 |                   CASES THIS WEEK: {trend.cases}
55 |                 </div>
56 |               </div>
57 |               
58 |               <h3 className="text-xl font-semibold text-card-foreground mb-3">
59 |                 {trend.title}
60 |               </h3>
61 |               
62 |               <p className="text-muted-foreground text-sm leading-relaxed">
63 |                 {trend.description}
64 |               </p>
65 |             </div>
66 |           ))}
67 |         </div>
68 |       </div>
69 |     </section>
70 |   );
71 | };
72 | 
73 | export default TrendsSection;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/TruthLensFooter.tsx:
--------------------------------------------------------------------------------
  1 | import magnifyingGlassIcon from "@/assets/magnifying-glass.png";
  2 | 
  3 | const CrediScopeAIFooter = () => {
  4 |   const quickLinks = [
  5 |     { name: "Home", href: "#" },
  6 |     { name: "Archive", href: "#trends" },
  7 |     { name: "Learn", href: "#education" },
  8 |     { name: "Authority Dashboard", href: "#authority" }
  9 |   ];
 10 | 
 11 |   const resources = [
 12 |     { name: "Source Verification", href: "#" },
 13 |     { name: "Image Analysis", href: "#" },
 14 |     { name: "Data Verification", href: "#" },
 15 |     { name: "Emotional Manipulation", href: "#" }
 16 |   ];
 17 | 
 18 |   const factCheckPartners = [
 19 |     { name: "FactChecker.in", href: "#" },
 20 |     { name: "BOOM Live", href: "#" },
 21 |     { name: "Alt News", href: "#" },
 22 |     { name: "Vishvas News", href: "#" }
 23 |   ];
 24 | 
 25 |   const aboutLinks = [
 26 |     { name: "About CrediScope AI", href: "#" },
 27 |     { name: "Contact Us", href: "#" },
 28 |     { name: "Privacy Policy", href: "#" },
 29 |     { name: "Terms of Service", href: "#" }
 30 |   ];
 31 | 
 32 |   return (
 33 |     <footer className="bg-foreground text-background">
 34 |       <div className="container mx-auto px-4 lg:px-6 py-12">
 35 |         <div className="grid md:grid-cols-2 lg:grid-cols-5 gap-8">
 36 |           {/* Brand Section */}
 37 |           <div className="lg:col-span-1">
 38 |             <div className="flex items-center gap-2 mb-4">
 39 |               <img 
 40 |                 src={magnifyingGlassIcon} 
 41 |                 alt="CrediScope AI Logo"
 42 |                 className="h-8 w-8 invert"
 43 |               />
 44 |               <span className="text-xl font-bold">CrediScope AI</span>
 45 |             </div>
 46 |             <p className="text-sm text-background/80 leading-relaxed">
 47 |               Empowering India against misinformation through AI-powered fact-checking
 48 |             </p>
 49 |           </div>
 50 | 
 51 |           {/* Quick Links */}
 52 |           <div>
 53 |             <h4 className="font-semibold mb-4 text-background">QUICK LINKS</h4>
 54 |             <ul className="space-y-2">
 55 |               {quickLinks.map((link) => (
 56 |                 <li key={link.name}>
 57 |                   <a href={link.href} className="text-sm text-background/80 hover:text-background transition-colors">
 58 |                     {link.name}
 59 |                   </a>
 60 |                 </li>
 61 |               ))}
 62 |             </ul>
 63 |           </div>
 64 | 
 65 |           {/* Resources */}
 66 |           <div>
 67 |             <h4 className="font-semibold mb-4 text-background">RESOURCES</h4>
 68 |             <ul className="space-y-2">
 69 |               {resources.map((resource) => (
 70 |                 <li key={resource.name}>
 71 |                   <a href={resource.href} className="text-sm text-background/80 hover:text-background transition-colors">
 72 |                     {resource.name}
 73 |                   </a>
 74 |                 </li>
 75 |               ))}
 76 |             </ul>
 77 |           </div>
 78 | 
 79 |           {/* Fact-Check Partners */}
 80 |           <div>
 81 |             <h4 className="font-semibold mb-4 text-background">FACT-CHECK PARTNERS</h4>
 82 |             <ul className="space-y-2">
 83 |               {factCheckPartners.map((partner) => (
 84 |                 <li key={partner.name}>
 85 |                   <a href={partner.href} className="text-sm text-primary hover:text-primary-hover transition-colors">
 86 |                     {partner.name}
 87 |                   </a>
 88 |                 </li>
 89 |               ))}
 90 |             </ul>
 91 |           </div>
 92 | 
 93 |           {/* About */}
 94 |           <div>
 95 |             <h4 className="font-semibold mb-4 text-background">ABOUT</h4>
 96 |             <ul className="space-y-2">
 97 |               {aboutLinks.map((link) => (
 98 |                 <li key={link.name}>
 99 |                   <a href={link.href} className="text-sm text-background/80 hover:text-background transition-colors">
100 |                     {link.name}
101 |                   </a>
102 |                 </li>
103 |               ))}
104 |             </ul>
105 |           </div>
106 |         </div>
107 | 
108 |         <div className="border-t border-background/20 mt-8 pt-8">
109 |           <div className="flex flex-col md:flex-row justify-between items-center gap-4">
110 |             <p className="text-sm text-background/60">
111 |               © 2024 CrediScope AI. Built with ❤️ for a more informed India.
112 |             </p>
113 |             <p className="text-sm text-background/60">
114 |               Powered by AI • Verified by Experts • Trusted by Citizens
115 |             </p>
116 |           </div>
117 |         </div>
118 |       </div>
119 |     </footer>
120 |   );
121 | };
122 | 
123 | export default CrediScopeAIFooter;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/TruthLensHeader.tsx:
--------------------------------------------------------------------------------
 1 | import { useState } from "react";
 2 | import { Button } from "@/components/ui/button";
 3 | import { Link, useLocation } from "react-router-dom";
 4 | import magnifyingGlassIcon from "@/assets/magnifying-glass.png";
 5 | 
 6 | const CrediScopeAIHeader = () => {
 7 |   const location = useLocation();
 8 |   const [activeSection, setActiveSection] = useState("home");
 9 | 
10 |   const scrollToSection = (sectionId: string) => {
11 |     setActiveSection(sectionId);
12 |     if (sectionId === "home") {
13 |       window.scrollTo({ top: 0, behavior: "smooth" });
14 |     } else {
15 |       const element = document.getElementById(sectionId);
16 |       if (element) {
17 |         element.scrollIntoView({ behavior: "smooth" });
18 |       }
19 |     }
20 |   };
21 | 
22 |   const isActive = (path: string) => location.pathname === path;
23 | 
24 |   return (
25 |     <header className="sticky top-0 z-50 bg-background/80 backdrop-blur-md border-b border-border">
26 |       <div className="container mx-auto px-4 lg:px-6">
27 |         <div className="flex items-center justify-between h-16">
28 |           {/* Logo */}
29 |           <Link to="/" className="flex items-center gap-2">
30 |             <img 
31 |               src={magnifyingGlassIcon} 
32 |               alt="CrediScopeAI Logo"
33 |               className="h-8 w-8"
34 |             />
35 |             <span className="text-xl font-bold text-foreground">CrediScope AI</span>
36 |           </Link>
37 | 
38 |           {/* Navigation */}
39 |           <nav className="hidden md:flex items-center gap-8">
40 |             <Link
41 |               to="/"
42 |               className={`text-sm font-medium transition-colors hover:text-primary ${
43 |                 isActive("/") ? "text-primary border-b-2 border-primary pb-1" : "text-muted-foreground"
44 |               }`}
45 |             >
46 |               Home
47 |             </Link>
48 |             <Link
49 |               to="/archive"
50 |               className={`text-sm font-medium transition-colors hover:text-primary ${
51 |                 isActive("/archive") ? "text-primary border-b-2 border-primary pb-1" : "text-muted-foreground"
52 |               }`}
53 |             >
54 |               Archive
55 |             </Link>
56 |             <Link
57 |               to="/learn"
58 |               className={`text-sm font-medium transition-colors hover:text-primary ${
59 |                 isActive("/learn") ? "text-primary border-b-2 border-primary pb-1" : "text-muted-foreground"
60 |               }`}
61 |             >
62 |               Learn
63 |             </Link>
64 |             <Link
65 |               to="/authority"
66 |               className={`text-sm font-medium transition-colors hover:text-primary ${
67 |                 isActive("/authority") ? "text-primary border-b-2 border-primary pb-1" : "text-muted-foreground"
68 |               }`}
69 |             >
70 |               Authority
71 |             </Link>
72 |             
73 |             {/* Language Chip */}
74 |             <div className="px-3 py-1 bg-secondary text-secondary-foreground rounded-full text-sm font-medium">
75 |               हिं
76 |             </div>
77 |           </nav>
78 | 
79 |           {/* Mobile Menu Button */}
80 |           <Button variant="outline" size="sm" className="md:hidden">
81 |             Menu
82 |           </Button>
83 |         </div>
84 |       </div>
85 |     </header>
86 |   );
87 | };
88 | 
89 | export default CrediScopeAIHeader;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/accordion.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as AccordionPrimitive from "@radix-ui/react-accordion";
 3 | import { ChevronDown } from "lucide-react";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | 
 7 | const Accordion = AccordionPrimitive.Root;
 8 | 
 9 | const AccordionItem = React.forwardRef<
10 |   React.ElementRef<typeof AccordionPrimitive.Item>,
11 |   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
12 | >(({ className, ...props }, ref) => (
13 |   <AccordionPrimitive.Item ref={ref} className={cn("border-b", className)} {...props} />
14 | ));
15 | AccordionItem.displayName = "AccordionItem";
16 | 
17 | const AccordionTrigger = React.forwardRef<
18 |   React.ElementRef<typeof AccordionPrimitive.Trigger>,
19 |   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
20 | >(({ className, children, ...props }, ref) => (
21 |   <AccordionPrimitive.Header className="flex">
22 |     <AccordionPrimitive.Trigger
23 |       ref={ref}
24 |       className={cn(
25 |         "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
26 |         className,
27 |       )}
28 |       {...props}
29 |     >
30 |       {children}
31 |       <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200" />
32 |     </AccordionPrimitive.Trigger>
33 |   </AccordionPrimitive.Header>
34 | ));
35 | AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;
36 | 
37 | const AccordionContent = React.forwardRef<
38 |   React.ElementRef<typeof AccordionPrimitive.Content>,
39 |   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
40 | >(({ className, children, ...props }, ref) => (
41 |   <AccordionPrimitive.Content
42 |     ref={ref}
43 |     className="overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
44 |     {...props}
45 |   >
46 |     <div className={cn("pb-4 pt-0", className)}>{children}</div>
47 |   </AccordionPrimitive.Content>
48 | ));
49 | 
50 | AccordionContent.displayName = AccordionPrimitive.Content.displayName;
51 | 
52 | export { Accordion, AccordionItem, AccordionTrigger, AccordionContent };
53 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/alert-dialog.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog";
  3 | 
  4 | import { cn } from "@/lib/utils";
  5 | import { buttonVariants } from "@/components/ui/button";
  6 | 
  7 | const AlertDialog = AlertDialogPrimitive.Root;
  8 | 
  9 | const AlertDialogTrigger = AlertDialogPrimitive.Trigger;
 10 | 
 11 | const AlertDialogPortal = AlertDialogPrimitive.Portal;
 12 | 
 13 | const AlertDialogOverlay = React.forwardRef<
 14 |   React.ElementRef<typeof AlertDialogPrimitive.Overlay>,
 15 |   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>
 16 | >(({ className, ...props }, ref) => (
 17 |   <AlertDialogPrimitive.Overlay
 18 |     className={cn(
 19 |       "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
 20 |       className,
 21 |     )}
 22 |     {...props}
 23 |     ref={ref}
 24 |   />
 25 | ));
 26 | AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;
 27 | 
 28 | const AlertDialogContent = React.forwardRef<
 29 |   React.ElementRef<typeof AlertDialogPrimitive.Content>,
 30 |   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>
 31 | >(({ className, ...props }, ref) => (
 32 |   <AlertDialogPortal>
 33 |     <AlertDialogOverlay />
 34 |     <AlertDialogPrimitive.Content
 35 |       ref={ref}
 36 |       className={cn(
 37 |         "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
 38 |         className,
 39 |       )}
 40 |       {...props}
 41 |     />
 42 |   </AlertDialogPortal>
 43 | ));
 44 | AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;
 45 | 
 46 | const AlertDialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
 47 |   <div className={cn("flex flex-col space-y-2 text-center sm:text-left", className)} {...props} />
 48 | );
 49 | AlertDialogHeader.displayName = "AlertDialogHeader";
 50 | 
 51 | const AlertDialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
 52 |   <div className={cn("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className)} {...props} />
 53 | );
 54 | AlertDialogFooter.displayName = "AlertDialogFooter";
 55 | 
 56 | const AlertDialogTitle = React.forwardRef<
 57 |   React.ElementRef<typeof AlertDialogPrimitive.Title>,
 58 |   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>
 59 | >(({ className, ...props }, ref) => (
 60 |   <AlertDialogPrimitive.Title ref={ref} className={cn("text-lg font-semibold", className)} {...props} />
 61 | ));
 62 | AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;
 63 | 
 64 | const AlertDialogDescription = React.forwardRef<
 65 |   React.ElementRef<typeof AlertDialogPrimitive.Description>,
 66 |   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>
 67 | >(({ className, ...props }, ref) => (
 68 |   <AlertDialogPrimitive.Description ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
 69 | ));
 70 | AlertDialogDescription.displayName = AlertDialogPrimitive.Description.displayName;
 71 | 
 72 | const AlertDialogAction = React.forwardRef<
 73 |   React.ElementRef<typeof AlertDialogPrimitive.Action>,
 74 |   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>
 75 | >(({ className, ...props }, ref) => (
 76 |   <AlertDialogPrimitive.Action ref={ref} className={cn(buttonVariants(), className)} {...props} />
 77 | ));
 78 | AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;
 79 | 
 80 | const AlertDialogCancel = React.forwardRef<
 81 |   React.ElementRef<typeof AlertDialogPrimitive.Cancel>,
 82 |   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>
 83 | >(({ className, ...props }, ref) => (
 84 |   <AlertDialogPrimitive.Cancel
 85 |     ref={ref}
 86 |     className={cn(buttonVariants({ variant: "outline" }), "mt-2 sm:mt-0", className)}
 87 |     {...props}
 88 |   />
 89 | ));
 90 | AlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName;
 91 | 
 92 | export {
 93 |   AlertDialog,
 94 |   AlertDialogPortal,
 95 |   AlertDialogOverlay,
 96 |   AlertDialogTrigger,
 97 |   AlertDialogContent,
 98 |   AlertDialogHeader,
 99 |   AlertDialogFooter,
100 |   AlertDialogTitle,
101 |   AlertDialogDescription,
102 |   AlertDialogAction,
103 |   AlertDialogCancel,
104 | };
105 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/alert.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import { cva, type VariantProps } from "class-variance-authority";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const alertVariants = cva(
 7 |   "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
 8 |   {
 9 |     variants: {
10 |       variant: {
11 |         default: "bg-background text-foreground",
12 |         destructive: "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
13 |       },
14 |     },
15 |     defaultVariants: {
16 |       variant: "default",
17 |     },
18 |   },
19 | );
20 | 
21 | const Alert = React.forwardRef<
22 |   HTMLDivElement,
23 |   React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
24 | >(({ className, variant, ...props }, ref) => (
25 |   <div ref={ref} role="alert" className={cn(alertVariants({ variant }), className)} {...props} />
26 | ));
27 | Alert.displayName = "Alert";
28 | 
29 | const AlertTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(
30 |   ({ className, ...props }, ref) => (
31 |     <h5 ref={ref} className={cn("mb-1 font-medium leading-none tracking-tight", className)} {...props} />
32 |   ),
33 | );
34 | AlertTitle.displayName = "AlertTitle";
35 | 
36 | const AlertDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(
37 |   ({ className, ...props }, ref) => (
38 |     <div ref={ref} className={cn("text-sm [&_p]:leading-relaxed", className)} {...props} />
39 |   ),
40 | );
41 | AlertDescription.displayName = "AlertDescription";
42 | 
43 | export { Alert, AlertTitle, AlertDescription };
44 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/aspect-ratio.tsx:
--------------------------------------------------------------------------------
1 | import * as AspectRatioPrimitive from "@radix-ui/react-aspect-ratio";
2 | 
3 | const AspectRatio = AspectRatioPrimitive.Root;
4 | 
5 | export { AspectRatio };
6 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/avatar.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as AvatarPrimitive from "@radix-ui/react-avatar";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const Avatar = React.forwardRef<
 7 |   React.ElementRef<typeof AvatarPrimitive.Root>,
 8 |   React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
 9 | >(({ className, ...props }, ref) => (
10 |   <AvatarPrimitive.Root
11 |     ref={ref}
12 |     className={cn("relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full", className)}
13 |     {...props}
14 |   />
15 | ));
16 | Avatar.displayName = AvatarPrimitive.Root.displayName;
17 | 
18 | const AvatarImage = React.forwardRef<
19 |   React.ElementRef<typeof AvatarPrimitive.Image>,
20 |   React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
21 | >(({ className, ...props }, ref) => (
22 |   <AvatarPrimitive.Image ref={ref} className={cn("aspect-square h-full w-full", className)} {...props} />
23 | ));
24 | AvatarImage.displayName = AvatarPrimitive.Image.displayName;
25 | 
26 | const AvatarFallback = React.forwardRef<
27 |   React.ElementRef<typeof AvatarPrimitive.Fallback>,
28 |   React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
29 | >(({ className, ...props }, ref) => (
30 |   <AvatarPrimitive.Fallback
31 |     ref={ref}
32 |     className={cn("flex h-full w-full items-center justify-center rounded-full bg-muted", className)}
33 |     {...props}
34 |   />
35 | ));
36 | AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;
37 | 
38 | export { Avatar, AvatarImage, AvatarFallback };
39 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/badge.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import { cva, type VariantProps } from "class-variance-authority";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const badgeVariants = cva(
 7 |   "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
 8 |   {
 9 |     variants: {
10 |       variant: {
11 |         default: "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
12 |         secondary: "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
13 |         destructive: "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
14 |         outline: "text-foreground",
15 |       },
16 |     },
17 |     defaultVariants: {
18 |       variant: "default",
19 |     },
20 |   },
21 | );
22 | 
23 | export interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {}
24 | 
25 | function Badge({ className, variant, ...props }: BadgeProps) {
26 |   return <div className={cn(badgeVariants({ variant }), className)} {...props} />;
27 | }
28 | 
29 | export { Badge, badgeVariants };
30 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/breadcrumb.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import { Slot } from "@radix-ui/react-slot";
 3 | import { ChevronRight, MoreHorizontal } from "lucide-react";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | 
 7 | const Breadcrumb = React.forwardRef<
 8 |   HTMLElement,
 9 |   React.ComponentPropsWithoutRef<"nav"> & {
10 |     separator?: React.ReactNode;
11 |   }
12 | >(({ ...props }, ref) => <nav ref={ref} aria-label="breadcrumb" {...props} />);
13 | Breadcrumb.displayName = "Breadcrumb";
14 | 
15 | const BreadcrumbList = React.forwardRef<HTMLOListElement, React.ComponentPropsWithoutRef<"ol">>(
16 |   ({ className, ...props }, ref) => (
17 |     <ol
18 |       ref={ref}
19 |       className={cn(
20 |         "flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5",
21 |         className,
22 |       )}
23 |       {...props}
24 |     />
25 |   ),
26 | );
27 | BreadcrumbList.displayName = "BreadcrumbList";
28 | 
29 | const BreadcrumbItem = React.forwardRef<HTMLLIElement, React.ComponentPropsWithoutRef<"li">>(
30 |   ({ className, ...props }, ref) => (
31 |     <li ref={ref} className={cn("inline-flex items-center gap-1.5", className)} {...props} />
32 |   ),
33 | );
34 | BreadcrumbItem.displayName = "BreadcrumbItem";
35 | 
36 | const BreadcrumbLink = React.forwardRef<
37 |   HTMLAnchorElement,
38 |   React.ComponentPropsWithoutRef<"a"> & {
39 |     asChild?: boolean;
40 |   }
41 | >(({ asChild, className, ...props }, ref) => {
42 |   const Comp = asChild ? Slot : "a";
43 | 
44 |   return <Comp ref={ref} className={cn("transition-colors hover:text-foreground", className)} {...props} />;
45 | });
46 | BreadcrumbLink.displayName = "BreadcrumbLink";
47 | 
48 | const BreadcrumbPage = React.forwardRef<HTMLSpanElement, React.ComponentPropsWithoutRef<"span">>(
49 |   ({ className, ...props }, ref) => (
50 |     <span
51 |       ref={ref}
52 |       role="link"
53 |       aria-disabled="true"
54 |       aria-current="page"
55 |       className={cn("font-normal text-foreground", className)}
56 |       {...props}
57 |     />
58 |   ),
59 | );
60 | BreadcrumbPage.displayName = "BreadcrumbPage";
61 | 
62 | const BreadcrumbSeparator = ({ children, className, ...props }: React.ComponentProps<"li">) => (
63 |   <li role="presentation" aria-hidden="true" className={cn("[&>svg]:size-3.5", className)} {...props}>
64 |     {children ?? <ChevronRight />}
65 |   </li>
66 | );
67 | BreadcrumbSeparator.displayName = "BreadcrumbSeparator";
68 | 
69 | const BreadcrumbEllipsis = ({ className, ...props }: React.ComponentProps<"span">) => (
70 |   <span
71 |     role="presentation"
72 |     aria-hidden="true"
73 |     className={cn("flex h-9 w-9 items-center justify-center", className)}
74 |     {...props}
75 |   >
76 |     <MoreHorizontal className="h-4 w-4" />
77 |     <span className="sr-only">More</span>
78 |   </span>
79 | );
80 | BreadcrumbEllipsis.displayName = "BreadcrumbElipssis";
81 | 
82 | export {
83 |   Breadcrumb,
84 |   BreadcrumbList,
85 |   BreadcrumbItem,
86 |   BreadcrumbLink,
87 |   BreadcrumbPage,
88 |   BreadcrumbSeparator,
89 |   BreadcrumbEllipsis,
90 | };
91 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/button.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import { Slot } from "@radix-ui/react-slot";
 3 | import { cva, type VariantProps } from "class-variance-authority";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | 
 7 | const buttonVariants = cva(
 8 |   "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
 9 |   {
10 |     variants: {
11 |       variant: {
12 |         default: "bg-primary text-primary-foreground hover:bg-primary/90",
13 |         destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
14 |         outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
15 |         secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
16 |         ghost: "hover:bg-accent hover:text-accent-foreground",
17 |         link: "text-primary underline-offset-4 hover:underline",
18 |       },
19 |       size: {
20 |         default: "h-10 px-4 py-2",
21 |         sm: "h-9 rounded-md px-3",
22 |         lg: "h-11 rounded-md px-8",
23 |         icon: "h-10 w-10",
24 |       },
25 |     },
26 |     defaultVariants: {
27 |       variant: "default",
28 |       size: "default",
29 |     },
30 |   },
31 | );
32 | 
33 | export interface ButtonProps
34 |   extends React.ButtonHTMLAttributes<HTMLButtonElement>,
35 |     VariantProps<typeof buttonVariants> {
36 |   asChild?: boolean;
37 | }
38 | 
39 | const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
40 |   ({ className, variant, size, asChild = false, ...props }, ref) => {
41 |     const Comp = asChild ? Slot : "button";
42 |     return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />;
43 |   },
44 | );
45 | Button.displayName = "Button";
46 | 
47 | export { Button, buttonVariants };
48 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/calendar.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import { ChevronLeft, ChevronRight } from "lucide-react";
 3 | import { DayPicker } from "react-day-picker";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | import { buttonVariants } from "@/components/ui/button";
 7 | 
 8 | export type CalendarProps = React.ComponentProps<typeof DayPicker>;
 9 | 
10 | function Calendar({ className, classNames, showOutsideDays = true, ...props }: CalendarProps) {
11 |   return (
12 |     <DayPicker
13 |       showOutsideDays={showOutsideDays}
14 |       className={cn("p-3", className)}
15 |       classNames={{
16 |         months: "flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0",
17 |         month: "space-y-4",
18 |         caption: "flex justify-center pt-1 relative items-center",
19 |         caption_label: "text-sm font-medium",
20 |         nav: "space-x-1 flex items-center",
21 |         nav_button: cn(
22 |           buttonVariants({ variant: "outline" }),
23 |           "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100",
24 |         ),
25 |         nav_button_previous: "absolute left-1",
26 |         nav_button_next: "absolute right-1",
27 |         table: "w-full border-collapse space-y-1",
28 |         head_row: "flex",
29 |         head_cell: "text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]",
30 |         row: "flex w-full mt-2",
31 |         cell: "h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20",
32 |         day: cn(buttonVariants({ variant: "ghost" }), "h-9 w-9 p-0 font-normal aria-selected:opacity-100"),
33 |         day_range_end: "day-range-end",
34 |         day_selected:
35 |           "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
36 |         day_today: "bg-accent text-accent-foreground",
37 |         day_outside:
38 |           "day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30",
39 |         day_disabled: "text-muted-foreground opacity-50",
40 |         day_range_middle: "aria-selected:bg-accent aria-selected:text-accent-foreground",
41 |         day_hidden: "invisible",
42 |         ...classNames,
43 |       }}
44 |       components={{
45 |         IconLeft: ({ ..._props }) => <ChevronLeft className="h-4 w-4" />,
46 |         IconRight: ({ ..._props }) => <ChevronRight className="h-4 w-4" />,
47 |       }}
48 |       {...props}
49 |     />
50 |   );
51 | }
52 | Calendar.displayName = "Calendar";
53 | 
54 | export { Calendar };
55 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/card.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | 
 3 | import { cn } from "@/lib/utils";
 4 | 
 5 | const Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({ className, ...props }, ref) => (
 6 |   <div ref={ref} className={cn("rounded-lg border bg-card text-card-foreground shadow-sm", className)} {...props} />
 7 | ));
 8 | Card.displayName = "Card";
 9 | 
10 | const CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
11 |   ({ className, ...props }, ref) => (
12 |     <div ref={ref} className={cn("flex flex-col space-y-1.5 p-6", className)} {...props} />
13 |   ),
14 | );
15 | CardHeader.displayName = "CardHeader";
16 | 
17 | const CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(
18 |   ({ className, ...props }, ref) => (
19 |     <h3 ref={ref} className={cn("text-2xl font-semibold leading-none tracking-tight", className)} {...props} />
20 |   ),
21 | );
22 | CardTitle.displayName = "CardTitle";
23 | 
24 | const CardDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(
25 |   ({ className, ...props }, ref) => (
26 |     <p ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
27 |   ),
28 | );
29 | CardDescription.displayName = "CardDescription";
30 | 
31 | const CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
32 |   ({ className, ...props }, ref) => <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />,
33 | );
34 | CardContent.displayName = "CardContent";
35 | 
36 | const CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
37 |   ({ className, ...props }, ref) => (
38 |     <div ref={ref} className={cn("flex items-center p-6 pt-0", className)} {...props} />
39 |   ),
40 | );
41 | CardFooter.displayName = "CardFooter";
42 | 
43 | export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };
44 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/carousel.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import useEmblaCarousel, { type UseEmblaCarouselType } from "embla-carousel-react";
  3 | import { ArrowLeft, ArrowRight } from "lucide-react";
  4 | 
  5 | import { cn } from "@/lib/utils";
  6 | import { Button } from "@/components/ui/button";
  7 | 
  8 | type CarouselApi = UseEmblaCarouselType[1];
  9 | type UseCarouselParameters = Parameters<typeof useEmblaCarousel>;
 10 | type CarouselOptions = UseCarouselParameters[0];
 11 | type CarouselPlugin = UseCarouselParameters[1];
 12 | 
 13 | type CarouselProps = {
 14 |   opts?: CarouselOptions;
 15 |   plugins?: CarouselPlugin;
 16 |   orientation?: "horizontal" | "vertical";
 17 |   setApi?: (api: CarouselApi) => void;
 18 | };
 19 | 
 20 | type CarouselContextProps = {
 21 |   carouselRef: ReturnType<typeof useEmblaCarousel>[0];
 22 |   api: ReturnType<typeof useEmblaCarousel>[1];
 23 |   scrollPrev: () => void;
 24 |   scrollNext: () => void;
 25 |   canScrollPrev: boolean;
 26 |   canScrollNext: boolean;
 27 | } & CarouselProps;
 28 | 
 29 | const CarouselContext = React.createContext<CarouselContextProps | null>(null);
 30 | 
 31 | function useCarousel() {
 32 |   const context = React.useContext(CarouselContext);
 33 | 
 34 |   if (!context) {
 35 |     throw new Error("useCarousel must be used within a <Carousel />");
 36 |   }
 37 | 
 38 |   return context;
 39 | }
 40 | 
 41 | const Carousel = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement> & CarouselProps>(
 42 |   ({ orientation = "horizontal", opts, setApi, plugins, className, children, ...props }, ref) => {
 43 |     const [carouselRef, api] = useEmblaCarousel(
 44 |       {
 45 |         ...opts,
 46 |         axis: orientation === "horizontal" ? "x" : "y",
 47 |       },
 48 |       plugins,
 49 |     );
 50 |     const [canScrollPrev, setCanScrollPrev] = React.useState(false);
 51 |     const [canScrollNext, setCanScrollNext] = React.useState(false);
 52 | 
 53 |     const onSelect = React.useCallback((api: CarouselApi) => {
 54 |       if (!api) {
 55 |         return;
 56 |       }
 57 | 
 58 |       setCanScrollPrev(api.canScrollPrev());
 59 |       setCanScrollNext(api.canScrollNext());
 60 |     }, []);
 61 | 
 62 |     const scrollPrev = React.useCallback(() => {
 63 |       api?.scrollPrev();
 64 |     }, [api]);
 65 | 
 66 |     const scrollNext = React.useCallback(() => {
 67 |       api?.scrollNext();
 68 |     }, [api]);
 69 | 
 70 |     const handleKeyDown = React.useCallback(
 71 |       (event: React.KeyboardEvent<HTMLDivElement>) => {
 72 |         if (event.key === "ArrowLeft") {
 73 |           event.preventDefault();
 74 |           scrollPrev();
 75 |         } else if (event.key === "ArrowRight") {
 76 |           event.preventDefault();
 77 |           scrollNext();
 78 |         }
 79 |       },
 80 |       [scrollPrev, scrollNext],
 81 |     );
 82 | 
 83 |     React.useEffect(() => {
 84 |       if (!api || !setApi) {
 85 |         return;
 86 |       }
 87 | 
 88 |       setApi(api);
 89 |     }, [api, setApi]);
 90 | 
 91 |     React.useEffect(() => {
 92 |       if (!api) {
 93 |         return;
 94 |       }
 95 | 
 96 |       onSelect(api);
 97 |       api.on("reInit", onSelect);
 98 |       api.on("select", onSelect);
 99 | 
100 |       return () => {
101 |         api?.off("select", onSelect);
102 |       };
103 |     }, [api, onSelect]);
104 | 
105 |     return (
106 |       <CarouselContext.Provider
107 |         value={{
108 |           carouselRef,
109 |           api: api,
110 |           opts,
111 |           orientation: orientation || (opts?.axis === "y" ? "vertical" : "horizontal"),
112 |           scrollPrev,
113 |           scrollNext,
114 |           canScrollPrev,
115 |           canScrollNext,
116 |         }}
117 |       >
118 |         <div
119 |           ref={ref}
120 |           onKeyDownCapture={handleKeyDown}
121 |           className={cn("relative", className)}
122 |           role="region"
123 |           aria-roledescription="carousel"
124 |           {...props}
125 |         >
126 |           {children}
127 |         </div>
128 |       </CarouselContext.Provider>
129 |     );
130 |   },
131 | );
132 | Carousel.displayName = "Carousel";
133 | 
134 | const CarouselContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
135 |   ({ className, ...props }, ref) => {
136 |     const { carouselRef, orientation } = useCarousel();
137 | 
138 |     return (
139 |       <div ref={carouselRef} className="overflow-hidden">
140 |         <div
141 |           ref={ref}
142 |           className={cn("flex", orientation === "horizontal" ? "-ml-4" : "-mt-4 flex-col", className)}
143 |           {...props}
144 |         />
145 |       </div>
146 |     );
147 |   },
148 | );
149 | CarouselContent.displayName = "CarouselContent";
150 | 
151 | const CarouselItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
152 |   ({ className, ...props }, ref) => {
153 |     const { orientation } = useCarousel();
154 | 
155 |     return (
156 |       <div
157 |         ref={ref}
158 |         role="group"
159 |         aria-roledescription="slide"
160 |         className={cn("min-w-0 shrink-0 grow-0 basis-full", orientation === "horizontal" ? "pl-4" : "pt-4", className)}
161 |         {...props}
162 |       />
163 |     );
164 |   },
165 | );
166 | CarouselItem.displayName = "CarouselItem";
167 | 
168 | const CarouselPrevious = React.forwardRef<HTMLButtonElement, React.ComponentProps<typeof Button>>(
169 |   ({ className, variant = "outline", size = "icon", ...props }, ref) => {
170 |     const { orientation, scrollPrev, canScrollPrev } = useCarousel();
171 | 
172 |     return (
173 |       <Button
174 |         ref={ref}
175 |         variant={variant}
176 |         size={size}
177 |         className={cn(
178 |           "absolute h-8 w-8 rounded-full",
179 |           orientation === "horizontal"
180 |             ? "-left-12 top-1/2 -translate-y-1/2"
181 |             : "-top-12 left-1/2 -translate-x-1/2 rotate-90",
182 |           className,
183 |         )}
184 |         disabled={!canScrollPrev}
185 |         onClick={scrollPrev}
186 |         {...props}
187 |       >
188 |         <ArrowLeft className="h-4 w-4" />
189 |         <span className="sr-only">Previous slide</span>
190 |       </Button>
191 |     );
192 |   },
193 | );
194 | CarouselPrevious.displayName = "CarouselPrevious";
195 | 
196 | const CarouselNext = React.forwardRef<HTMLButtonElement, React.ComponentProps<typeof Button>>(
197 |   ({ className, variant = "outline", size = "icon", ...props }, ref) => {
198 |     const { orientation, scrollNext, canScrollNext } = useCarousel();
199 | 
200 |     return (
201 |       <Button
202 |         ref={ref}
203 |         variant={variant}
204 |         size={size}
205 |         className={cn(
206 |           "absolute h-8 w-8 rounded-full",
207 |           orientation === "horizontal"
208 |             ? "-right-12 top-1/2 -translate-y-1/2"
209 |             : "-bottom-12 left-1/2 -translate-x-1/2 rotate-90",
210 |           className,
211 |         )}
212 |         disabled={!canScrollNext}
213 |         onClick={scrollNext}
214 |         {...props}
215 |       >
216 |         <ArrowRight className="h-4 w-4" />
217 |         <span className="sr-only">Next slide</span>
218 |       </Button>
219 |     );
220 |   },
221 | );
222 | CarouselNext.displayName = "CarouselNext";
223 | 
224 | export { type CarouselApi, Carousel, CarouselContent, CarouselItem, CarouselPrevious, CarouselNext };
225 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/chart.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import * as RechartsPrimitive from "recharts";
  3 | 
  4 | import { cn } from "@/lib/utils";
  5 | 
  6 | // Format: { THEME_NAME: CSS_SELECTOR }
  7 | const THEMES = { light: "", dark: ".dark" } as const;
  8 | 
  9 | export type ChartConfig = {
 10 |   [k in string]: {
 11 |     label?: React.ReactNode;
 12 |     icon?: React.ComponentType;
 13 |   } & ({ color?: string; theme?: never } | { color?: never; theme: Record<keyof typeof THEMES, string> });
 14 | };
 15 | 
 16 | type ChartContextProps = {
 17 |   config: ChartConfig;
 18 | };
 19 | 
 20 | const ChartContext = React.createContext<ChartContextProps | null>(null);
 21 | 
 22 | function useChart() {
 23 |   const context = React.useContext(ChartContext);
 24 | 
 25 |   if (!context) {
 26 |     throw new Error("useChart must be used within a <ChartContainer />");
 27 |   }
 28 | 
 29 |   return context;
 30 | }
 31 | 
 32 | const ChartContainer = React.forwardRef<
 33 |   HTMLDivElement,
 34 |   React.ComponentProps<"div"> & {
 35 |     config: ChartConfig;
 36 |     children: React.ComponentProps<typeof RechartsPrimitive.ResponsiveContainer>["children"];
 37 |   }
 38 | >(({ id, className, children, config, ...props }, ref) => {
 39 |   const uniqueId = React.useId();
 40 |   const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`;
 41 | 
 42 |   return (
 43 |     <ChartContext.Provider value={{ config }}>
 44 |       <div
 45 |         data-chart={chartId}
 46 |         ref={ref}
 47 |         className={cn(
 48 |           "flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",
 49 |           className,
 50 |         )}
 51 |         {...props}
 52 |       >
 53 |         <ChartStyle id={chartId} config={config} />
 54 |         <RechartsPrimitive.ResponsiveContainer>{children}</RechartsPrimitive.ResponsiveContainer>
 55 |       </div>
 56 |     </ChartContext.Provider>
 57 |   );
 58 | });
 59 | ChartContainer.displayName = "Chart";
 60 | 
 61 | const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
 62 |   const colorConfig = Object.entries(config).filter(([_, config]) => config.theme || config.color);
 63 | 
 64 |   if (!colorConfig.length) {
 65 |     return null;
 66 |   }
 67 | 
 68 |   return (
 69 |     <style
 70 |       dangerouslySetInnerHTML={{
 71 |         __html: Object.entries(THEMES)
 72 |           .map(
 73 |             ([theme, prefix]) => `
 74 | ${prefix} [data-chart=${id}] {
 75 | ${colorConfig
 76 |   .map(([key, itemConfig]) => {
 77 |     const color = itemConfig.theme?.[theme as keyof typeof itemConfig.theme] || itemConfig.color;
 78 |     return color ? `  --color-${key}: ${color};` : null;
 79 |   })
 80 |   .join("\n")}
 81 | }
 82 | `,
 83 |           )
 84 |           .join("\n"),
 85 |       }}
 86 |     />
 87 |   );
 88 | };
 89 | 
 90 | const ChartTooltip = RechartsPrimitive.Tooltip;
 91 | 
 92 | const ChartTooltipContent = React.forwardRef<
 93 |   HTMLDivElement,
 94 |   React.ComponentProps<typeof RechartsPrimitive.Tooltip> &
 95 |     React.ComponentProps<"div"> & {
 96 |       hideLabel?: boolean;
 97 |       hideIndicator?: boolean;
 98 |       indicator?: "line" | "dot" | "dashed";
 99 |       nameKey?: string;
100 |       labelKey?: string;
101 |     }
102 | >(
103 |   (
104 |     {
105 |       active,
106 |       payload,
107 |       className,
108 |       indicator = "dot",
109 |       hideLabel = false,
110 |       hideIndicator = false,
111 |       label,
112 |       labelFormatter,
113 |       labelClassName,
114 |       formatter,
115 |       color,
116 |       nameKey,
117 |       labelKey,
118 |     },
119 |     ref,
120 |   ) => {
121 |     const { config } = useChart();
122 | 
123 |     const tooltipLabel = React.useMemo(() => {
124 |       if (hideLabel || !payload?.length) {
125 |         return null;
126 |       }
127 | 
128 |       const [item] = payload;
129 |       const key = `${labelKey || item.dataKey || item.name || "value"}`;
130 |       const itemConfig = getPayloadConfigFromPayload(config, item, key);
131 |       const value =
132 |         !labelKey && typeof label === "string"
133 |           ? config[label as keyof typeof config]?.label || label
134 |           : itemConfig?.label;
135 | 
136 |       if (labelFormatter) {
137 |         return <div className={cn("font-medium", labelClassName)}>{labelFormatter(value, payload)}</div>;
138 |       }
139 | 
140 |       if (!value) {
141 |         return null;
142 |       }
143 | 
144 |       return <div className={cn("font-medium", labelClassName)}>{value}</div>;
145 |     }, [label, labelFormatter, payload, hideLabel, labelClassName, config, labelKey]);
146 | 
147 |     if (!active || !payload?.length) {
148 |       return null;
149 |     }
150 | 
151 |     const nestLabel = payload.length === 1 && indicator !== "dot";
152 | 
153 |     return (
154 |       <div
155 |         ref={ref}
156 |         className={cn(
157 |           "grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",
158 |           className,
159 |         )}
160 |       >
161 |         {!nestLabel ? tooltipLabel : null}
162 |         <div className="grid gap-1.5">
163 |           {payload.map((item, index) => {
164 |             const key = `${nameKey || item.name || item.dataKey || "value"}`;
165 |             const itemConfig = getPayloadConfigFromPayload(config, item, key);
166 |             const indicatorColor = color || item.payload.fill || item.color;
167 | 
168 |             return (
169 |               <div
170 |                 key={item.dataKey}
171 |                 className={cn(
172 |                   "flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground",
173 |                   indicator === "dot" && "items-center",
174 |                 )}
175 |               >
176 |                 {formatter && item?.value !== undefined && item.name ? (
177 |                   formatter(item.value, item.name, item, index, item.payload)
178 |                 ) : (
179 |                   <>
180 |                     {itemConfig?.icon ? (
181 |                       <itemConfig.icon />
182 |                     ) : (
183 |                       !hideIndicator && (
184 |                         <div
185 |                           className={cn("shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]", {
186 |                             "h-2.5 w-2.5": indicator === "dot",
187 |                             "w-1": indicator === "line",
188 |                             "w-0 border-[1.5px] border-dashed bg-transparent": indicator === "dashed",
189 |                             "my-0.5": nestLabel && indicator === "dashed",
190 |                           })}
191 |                           style={
192 |                             {
193 |                               "--color-bg": indicatorColor,
194 |                               "--color-border": indicatorColor,
195 |                             } as React.CSSProperties
196 |                           }
197 |                         />
198 |                       )
199 |                     )}
200 |                     <div
201 |                       className={cn(
202 |                         "flex flex-1 justify-between leading-none",
203 |                         nestLabel ? "items-end" : "items-center",
204 |                       )}
205 |                     >
206 |                       <div className="grid gap-1.5">
207 |                         {nestLabel ? tooltipLabel : null}
208 |                         <span className="text-muted-foreground">{itemConfig?.label || item.name}</span>
209 |                       </div>
210 |                       {item.value && (
211 |                         <span className="font-mono font-medium tabular-nums text-foreground">
212 |                           {item.value.toLocaleString()}
213 |                         </span>
214 |                       )}
215 |                     </div>
216 |                   </>
217 |                 )}
218 |               </div>
219 |             );
220 |           })}
221 |         </div>
222 |       </div>
223 |     );
224 |   },
225 | );
226 | ChartTooltipContent.displayName = "ChartTooltip";
227 | 
228 | const ChartLegend = RechartsPrimitive.Legend;
229 | 
230 | const ChartLegendContent = React.forwardRef<
231 |   HTMLDivElement,
232 |   React.ComponentProps<"div"> &
233 |     Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & {
234 |       hideIcon?: boolean;
235 |       nameKey?: string;
236 |     }
237 | >(({ className, hideIcon = false, payload, verticalAlign = "bottom", nameKey }, ref) => {
238 |   const { config } = useChart();
239 | 
240 |   if (!payload?.length) {
241 |     return null;
242 |   }
243 | 
244 |   return (
245 |     <div
246 |       ref={ref}
247 |       className={cn("flex items-center justify-center gap-4", verticalAlign === "top" ? "pb-3" : "pt-3", className)}
248 |     >
249 |       {payload.map((item) => {
250 |         const key = `${nameKey || item.dataKey || "value"}`;
251 |         const itemConfig = getPayloadConfigFromPayload(config, item, key);
252 | 
253 |         return (
254 |           <div
255 |             key={item.value}
256 |             className={cn("flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground")}
257 |           >
258 |             {itemConfig?.icon && !hideIcon ? (
259 |               <itemConfig.icon />
260 |             ) : (
261 |               <div
262 |                 className="h-2 w-2 shrink-0 rounded-[2px]"
263 |                 style={{
264 |                   backgroundColor: item.color,
265 |                 }}
266 |               />
267 |             )}
268 |             {itemConfig?.label}
269 |           </div>
270 |         );
271 |       })}
272 |     </div>
273 |   );
274 | });
275 | ChartLegendContent.displayName = "ChartLegend";
276 | 
277 | // Helper to extract item config from a payload.
278 | function getPayloadConfigFromPayload(config: ChartConfig, payload: unknown, key: string) {
279 |   if (typeof payload !== "object" || payload === null) {
280 |     return undefined;
281 |   }
282 | 
283 |   const payloadPayload =
284 |     "payload" in payload && typeof payload.payload === "object" && payload.payload !== null
285 |       ? payload.payload
286 |       : undefined;
287 | 
288 |   let configLabelKey: string = key;
289 | 
290 |   if (key in payload && typeof payload[key as keyof typeof payload] === "string") {
291 |     configLabelKey = payload[key as keyof typeof payload] as string;
292 |   } else if (
293 |     payloadPayload &&
294 |     key in payloadPayload &&
295 |     typeof payloadPayload[key as keyof typeof payloadPayload] === "string"
296 |   ) {
297 |     configLabelKey = payloadPayload[key as keyof typeof payloadPayload] as string;
298 |   }
299 | 
300 |   return configLabelKey in config ? config[configLabelKey] : config[key as keyof typeof config];
301 | }
302 | 
303 | export { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent, ChartStyle };
304 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/checkbox.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as CheckboxPrimitive from "@radix-ui/react-checkbox";
 3 | import { Check } from "lucide-react";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | 
 7 | const Checkbox = React.forwardRef<
 8 |   React.ElementRef<typeof CheckboxPrimitive.Root>,
 9 |   React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
10 | >(({ className, ...props }, ref) => (
11 |   <CheckboxPrimitive.Root
12 |     ref={ref}
13 |     className={cn(
14 |       "peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
15 |       className,
16 |     )}
17 |     {...props}
18 |   >
19 |     <CheckboxPrimitive.Indicator className={cn("flex items-center justify-center text-current")}>
20 |       <Check className="h-4 w-4" />
21 |     </CheckboxPrimitive.Indicator>
22 |   </CheckboxPrimitive.Root>
23 | ));
24 | Checkbox.displayName = CheckboxPrimitive.Root.displayName;
25 | 
26 | export { Checkbox };
27 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/collapsible.tsx:
--------------------------------------------------------------------------------
 1 | import * as CollapsiblePrimitive from "@radix-ui/react-collapsible";
 2 | 
 3 | const Collapsible = CollapsiblePrimitive.Root;
 4 | 
 5 | const CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger;
 6 | 
 7 | const CollapsibleContent = CollapsiblePrimitive.CollapsibleContent;
 8 | 
 9 | export { Collapsible, CollapsibleTrigger, CollapsibleContent };
10 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/command.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import { type DialogProps } from "@radix-ui/react-dialog";
  3 | import { Command as CommandPrimitive } from "cmdk";
  4 | import { Search } from "lucide-react";
  5 | 
  6 | import { cn } from "@/lib/utils";
  7 | import { Dialog, DialogContent } from "@/components/ui/dialog";
  8 | 
  9 | const Command = React.forwardRef<
 10 |   React.ElementRef<typeof CommandPrimitive>,
 11 |   React.ComponentPropsWithoutRef<typeof CommandPrimitive>
 12 | >(({ className, ...props }, ref) => (
 13 |   <CommandPrimitive
 14 |     ref={ref}
 15 |     className={cn(
 16 |       "flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground",
 17 |       className,
 18 |     )}
 19 |     {...props}
 20 |   />
 21 | ));
 22 | Command.displayName = CommandPrimitive.displayName;
 23 | 
 24 | interface CommandDialogProps extends DialogProps {}
 25 | 
 26 | const CommandDialog = ({ children, ...props }: CommandDialogProps) => {
 27 |   return (
 28 |     <Dialog {...props}>
 29 |       <DialogContent className="overflow-hidden p-0 shadow-lg">
 30 |         <Command className="[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5">
 31 |           {children}
 32 |         </Command>
 33 |       </DialogContent>
 34 |     </Dialog>
 35 |   );
 36 | };
 37 | 
 38 | const CommandInput = React.forwardRef<
 39 |   React.ElementRef<typeof CommandPrimitive.Input>,
 40 |   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>
 41 | >(({ className, ...props }, ref) => (
 42 |   <div className="flex items-center border-b px-3" cmdk-input-wrapper="">
 43 |     <Search className="mr-2 h-4 w-4 shrink-0 opacity-50" />
 44 |     <CommandPrimitive.Input
 45 |       ref={ref}
 46 |       className={cn(
 47 |         "flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50",
 48 |         className,
 49 |       )}
 50 |       {...props}
 51 |     />
 52 |   </div>
 53 | ));
 54 | 
 55 | CommandInput.displayName = CommandPrimitive.Input.displayName;
 56 | 
 57 | const CommandList = React.forwardRef<
 58 |   React.ElementRef<typeof CommandPrimitive.List>,
 59 |   React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>
 60 | >(({ className, ...props }, ref) => (
 61 |   <CommandPrimitive.List
 62 |     ref={ref}
 63 |     className={cn("max-h-[300px] overflow-y-auto overflow-x-hidden", className)}
 64 |     {...props}
 65 |   />
 66 | ));
 67 | 
 68 | CommandList.displayName = CommandPrimitive.List.displayName;
 69 | 
 70 | const CommandEmpty = React.forwardRef<
 71 |   React.ElementRef<typeof CommandPrimitive.Empty>,
 72 |   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>
 73 | >((props, ref) => <CommandPrimitive.Empty ref={ref} className="py-6 text-center text-sm" {...props} />);
 74 | 
 75 | CommandEmpty.displayName = CommandPrimitive.Empty.displayName;
 76 | 
 77 | const CommandGroup = React.forwardRef<
 78 |   React.ElementRef<typeof CommandPrimitive.Group>,
 79 |   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>
 80 | >(({ className, ...props }, ref) => (
 81 |   <CommandPrimitive.Group
 82 |     ref={ref}
 83 |     className={cn(
 84 |       "overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",
 85 |       className,
 86 |     )}
 87 |     {...props}
 88 |   />
 89 | ));
 90 | 
 91 | CommandGroup.displayName = CommandPrimitive.Group.displayName;
 92 | 
 93 | const CommandSeparator = React.forwardRef<
 94 |   React.ElementRef<typeof CommandPrimitive.Separator>,
 95 |   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>
 96 | >(({ className, ...props }, ref) => (
 97 |   <CommandPrimitive.Separator ref={ref} className={cn("-mx-1 h-px bg-border", className)} {...props} />
 98 | ));
 99 | CommandSeparator.displayName = CommandPrimitive.Separator.displayName;
100 | 
101 | const CommandItem = React.forwardRef<
102 |   React.ElementRef<typeof CommandPrimitive.Item>,
103 |   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>
104 | >(({ className, ...props }, ref) => (
105 |   <CommandPrimitive.Item
106 |     ref={ref}
107 |     className={cn(
108 |       "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50",
109 |       className,
110 |     )}
111 |     {...props}
112 |   />
113 | ));
114 | 
115 | CommandItem.displayName = CommandPrimitive.Item.displayName;
116 | 
117 | const CommandShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
118 |   return <span className={cn("ml-auto text-xs tracking-widest text-muted-foreground", className)} {...props} />;
119 | };
120 | CommandShortcut.displayName = "CommandShortcut";
121 | 
122 | export {
123 |   Command,
124 |   CommandDialog,
125 |   CommandInput,
126 |   CommandList,
127 |   CommandEmpty,
128 |   CommandGroup,
129 |   CommandItem,
130 |   CommandShortcut,
131 |   CommandSeparator,
132 | };
133 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/context-menu.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import * as ContextMenuPrimitive from "@radix-ui/react-context-menu";
  3 | import { Check, ChevronRight, Circle } from "lucide-react";
  4 | 
  5 | import { cn } from "@/lib/utils";
  6 | 
  7 | const ContextMenu = ContextMenuPrimitive.Root;
  8 | 
  9 | const ContextMenuTrigger = ContextMenuPrimitive.Trigger;
 10 | 
 11 | const ContextMenuGroup = ContextMenuPrimitive.Group;
 12 | 
 13 | const ContextMenuPortal = ContextMenuPrimitive.Portal;
 14 | 
 15 | const ContextMenuSub = ContextMenuPrimitive.Sub;
 16 | 
 17 | const ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup;
 18 | 
 19 | const ContextMenuSubTrigger = React.forwardRef<
 20 |   React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,
 21 |   React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {
 22 |     inset?: boolean;
 23 |   }
 24 | >(({ className, inset, children, ...props }, ref) => (
 25 |   <ContextMenuPrimitive.SubTrigger
 26 |     ref={ref}
 27 |     className={cn(
 28 |       "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[state=open]:bg-accent data-[state=open]:text-accent-foreground focus:bg-accent focus:text-accent-foreground",
 29 |       inset && "pl-8",
 30 |       className,
 31 |     )}
 32 |     {...props}
 33 |   >
 34 |     {children}
 35 |     <ChevronRight className="ml-auto h-4 w-4" />
 36 |   </ContextMenuPrimitive.SubTrigger>
 37 | ));
 38 | ContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName;
 39 | 
 40 | const ContextMenuSubContent = React.forwardRef<
 41 |   React.ElementRef<typeof ContextMenuPrimitive.SubContent>,
 42 |   React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>
 43 | >(({ className, ...props }, ref) => (
 44 |   <ContextMenuPrimitive.SubContent
 45 |     ref={ref}
 46 |     className={cn(
 47 |       "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 48 |       className,
 49 |     )}
 50 |     {...props}
 51 |   />
 52 | ));
 53 | ContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName;
 54 | 
 55 | const ContextMenuContent = React.forwardRef<
 56 |   React.ElementRef<typeof ContextMenuPrimitive.Content>,
 57 |   React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>
 58 | >(({ className, ...props }, ref) => (
 59 |   <ContextMenuPrimitive.Portal>
 60 |     <ContextMenuPrimitive.Content
 61 |       ref={ref}
 62 |       className={cn(
 63 |         "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 64 |         className,
 65 |       )}
 66 |       {...props}
 67 |     />
 68 |   </ContextMenuPrimitive.Portal>
 69 | ));
 70 | ContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName;
 71 | 
 72 | const ContextMenuItem = React.forwardRef<
 73 |   React.ElementRef<typeof ContextMenuPrimitive.Item>,
 74 |   React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {
 75 |     inset?: boolean;
 76 |   }
 77 | >(({ className, inset, ...props }, ref) => (
 78 |   <ContextMenuPrimitive.Item
 79 |     ref={ref}
 80 |     className={cn(
 81 |       "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
 82 |       inset && "pl-8",
 83 |       className,
 84 |     )}
 85 |     {...props}
 86 |   />
 87 | ));
 88 | ContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName;
 89 | 
 90 | const ContextMenuCheckboxItem = React.forwardRef<
 91 |   React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,
 92 |   React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>
 93 | >(({ className, children, checked, ...props }, ref) => (
 94 |   <ContextMenuPrimitive.CheckboxItem
 95 |     ref={ref}
 96 |     className={cn(
 97 |       "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
 98 |       className,
 99 |     )}
100 |     checked={checked}
101 |     {...props}
102 |   >
103 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
104 |       <ContextMenuPrimitive.ItemIndicator>
105 |         <Check className="h-4 w-4" />
106 |       </ContextMenuPrimitive.ItemIndicator>
107 |     </span>
108 |     {children}
109 |   </ContextMenuPrimitive.CheckboxItem>
110 | ));
111 | ContextMenuCheckboxItem.displayName = ContextMenuPrimitive.CheckboxItem.displayName;
112 | 
113 | const ContextMenuRadioItem = React.forwardRef<
114 |   React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,
115 |   React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>
116 | >(({ className, children, ...props }, ref) => (
117 |   <ContextMenuPrimitive.RadioItem
118 |     ref={ref}
119 |     className={cn(
120 |       "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
121 |       className,
122 |     )}
123 |     {...props}
124 |   >
125 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
126 |       <ContextMenuPrimitive.ItemIndicator>
127 |         <Circle className="h-2 w-2 fill-current" />
128 |       </ContextMenuPrimitive.ItemIndicator>
129 |     </span>
130 |     {children}
131 |   </ContextMenuPrimitive.RadioItem>
132 | ));
133 | ContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName;
134 | 
135 | const ContextMenuLabel = React.forwardRef<
136 |   React.ElementRef<typeof ContextMenuPrimitive.Label>,
137 |   React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {
138 |     inset?: boolean;
139 |   }
140 | >(({ className, inset, ...props }, ref) => (
141 |   <ContextMenuPrimitive.Label
142 |     ref={ref}
143 |     className={cn("px-2 py-1.5 text-sm font-semibold text-foreground", inset && "pl-8", className)}
144 |     {...props}
145 |   />
146 | ));
147 | ContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName;
148 | 
149 | const ContextMenuSeparator = React.forwardRef<
150 |   React.ElementRef<typeof ContextMenuPrimitive.Separator>,
151 |   React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>
152 | >(({ className, ...props }, ref) => (
153 |   <ContextMenuPrimitive.Separator ref={ref} className={cn("-mx-1 my-1 h-px bg-border", className)} {...props} />
154 | ));
155 | ContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName;
156 | 
157 | const ContextMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
158 |   return <span className={cn("ml-auto text-xs tracking-widest text-muted-foreground", className)} {...props} />;
159 | };
160 | ContextMenuShortcut.displayName = "ContextMenuShortcut";
161 | 
162 | export {
163 |   ContextMenu,
164 |   ContextMenuTrigger,
165 |   ContextMenuContent,
166 |   ContextMenuItem,
167 |   ContextMenuCheckboxItem,
168 |   ContextMenuRadioItem,
169 |   ContextMenuLabel,
170 |   ContextMenuSeparator,
171 |   ContextMenuShortcut,
172 |   ContextMenuGroup,
173 |   ContextMenuPortal,
174 |   ContextMenuSub,
175 |   ContextMenuSubContent,
176 |   ContextMenuSubTrigger,
177 |   ContextMenuRadioGroup,
178 | };
179 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/dialog.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as DialogPrimitive from "@radix-ui/react-dialog";
 3 | import { X } from "lucide-react";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | 
 7 | const Dialog = DialogPrimitive.Root;
 8 | 
 9 | const DialogTrigger = DialogPrimitive.Trigger;
10 | 
11 | const DialogPortal = DialogPrimitive.Portal;
12 | 
13 | const DialogClose = DialogPrimitive.Close;
14 | 
15 | const DialogOverlay = React.forwardRef<
16 |   React.ElementRef<typeof DialogPrimitive.Overlay>,
17 |   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
18 | >(({ className, ...props }, ref) => (
19 |   <DialogPrimitive.Overlay
20 |     ref={ref}
21 |     className={cn(
22 |       "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
23 |       className,
24 |     )}
25 |     {...props}
26 |   />
27 | ));
28 | DialogOverlay.displayName = DialogPrimitive.Overlay.displayName;
29 | 
30 | const DialogContent = React.forwardRef<
31 |   React.ElementRef<typeof DialogPrimitive.Content>,
32 |   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
33 | >(({ className, children, ...props }, ref) => (
34 |   <DialogPortal>
35 |     <DialogOverlay />
36 |     <DialogPrimitive.Content
37 |       ref={ref}
38 |       className={cn(
39 |         "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
40 |         className,
41 |       )}
42 |       {...props}
43 |     >
44 |       {children}
45 |       <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity data-[state=open]:bg-accent data-[state=open]:text-muted-foreground hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none">
46 |         <X className="h-4 w-4" />
47 |         <span className="sr-only">Close</span>
48 |       </DialogPrimitive.Close>
49 |     </DialogPrimitive.Content>
50 |   </DialogPortal>
51 | ));
52 | DialogContent.displayName = DialogPrimitive.Content.displayName;
53 | 
54 | const DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
55 |   <div className={cn("flex flex-col space-y-1.5 text-center sm:text-left", className)} {...props} />
56 | );
57 | DialogHeader.displayName = "DialogHeader";
58 | 
59 | const DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
60 |   <div className={cn("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className)} {...props} />
61 | );
62 | DialogFooter.displayName = "DialogFooter";
63 | 
64 | const DialogTitle = React.forwardRef<
65 |   React.ElementRef<typeof DialogPrimitive.Title>,
66 |   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
67 | >(({ className, ...props }, ref) => (
68 |   <DialogPrimitive.Title
69 |     ref={ref}
70 |     className={cn("text-lg font-semibold leading-none tracking-tight", className)}
71 |     {...props}
72 |   />
73 | ));
74 | DialogTitle.displayName = DialogPrimitive.Title.displayName;
75 | 
76 | const DialogDescription = React.forwardRef<
77 |   React.ElementRef<typeof DialogPrimitive.Description>,
78 |   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
79 | >(({ className, ...props }, ref) => (
80 |   <DialogPrimitive.Description ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
81 | ));
82 | DialogDescription.displayName = DialogPrimitive.Description.displayName;
83 | 
84 | export {
85 |   Dialog,
86 |   DialogPortal,
87 |   DialogOverlay,
88 |   DialogClose,
89 |   DialogTrigger,
90 |   DialogContent,
91 |   DialogHeader,
92 |   DialogFooter,
93 |   DialogTitle,
94 |   DialogDescription,
95 | };
96 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/drawer.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import { Drawer as DrawerPrimitive } from "vaul";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const Drawer = ({ shouldScaleBackground = true, ...props }: React.ComponentProps<typeof DrawerPrimitive.Root>) => (
 7 |   <DrawerPrimitive.Root shouldScaleBackground={shouldScaleBackground} {...props} />
 8 | );
 9 | Drawer.displayName = "Drawer";
10 | 
11 | const DrawerTrigger = DrawerPrimitive.Trigger;
12 | 
13 | const DrawerPortal = DrawerPrimitive.Portal;
14 | 
15 | const DrawerClose = DrawerPrimitive.Close;
16 | 
17 | const DrawerOverlay = React.forwardRef<
18 |   React.ElementRef<typeof DrawerPrimitive.Overlay>,
19 |   React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>
20 | >(({ className, ...props }, ref) => (
21 |   <DrawerPrimitive.Overlay ref={ref} className={cn("fixed inset-0 z-50 bg-black/80", className)} {...props} />
22 | ));
23 | DrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;
24 | 
25 | const DrawerContent = React.forwardRef<
26 |   React.ElementRef<typeof DrawerPrimitive.Content>,
27 |   React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>
28 | >(({ className, children, ...props }, ref) => (
29 |   <DrawerPortal>
30 |     <DrawerOverlay />
31 |     <DrawerPrimitive.Content
32 |       ref={ref}
33 |       className={cn(
34 |         "fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background",
35 |         className,
36 |       )}
37 |       {...props}
38 |     >
39 |       <div className="mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted" />
40 |       {children}
41 |     </DrawerPrimitive.Content>
42 |   </DrawerPortal>
43 | ));
44 | DrawerContent.displayName = "DrawerContent";
45 | 
46 | const DrawerHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
47 |   <div className={cn("grid gap-1.5 p-4 text-center sm:text-left", className)} {...props} />
48 | );
49 | DrawerHeader.displayName = "DrawerHeader";
50 | 
51 | const DrawerFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
52 |   <div className={cn("mt-auto flex flex-col gap-2 p-4", className)} {...props} />
53 | );
54 | DrawerFooter.displayName = "DrawerFooter";
55 | 
56 | const DrawerTitle = React.forwardRef<
57 |   React.ElementRef<typeof DrawerPrimitive.Title>,
58 |   React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>
59 | >(({ className, ...props }, ref) => (
60 |   <DrawerPrimitive.Title
61 |     ref={ref}
62 |     className={cn("text-lg font-semibold leading-none tracking-tight", className)}
63 |     {...props}
64 |   />
65 | ));
66 | DrawerTitle.displayName = DrawerPrimitive.Title.displayName;
67 | 
68 | const DrawerDescription = React.forwardRef<
69 |   React.ElementRef<typeof DrawerPrimitive.Description>,
70 |   React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>
71 | >(({ className, ...props }, ref) => (
72 |   <DrawerPrimitive.Description ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
73 | ));
74 | DrawerDescription.displayName = DrawerPrimitive.Description.displayName;
75 | 
76 | export {
77 |   Drawer,
78 |   DrawerPortal,
79 |   DrawerOverlay,
80 |   DrawerTrigger,
81 |   DrawerClose,
82 |   DrawerContent,
83 |   DrawerHeader,
84 |   DrawerFooter,
85 |   DrawerTitle,
86 |   DrawerDescription,
87 | };
88 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/dropdown-menu.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu";
  3 | import { Check, ChevronRight, Circle } from "lucide-react";
  4 | 
  5 | import { cn } from "@/lib/utils";
  6 | 
  7 | const DropdownMenu = DropdownMenuPrimitive.Root;
  8 | 
  9 | const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;
 10 | 
 11 | const DropdownMenuGroup = DropdownMenuPrimitive.Group;
 12 | 
 13 | const DropdownMenuPortal = DropdownMenuPrimitive.Portal;
 14 | 
 15 | const DropdownMenuSub = DropdownMenuPrimitive.Sub;
 16 | 
 17 | const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;
 18 | 
 19 | const DropdownMenuSubTrigger = React.forwardRef<
 20 |   React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
 21 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
 22 |     inset?: boolean;
 23 |   }
 24 | >(({ className, inset, children, ...props }, ref) => (
 25 |   <DropdownMenuPrimitive.SubTrigger
 26 |     ref={ref}
 27 |     className={cn(
 28 |       "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[state=open]:bg-accent focus:bg-accent",
 29 |       inset && "pl-8",
 30 |       className,
 31 |     )}
 32 |     {...props}
 33 |   >
 34 |     {children}
 35 |     <ChevronRight className="ml-auto h-4 w-4" />
 36 |   </DropdownMenuPrimitive.SubTrigger>
 37 | ));
 38 | DropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;
 39 | 
 40 | const DropdownMenuSubContent = React.forwardRef<
 41 |   React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
 42 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
 43 | >(({ className, ...props }, ref) => (
 44 |   <DropdownMenuPrimitive.SubContent
 45 |     ref={ref}
 46 |     className={cn(
 47 |       "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 48 |       className,
 49 |     )}
 50 |     {...props}
 51 |   />
 52 | ));
 53 | DropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;
 54 | 
 55 | const DropdownMenuContent = React.forwardRef<
 56 |   React.ElementRef<typeof DropdownMenuPrimitive.Content>,
 57 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
 58 | >(({ className, sideOffset = 4, ...props }, ref) => (
 59 |   <DropdownMenuPrimitive.Portal>
 60 |     <DropdownMenuPrimitive.Content
 61 |       ref={ref}
 62 |       sideOffset={sideOffset}
 63 |       className={cn(
 64 |         "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 65 |         className,
 66 |       )}
 67 |       {...props}
 68 |     />
 69 |   </DropdownMenuPrimitive.Portal>
 70 | ));
 71 | DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;
 72 | 
 73 | const DropdownMenuItem = React.forwardRef<
 74 |   React.ElementRef<typeof DropdownMenuPrimitive.Item>,
 75 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
 76 |     inset?: boolean;
 77 |   }
 78 | >(({ className, inset, ...props }, ref) => (
 79 |   <DropdownMenuPrimitive.Item
 80 |     ref={ref}
 81 |     className={cn(
 82 |       "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
 83 |       inset && "pl-8",
 84 |       className,
 85 |     )}
 86 |     {...props}
 87 |   />
 88 | ));
 89 | DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;
 90 | 
 91 | const DropdownMenuCheckboxItem = React.forwardRef<
 92 |   React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
 93 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
 94 | >(({ className, children, checked, ...props }, ref) => (
 95 |   <DropdownMenuPrimitive.CheckboxItem
 96 |     ref={ref}
 97 |     className={cn(
 98 |       "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
 99 |       className,
100 |     )}
101 |     checked={checked}
102 |     {...props}
103 |   >
104 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
105 |       <DropdownMenuPrimitive.ItemIndicator>
106 |         <Check className="h-4 w-4" />
107 |       </DropdownMenuPrimitive.ItemIndicator>
108 |     </span>
109 |     {children}
110 |   </DropdownMenuPrimitive.CheckboxItem>
111 | ));
112 | DropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;
113 | 
114 | const DropdownMenuRadioItem = React.forwardRef<
115 |   React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
116 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
117 | >(({ className, children, ...props }, ref) => (
118 |   <DropdownMenuPrimitive.RadioItem
119 |     ref={ref}
120 |     className={cn(
121 |       "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
122 |       className,
123 |     )}
124 |     {...props}
125 |   >
126 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
127 |       <DropdownMenuPrimitive.ItemIndicator>
128 |         <Circle className="h-2 w-2 fill-current" />
129 |       </DropdownMenuPrimitive.ItemIndicator>
130 |     </span>
131 |     {children}
132 |   </DropdownMenuPrimitive.RadioItem>
133 | ));
134 | DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;
135 | 
136 | const DropdownMenuLabel = React.forwardRef<
137 |   React.ElementRef<typeof DropdownMenuPrimitive.Label>,
138 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
139 |     inset?: boolean;
140 |   }
141 | >(({ className, inset, ...props }, ref) => (
142 |   <DropdownMenuPrimitive.Label
143 |     ref={ref}
144 |     className={cn("px-2 py-1.5 text-sm font-semibold", inset && "pl-8", className)}
145 |     {...props}
146 |   />
147 | ));
148 | DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;
149 | 
150 | const DropdownMenuSeparator = React.forwardRef<
151 |   React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
152 |   React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
153 | >(({ className, ...props }, ref) => (
154 |   <DropdownMenuPrimitive.Separator ref={ref} className={cn("-mx-1 my-1 h-px bg-muted", className)} {...props} />
155 | ));
156 | DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;
157 | 
158 | const DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
159 |   return <span className={cn("ml-auto text-xs tracking-widest opacity-60", className)} {...props} />;
160 | };
161 | DropdownMenuShortcut.displayName = "DropdownMenuShortcut";
162 | 
163 | export {
164 |   DropdownMenu,
165 |   DropdownMenuTrigger,
166 |   DropdownMenuContent,
167 |   DropdownMenuItem,
168 |   DropdownMenuCheckboxItem,
169 |   DropdownMenuRadioItem,
170 |   DropdownMenuLabel,
171 |   DropdownMenuSeparator,
172 |   DropdownMenuShortcut,
173 |   DropdownMenuGroup,
174 |   DropdownMenuPortal,
175 |   DropdownMenuSub,
176 |   DropdownMenuSubContent,
177 |   DropdownMenuSubTrigger,
178 |   DropdownMenuRadioGroup,
179 | };
180 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/form.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import * as LabelPrimitive from "@radix-ui/react-label";
  3 | import { Slot } from "@radix-ui/react-slot";
  4 | import { Controller, ControllerProps, FieldPath, FieldValues, FormProvider, useFormContext } from "react-hook-form";
  5 | 
  6 | import { cn } from "@/lib/utils";
  7 | import { Label } from "@/components/ui/label";
  8 | 
  9 | const Form = FormProvider;
 10 | 
 11 | type FormFieldContextValue<
 12 |   TFieldValues extends FieldValues = FieldValues,
 13 |   TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
 14 | > = {
 15 |   name: TName;
 16 | };
 17 | 
 18 | const FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue);
 19 | 
 20 | const FormField = <
 21 |   TFieldValues extends FieldValues = FieldValues,
 22 |   TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
 23 | >({
 24 |   ...props
 25 | }: ControllerProps<TFieldValues, TName>) => {
 26 |   return (
 27 |     <FormFieldContext.Provider value={{ name: props.name }}>
 28 |       <Controller {...props} />
 29 |     </FormFieldContext.Provider>
 30 |   );
 31 | };
 32 | 
 33 | const useFormField = () => {
 34 |   const fieldContext = React.useContext(FormFieldContext);
 35 |   const itemContext = React.useContext(FormItemContext);
 36 |   const { getFieldState, formState } = useFormContext();
 37 | 
 38 |   const fieldState = getFieldState(fieldContext.name, formState);
 39 | 
 40 |   if (!fieldContext) {
 41 |     throw new Error("useFormField should be used within <FormField>");
 42 |   }
 43 | 
 44 |   const { id } = itemContext;
 45 | 
 46 |   return {
 47 |     id,
 48 |     name: fieldContext.name,
 49 |     formItemId: `${id}-form-item`,
 50 |     formDescriptionId: `${id}-form-item-description`,
 51 |     formMessageId: `${id}-form-item-message`,
 52 |     ...fieldState,
 53 |   };
 54 | };
 55 | 
 56 | type FormItemContextValue = {
 57 |   id: string;
 58 | };
 59 | 
 60 | const FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue);
 61 | 
 62 | const FormItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
 63 |   ({ className, ...props }, ref) => {
 64 |     const id = React.useId();
 65 | 
 66 |     return (
 67 |       <FormItemContext.Provider value={{ id }}>
 68 |         <div ref={ref} className={cn("space-y-2", className)} {...props} />
 69 |       </FormItemContext.Provider>
 70 |     );
 71 |   },
 72 | );
 73 | FormItem.displayName = "FormItem";
 74 | 
 75 | const FormLabel = React.forwardRef<
 76 |   React.ElementRef<typeof LabelPrimitive.Root>,
 77 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
 78 | >(({ className, ...props }, ref) => {
 79 |   const { error, formItemId } = useFormField();
 80 | 
 81 |   return <Label ref={ref} className={cn(error && "text-destructive", className)} htmlFor={formItemId} {...props} />;
 82 | });
 83 | FormLabel.displayName = "FormLabel";
 84 | 
 85 | const FormControl = React.forwardRef<React.ElementRef<typeof Slot>, React.ComponentPropsWithoutRef<typeof Slot>>(
 86 |   ({ ...props }, ref) => {
 87 |     const { error, formItemId, formDescriptionId, formMessageId } = useFormField();
 88 | 
 89 |     return (
 90 |       <Slot
 91 |         ref={ref}
 92 |         id={formItemId}
 93 |         aria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}
 94 |         aria-invalid={!!error}
 95 |         {...props}
 96 |       />
 97 |     );
 98 |   },
 99 | );
100 | FormControl.displayName = "FormControl";
101 | 
102 | const FormDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(
103 |   ({ className, ...props }, ref) => {
104 |     const { formDescriptionId } = useFormField();
105 | 
106 |     return <p ref={ref} id={formDescriptionId} className={cn("text-sm text-muted-foreground", className)} {...props} />;
107 |   },
108 | );
109 | FormDescription.displayName = "FormDescription";
110 | 
111 | const FormMessage = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(
112 |   ({ className, children, ...props }, ref) => {
113 |     const { error, formMessageId } = useFormField();
114 |     const body = error ? String(error?.message) : children;
115 | 
116 |     if (!body) {
117 |       return null;
118 |     }
119 | 
120 |     return (
121 |       <p ref={ref} id={formMessageId} className={cn("text-sm font-medium text-destructive", className)} {...props}>
122 |         {body}
123 |       </p>
124 |     );
125 |   },
126 | );
127 | FormMessage.displayName = "FormMessage";
128 | 
129 | export { useFormField, Form, FormItem, FormLabel, FormControl, FormDescription, FormMessage, FormField };
130 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/hover-card.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as HoverCardPrimitive from "@radix-ui/react-hover-card";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const HoverCard = HoverCardPrimitive.Root;
 7 | 
 8 | const HoverCardTrigger = HoverCardPrimitive.Trigger;
 9 | 
10 | const HoverCardContent = React.forwardRef<
11 |   React.ElementRef<typeof HoverCardPrimitive.Content>,
12 |   React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>
13 | >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
14 |   <HoverCardPrimitive.Content
15 |     ref={ref}
16 |     align={align}
17 |     sideOffset={sideOffset}
18 |     className={cn(
19 |       "z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
20 |       className,
21 |     )}
22 |     {...props}
23 |   />
24 | ));
25 | HoverCardContent.displayName = HoverCardPrimitive.Content.displayName;
26 | 
27 | export { HoverCard, HoverCardTrigger, HoverCardContent };
28 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/input-otp.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import { OTPInput, OTPInputContext } from "input-otp";
 3 | import { Dot } from "lucide-react";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | 
 7 | const InputOTP = React.forwardRef<React.ElementRef<typeof OTPInput>, React.ComponentPropsWithoutRef<typeof OTPInput>>(
 8 |   ({ className, containerClassName, ...props }, ref) => (
 9 |     <OTPInput
10 |       ref={ref}
11 |       containerClassName={cn("flex items-center gap-2 has-[:disabled]:opacity-50", containerClassName)}
12 |       className={cn("disabled:cursor-not-allowed", className)}
13 |       {...props}
14 |     />
15 |   ),
16 | );
17 | InputOTP.displayName = "InputOTP";
18 | 
19 | const InputOTPGroup = React.forwardRef<React.ElementRef<"div">, React.ComponentPropsWithoutRef<"div">>(
20 |   ({ className, ...props }, ref) => <div ref={ref} className={cn("flex items-center", className)} {...props} />,
21 | );
22 | InputOTPGroup.displayName = "InputOTPGroup";
23 | 
24 | const InputOTPSlot = React.forwardRef<
25 |   React.ElementRef<"div">,
26 |   React.ComponentPropsWithoutRef<"div"> & { index: number }
27 | >(({ index, className, ...props }, ref) => {
28 |   const inputOTPContext = React.useContext(OTPInputContext);
29 |   const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index];
30 | 
31 |   return (
32 |     <div
33 |       ref={ref}
34 |       className={cn(
35 |         "relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md",
36 |         isActive && "z-10 ring-2 ring-ring ring-offset-background",
37 |         className,
38 |       )}
39 |       {...props}
40 |     >
41 |       {char}
42 |       {hasFakeCaret && (
43 |         <div className="pointer-events-none absolute inset-0 flex items-center justify-center">
44 |           <div className="animate-caret-blink h-4 w-px bg-foreground duration-1000" />
45 |         </div>
46 |       )}
47 |     </div>
48 |   );
49 | });
50 | InputOTPSlot.displayName = "InputOTPSlot";
51 | 
52 | const InputOTPSeparator = React.forwardRef<React.ElementRef<"div">, React.ComponentPropsWithoutRef<"div">>(
53 |   ({ ...props }, ref) => (
54 |     <div ref={ref} role="separator" {...props}>
55 |       <Dot />
56 |     </div>
57 |   ),
58 | );
59 | InputOTPSeparator.displayName = "InputOTPSeparator";
60 | 
61 | export { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator };
62 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/input.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | 
 3 | import { cn } from "@/lib/utils";
 4 | 
 5 | const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
 6 |   ({ className, type, ...props }, ref) => {
 7 |     return (
 8 |       <input
 9 |         type={type}
10 |         className={cn(
11 |           "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
12 |           className,
13 |         )}
14 |         ref={ref}
15 |         {...props}
16 |       />
17 |     );
18 |   },
19 | );
20 | Input.displayName = "Input";
21 | 
22 | export { Input };
23 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/label.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as LabelPrimitive from "@radix-ui/react-label";
 3 | import { cva, type VariantProps } from "class-variance-authority";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | 
 7 | const labelVariants = cva("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70");
 8 | 
 9 | const Label = React.forwardRef<
10 |   React.ElementRef<typeof LabelPrimitive.Root>,
11 |   React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>
12 | >(({ className, ...props }, ref) => (
13 |   <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />
14 | ));
15 | Label.displayName = LabelPrimitive.Root.displayName;
16 | 
17 | export { Label };
18 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/menubar.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import * as MenubarPrimitive from "@radix-ui/react-menubar";
  3 | import { Check, ChevronRight, Circle } from "lucide-react";
  4 | 
  5 | import { cn } from "@/lib/utils";
  6 | 
  7 | const MenubarMenu = MenubarPrimitive.Menu;
  8 | 
  9 | const MenubarGroup = MenubarPrimitive.Group;
 10 | 
 11 | const MenubarPortal = MenubarPrimitive.Portal;
 12 | 
 13 | const MenubarSub = MenubarPrimitive.Sub;
 14 | 
 15 | const MenubarRadioGroup = MenubarPrimitive.RadioGroup;
 16 | 
 17 | const Menubar = React.forwardRef<
 18 |   React.ElementRef<typeof MenubarPrimitive.Root>,
 19 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>
 20 | >(({ className, ...props }, ref) => (
 21 |   <MenubarPrimitive.Root
 22 |     ref={ref}
 23 |     className={cn("flex h-10 items-center space-x-1 rounded-md border bg-background p-1", className)}
 24 |     {...props}
 25 |   />
 26 | ));
 27 | Menubar.displayName = MenubarPrimitive.Root.displayName;
 28 | 
 29 | const MenubarTrigger = React.forwardRef<
 30 |   React.ElementRef<typeof MenubarPrimitive.Trigger>,
 31 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>
 32 | >(({ className, ...props }, ref) => (
 33 |   <MenubarPrimitive.Trigger
 34 |     ref={ref}
 35 |     className={cn(
 36 |       "flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none data-[state=open]:bg-accent data-[state=open]:text-accent-foreground focus:bg-accent focus:text-accent-foreground",
 37 |       className,
 38 |     )}
 39 |     {...props}
 40 |   />
 41 | ));
 42 | MenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName;
 43 | 
 44 | const MenubarSubTrigger = React.forwardRef<
 45 |   React.ElementRef<typeof MenubarPrimitive.SubTrigger>,
 46 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {
 47 |     inset?: boolean;
 48 |   }
 49 | >(({ className, inset, children, ...props }, ref) => (
 50 |   <MenubarPrimitive.SubTrigger
 51 |     ref={ref}
 52 |     className={cn(
 53 |       "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[state=open]:bg-accent data-[state=open]:text-accent-foreground focus:bg-accent focus:text-accent-foreground",
 54 |       inset && "pl-8",
 55 |       className,
 56 |     )}
 57 |     {...props}
 58 |   >
 59 |     {children}
 60 |     <ChevronRight className="ml-auto h-4 w-4" />
 61 |   </MenubarPrimitive.SubTrigger>
 62 | ));
 63 | MenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName;
 64 | 
 65 | const MenubarSubContent = React.forwardRef<
 66 |   React.ElementRef<typeof MenubarPrimitive.SubContent>,
 67 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>
 68 | >(({ className, ...props }, ref) => (
 69 |   <MenubarPrimitive.SubContent
 70 |     ref={ref}
 71 |     className={cn(
 72 |       "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 73 |       className,
 74 |     )}
 75 |     {...props}
 76 |   />
 77 | ));
 78 | MenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName;
 79 | 
 80 | const MenubarContent = React.forwardRef<
 81 |   React.ElementRef<typeof MenubarPrimitive.Content>,
 82 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>
 83 | >(({ className, align = "start", alignOffset = -4, sideOffset = 8, ...props }, ref) => (
 84 |   <MenubarPrimitive.Portal>
 85 |     <MenubarPrimitive.Content
 86 |       ref={ref}
 87 |       align={align}
 88 |       alignOffset={alignOffset}
 89 |       sideOffset={sideOffset}
 90 |       className={cn(
 91 |         "z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 92 |         className,
 93 |       )}
 94 |       {...props}
 95 |     />
 96 |   </MenubarPrimitive.Portal>
 97 | ));
 98 | MenubarContent.displayName = MenubarPrimitive.Content.displayName;
 99 | 
100 | const MenubarItem = React.forwardRef<
101 |   React.ElementRef<typeof MenubarPrimitive.Item>,
102 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {
103 |     inset?: boolean;
104 |   }
105 | >(({ className, inset, ...props }, ref) => (
106 |   <MenubarPrimitive.Item
107 |     ref={ref}
108 |     className={cn(
109 |       "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
110 |       inset && "pl-8",
111 |       className,
112 |     )}
113 |     {...props}
114 |   />
115 | ));
116 | MenubarItem.displayName = MenubarPrimitive.Item.displayName;
117 | 
118 | const MenubarCheckboxItem = React.forwardRef<
119 |   React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,
120 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>
121 | >(({ className, children, checked, ...props }, ref) => (
122 |   <MenubarPrimitive.CheckboxItem
123 |     ref={ref}
124 |     className={cn(
125 |       "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
126 |       className,
127 |     )}
128 |     checked={checked}
129 |     {...props}
130 |   >
131 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
132 |       <MenubarPrimitive.ItemIndicator>
133 |         <Check className="h-4 w-4" />
134 |       </MenubarPrimitive.ItemIndicator>
135 |     </span>
136 |     {children}
137 |   </MenubarPrimitive.CheckboxItem>
138 | ));
139 | MenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName;
140 | 
141 | const MenubarRadioItem = React.forwardRef<
142 |   React.ElementRef<typeof MenubarPrimitive.RadioItem>,
143 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>
144 | >(({ className, children, ...props }, ref) => (
145 |   <MenubarPrimitive.RadioItem
146 |     ref={ref}
147 |     className={cn(
148 |       "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
149 |       className,
150 |     )}
151 |     {...props}
152 |   >
153 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
154 |       <MenubarPrimitive.ItemIndicator>
155 |         <Circle className="h-2 w-2 fill-current" />
156 |       </MenubarPrimitive.ItemIndicator>
157 |     </span>
158 |     {children}
159 |   </MenubarPrimitive.RadioItem>
160 | ));
161 | MenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName;
162 | 
163 | const MenubarLabel = React.forwardRef<
164 |   React.ElementRef<typeof MenubarPrimitive.Label>,
165 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {
166 |     inset?: boolean;
167 |   }
168 | >(({ className, inset, ...props }, ref) => (
169 |   <MenubarPrimitive.Label
170 |     ref={ref}
171 |     className={cn("px-2 py-1.5 text-sm font-semibold", inset && "pl-8", className)}
172 |     {...props}
173 |   />
174 | ));
175 | MenubarLabel.displayName = MenubarPrimitive.Label.displayName;
176 | 
177 | const MenubarSeparator = React.forwardRef<
178 |   React.ElementRef<typeof MenubarPrimitive.Separator>,
179 |   React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>
180 | >(({ className, ...props }, ref) => (
181 |   <MenubarPrimitive.Separator ref={ref} className={cn("-mx-1 my-1 h-px bg-muted", className)} {...props} />
182 | ));
183 | MenubarSeparator.displayName = MenubarPrimitive.Separator.displayName;
184 | 
185 | const MenubarShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
186 |   return <span className={cn("ml-auto text-xs tracking-widest text-muted-foreground", className)} {...props} />;
187 | };
188 | MenubarShortcut.displayname = "MenubarShortcut";
189 | 
190 | export {
191 |   Menubar,
192 |   MenubarMenu,
193 |   MenubarTrigger,
194 |   MenubarContent,
195 |   MenubarItem,
196 |   MenubarSeparator,
197 |   MenubarLabel,
198 |   MenubarCheckboxItem,
199 |   MenubarRadioGroup,
200 |   MenubarRadioItem,
201 |   MenubarPortal,
202 |   MenubarSubContent,
203 |   MenubarSubTrigger,
204 |   MenubarGroup,
205 |   MenubarSub,
206 |   MenubarShortcut,
207 | };
208 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/navigation-menu.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import * as NavigationMenuPrimitive from "@radix-ui/react-navigation-menu";
  3 | import { cva } from "class-variance-authority";
  4 | import { ChevronDown } from "lucide-react";
  5 | 
  6 | import { cn } from "@/lib/utils";
  7 | 
  8 | const NavigationMenu = React.forwardRef<
  9 |   React.ElementRef<typeof NavigationMenuPrimitive.Root>,
 10 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
 11 | >(({ className, children, ...props }, ref) => (
 12 |   <NavigationMenuPrimitive.Root
 13 |     ref={ref}
 14 |     className={cn("relative z-10 flex max-w-max flex-1 items-center justify-center", className)}
 15 |     {...props}
 16 |   >
 17 |     {children}
 18 |     <NavigationMenuViewport />
 19 |   </NavigationMenuPrimitive.Root>
 20 | ));
 21 | NavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName;
 22 | 
 23 | const NavigationMenuList = React.forwardRef<
 24 |   React.ElementRef<typeof NavigationMenuPrimitive.List>,
 25 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
 26 | >(({ className, ...props }, ref) => (
 27 |   <NavigationMenuPrimitive.List
 28 |     ref={ref}
 29 |     className={cn("group flex flex-1 list-none items-center justify-center space-x-1", className)}
 30 |     {...props}
 31 |   />
 32 | ));
 33 | NavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName;
 34 | 
 35 | const NavigationMenuItem = NavigationMenuPrimitive.Item;
 36 | 
 37 | const navigationMenuTriggerStyle = cva(
 38 |   "group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50",
 39 | );
 40 | 
 41 | const NavigationMenuTrigger = React.forwardRef<
 42 |   React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
 43 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
 44 | >(({ className, children, ...props }, ref) => (
 45 |   <NavigationMenuPrimitive.Trigger
 46 |     ref={ref}
 47 |     className={cn(navigationMenuTriggerStyle(), "group", className)}
 48 |     {...props}
 49 |   >
 50 |     {children}{" "}
 51 |     <ChevronDown
 52 |       className="relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180"
 53 |       aria-hidden="true"
 54 |     />
 55 |   </NavigationMenuPrimitive.Trigger>
 56 | ));
 57 | NavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName;
 58 | 
 59 | const NavigationMenuContent = React.forwardRef<
 60 |   React.ElementRef<typeof NavigationMenuPrimitive.Content>,
 61 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
 62 | >(({ className, ...props }, ref) => (
 63 |   <NavigationMenuPrimitive.Content
 64 |     ref={ref}
 65 |     className={cn(
 66 |       "left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto",
 67 |       className,
 68 |     )}
 69 |     {...props}
 70 |   />
 71 | ));
 72 | NavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName;
 73 | 
 74 | const NavigationMenuLink = NavigationMenuPrimitive.Link;
 75 | 
 76 | const NavigationMenuViewport = React.forwardRef<
 77 |   React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
 78 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
 79 | >(({ className, ...props }, ref) => (
 80 |   <div className={cn("absolute left-0 top-full flex justify-center")}>
 81 |     <NavigationMenuPrimitive.Viewport
 82 |       className={cn(
 83 |         "origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]",
 84 |         className,
 85 |       )}
 86 |       ref={ref}
 87 |       {...props}
 88 |     />
 89 |   </div>
 90 | ));
 91 | NavigationMenuViewport.displayName = NavigationMenuPrimitive.Viewport.displayName;
 92 | 
 93 | const NavigationMenuIndicator = React.forwardRef<
 94 |   React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
 95 |   React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
 96 | >(({ className, ...props }, ref) => (
 97 |   <NavigationMenuPrimitive.Indicator
 98 |     ref={ref}
 99 |     className={cn(
100 |       "top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in",
101 |       className,
102 |     )}
103 |     {...props}
104 |   >
105 |     <div className="relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md" />
106 |   </NavigationMenuPrimitive.Indicator>
107 | ));
108 | NavigationMenuIndicator.displayName = NavigationMenuPrimitive.Indicator.displayName;
109 | 
110 | export {
111 |   navigationMenuTriggerStyle,
112 |   NavigationMenu,
113 |   NavigationMenuList,
114 |   NavigationMenuItem,
115 |   NavigationMenuContent,
116 |   NavigationMenuTrigger,
117 |   NavigationMenuLink,
118 |   NavigationMenuIndicator,
119 |   NavigationMenuViewport,
120 | };
121 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/pagination.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import { ChevronLeft, ChevronRight, MoreHorizontal } from "lucide-react";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | import { ButtonProps, buttonVariants } from "@/components/ui/button";
 6 | 
 7 | const Pagination = ({ className, ...props }: React.ComponentProps<"nav">) => (
 8 |   <nav
 9 |     role="navigation"
10 |     aria-label="pagination"
11 |     className={cn("mx-auto flex w-full justify-center", className)}
12 |     {...props}
13 |   />
14 | );
15 | Pagination.displayName = "Pagination";
16 | 
17 | const PaginationContent = React.forwardRef<HTMLUListElement, React.ComponentProps<"ul">>(
18 |   ({ className, ...props }, ref) => (
19 |     <ul ref={ref} className={cn("flex flex-row items-center gap-1", className)} {...props} />
20 |   ),
21 | );
22 | PaginationContent.displayName = "PaginationContent";
23 | 
24 | const PaginationItem = React.forwardRef<HTMLLIElement, React.ComponentProps<"li">>(({ className, ...props }, ref) => (
25 |   <li ref={ref} className={cn("", className)} {...props} />
26 | ));
27 | PaginationItem.displayName = "PaginationItem";
28 | 
29 | type PaginationLinkProps = {
30 |   isActive?: boolean;
31 | } & Pick<ButtonProps, "size"> &
32 |   React.ComponentProps<"a">;
33 | 
34 | const PaginationLink = ({ className, isActive, size = "icon", ...props }: PaginationLinkProps) => (
35 |   <a
36 |     aria-current={isActive ? "page" : undefined}
37 |     className={cn(
38 |       buttonVariants({
39 |         variant: isActive ? "outline" : "ghost",
40 |         size,
41 |       }),
42 |       className,
43 |     )}
44 |     {...props}
45 |   />
46 | );
47 | PaginationLink.displayName = "PaginationLink";
48 | 
49 | const PaginationPrevious = ({ className, ...props }: React.ComponentProps<typeof PaginationLink>) => (
50 |   <PaginationLink aria-label="Go to previous page" size="default" className={cn("gap-1 pl-2.5", className)} {...props}>
51 |     <ChevronLeft className="h-4 w-4" />
52 |     <span>Previous</span>
53 |   </PaginationLink>
54 | );
55 | PaginationPrevious.displayName = "PaginationPrevious";
56 | 
57 | const PaginationNext = ({ className, ...props }: React.ComponentProps<typeof PaginationLink>) => (
58 |   <PaginationLink aria-label="Go to next page" size="default" className={cn("gap-1 pr-2.5", className)} {...props}>
59 |     <span>Next</span>
60 |     <ChevronRight className="h-4 w-4" />
61 |   </PaginationLink>
62 | );
63 | PaginationNext.displayName = "PaginationNext";
64 | 
65 | const PaginationEllipsis = ({ className, ...props }: React.ComponentProps<"span">) => (
66 |   <span aria-hidden className={cn("flex h-9 w-9 items-center justify-center", className)} {...props}>
67 |     <MoreHorizontal className="h-4 w-4" />
68 |     <span className="sr-only">More pages</span>
69 |   </span>
70 | );
71 | PaginationEllipsis.displayName = "PaginationEllipsis";
72 | 
73 | export {
74 |   Pagination,
75 |   PaginationContent,
76 |   PaginationEllipsis,
77 |   PaginationItem,
78 |   PaginationLink,
79 |   PaginationNext,
80 |   PaginationPrevious,
81 | };
82 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/popover.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as PopoverPrimitive from "@radix-ui/react-popover";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const Popover = PopoverPrimitive.Root;
 7 | 
 8 | const PopoverTrigger = PopoverPrimitive.Trigger;
 9 | 
10 | const PopoverContent = React.forwardRef<
11 |   React.ElementRef<typeof PopoverPrimitive.Content>,
12 |   React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
13 | >(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
14 |   <PopoverPrimitive.Portal>
15 |     <PopoverPrimitive.Content
16 |       ref={ref}
17 |       align={align}
18 |       sideOffset={sideOffset}
19 |       className={cn(
20 |         "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
21 |         className,
22 |       )}
23 |       {...props}
24 |     />
25 |   </PopoverPrimitive.Portal>
26 | ));
27 | PopoverContent.displayName = PopoverPrimitive.Content.displayName;
28 | 
29 | export { Popover, PopoverTrigger, PopoverContent };
30 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/progress.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as ProgressPrimitive from "@radix-ui/react-progress";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const Progress = React.forwardRef<
 7 |   React.ElementRef<typeof ProgressPrimitive.Root>,
 8 |   React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
 9 | >(({ className, value, ...props }, ref) => (
10 |   <ProgressPrimitive.Root
11 |     ref={ref}
12 |     className={cn("relative h-4 w-full overflow-hidden rounded-full bg-secondary", className)}
13 |     {...props}
14 |   >
15 |     <ProgressPrimitive.Indicator
16 |       className="h-full w-full flex-1 bg-primary transition-all"
17 |       style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
18 |     />
19 |   </ProgressPrimitive.Root>
20 | ));
21 | Progress.displayName = ProgressPrimitive.Root.displayName;
22 | 
23 | export { Progress };
24 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/radio-group.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as RadioGroupPrimitive from "@radix-ui/react-radio-group";
 3 | import { Circle } from "lucide-react";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | 
 7 | const RadioGroup = React.forwardRef<
 8 |   React.ElementRef<typeof RadioGroupPrimitive.Root>,
 9 |   React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>
10 | >(({ className, ...props }, ref) => {
11 |   return <RadioGroupPrimitive.Root className={cn("grid gap-2", className)} {...props} ref={ref} />;
12 | });
13 | RadioGroup.displayName = RadioGroupPrimitive.Root.displayName;
14 | 
15 | const RadioGroupItem = React.forwardRef<
16 |   React.ElementRef<typeof RadioGroupPrimitive.Item>,
17 |   React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>
18 | >(({ className, ...props }, ref) => {
19 |   return (
20 |     <RadioGroupPrimitive.Item
21 |       ref={ref}
22 |       className={cn(
23 |         "aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
24 |         className,
25 |       )}
26 |       {...props}
27 |     >
28 |       <RadioGroupPrimitive.Indicator className="flex items-center justify-center">
29 |         <Circle className="h-2.5 w-2.5 fill-current text-current" />
30 |       </RadioGroupPrimitive.Indicator>
31 |     </RadioGroupPrimitive.Item>
32 |   );
33 | });
34 | RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;
35 | 
36 | export { RadioGroup, RadioGroupItem };
37 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/resizable.tsx:
--------------------------------------------------------------------------------
 1 | import { GripVertical } from "lucide-react";
 2 | import * as ResizablePrimitive from "react-resizable-panels";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const ResizablePanelGroup = ({ className, ...props }: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (
 7 |   <ResizablePrimitive.PanelGroup
 8 |     className={cn("flex h-full w-full data-[panel-group-direction=vertical]:flex-col", className)}
 9 |     {...props}
10 |   />
11 | );
12 | 
13 | const ResizablePanel = ResizablePrimitive.Panel;
14 | 
15 | const ResizableHandle = ({
16 |   withHandle,
17 |   className,
18 |   ...props
19 | }: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {
20 |   withHandle?: boolean;
21 | }) => (
22 |   <ResizablePrimitive.PanelResizeHandle
23 |     className={cn(
24 |       "relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 [&[data-panel-group-direction=vertical]>div]:rotate-90",
25 |       className,
26 |     )}
27 |     {...props}
28 |   >
29 |     {withHandle && (
30 |       <div className="z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border">
31 |         <GripVertical className="h-2.5 w-2.5" />
32 |       </div>
33 |     )}
34 |   </ResizablePrimitive.PanelResizeHandle>
35 | );
36 | 
37 | export { ResizablePanelGroup, ResizablePanel, ResizableHandle };
38 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/scroll-area.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const ScrollArea = React.forwardRef<
 7 |   React.ElementRef<typeof ScrollAreaPrimitive.Root>,
 8 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
 9 | >(({ className, children, ...props }, ref) => (
10 |   <ScrollAreaPrimitive.Root ref={ref} className={cn("relative overflow-hidden", className)} {...props}>
11 |     <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">{children}</ScrollAreaPrimitive.Viewport>
12 |     <ScrollBar />
13 |     <ScrollAreaPrimitive.Corner />
14 |   </ScrollAreaPrimitive.Root>
15 | ));
16 | ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName;
17 | 
18 | const ScrollBar = React.forwardRef<
19 |   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
20 |   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
21 | >(({ className, orientation = "vertical", ...props }, ref) => (
22 |   <ScrollAreaPrimitive.ScrollAreaScrollbar
23 |     ref={ref}
24 |     orientation={orientation}
25 |     className={cn(
26 |       "flex touch-none select-none transition-colors",
27 |       orientation === "vertical" && "h-full w-2.5 border-l border-l-transparent p-[1px]",
28 |       orientation === "horizontal" && "h-2.5 flex-col border-t border-t-transparent p-[1px]",
29 |       className,
30 |     )}
31 |     {...props}
32 |   >
33 |     <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
34 |   </ScrollAreaPrimitive.ScrollAreaScrollbar>
35 | ));
36 | ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName;
37 | 
38 | export { ScrollArea, ScrollBar };
39 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/select.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import * as SelectPrimitive from "@radix-ui/react-select";
  3 | import { Check, ChevronDown, ChevronUp } from "lucide-react";
  4 | 
  5 | import { cn } from "@/lib/utils";
  6 | 
  7 | const Select = SelectPrimitive.Root;
  8 | 
  9 | const SelectGroup = SelectPrimitive.Group;
 10 | 
 11 | const SelectValue = SelectPrimitive.Value;
 12 | 
 13 | const SelectTrigger = React.forwardRef<
 14 |   React.ElementRef<typeof SelectPrimitive.Trigger>,
 15 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
 16 | >(({ className, children, ...props }, ref) => (
 17 |   <SelectPrimitive.Trigger
 18 |     ref={ref}
 19 |     className={cn(
 20 |       "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
 21 |       className,
 22 |     )}
 23 |     {...props}
 24 |   >
 25 |     {children}
 26 |     <SelectPrimitive.Icon asChild>
 27 |       <ChevronDown className="h-4 w-4 opacity-50" />
 28 |     </SelectPrimitive.Icon>
 29 |   </SelectPrimitive.Trigger>
 30 | ));
 31 | SelectTrigger.displayName = SelectPrimitive.Trigger.displayName;
 32 | 
 33 | const SelectScrollUpButton = React.forwardRef<
 34 |   React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
 35 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
 36 | >(({ className, ...props }, ref) => (
 37 |   <SelectPrimitive.ScrollUpButton
 38 |     ref={ref}
 39 |     className={cn("flex cursor-default items-center justify-center py-1", className)}
 40 |     {...props}
 41 |   >
 42 |     <ChevronUp className="h-4 w-4" />
 43 |   </SelectPrimitive.ScrollUpButton>
 44 | ));
 45 | SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;
 46 | 
 47 | const SelectScrollDownButton = React.forwardRef<
 48 |   React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
 49 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
 50 | >(({ className, ...props }, ref) => (
 51 |   <SelectPrimitive.ScrollDownButton
 52 |     ref={ref}
 53 |     className={cn("flex cursor-default items-center justify-center py-1", className)}
 54 |     {...props}
 55 |   >
 56 |     <ChevronDown className="h-4 w-4" />
 57 |   </SelectPrimitive.ScrollDownButton>
 58 | ));
 59 | SelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName;
 60 | 
 61 | const SelectContent = React.forwardRef<
 62 |   React.ElementRef<typeof SelectPrimitive.Content>,
 63 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
 64 | >(({ className, children, position = "popper", ...props }, ref) => (
 65 |   <SelectPrimitive.Portal>
 66 |     <SelectPrimitive.Content
 67 |       ref={ref}
 68 |       className={cn(
 69 |         "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
 70 |         position === "popper" &&
 71 |           "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
 72 |         className,
 73 |       )}
 74 |       position={position}
 75 |       {...props}
 76 |     >
 77 |       <SelectScrollUpButton />
 78 |       <SelectPrimitive.Viewport
 79 |         className={cn(
 80 |           "p-1",
 81 |           position === "popper" &&
 82 |             "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]",
 83 |         )}
 84 |       >
 85 |         {children}
 86 |       </SelectPrimitive.Viewport>
 87 |       <SelectScrollDownButton />
 88 |     </SelectPrimitive.Content>
 89 |   </SelectPrimitive.Portal>
 90 | ));
 91 | SelectContent.displayName = SelectPrimitive.Content.displayName;
 92 | 
 93 | const SelectLabel = React.forwardRef<
 94 |   React.ElementRef<typeof SelectPrimitive.Label>,
 95 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
 96 | >(({ className, ...props }, ref) => (
 97 |   <SelectPrimitive.Label ref={ref} className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)} {...props} />
 98 | ));
 99 | SelectLabel.displayName = SelectPrimitive.Label.displayName;
100 | 
101 | const SelectItem = React.forwardRef<
102 |   React.ElementRef<typeof SelectPrimitive.Item>,
103 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
104 | >(({ className, children, ...props }, ref) => (
105 |   <SelectPrimitive.Item
106 |     ref={ref}
107 |     className={cn(
108 |       "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-accent focus:text-accent-foreground",
109 |       className,
110 |     )}
111 |     {...props}
112 |   >
113 |     <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
114 |       <SelectPrimitive.ItemIndicator>
115 |         <Check className="h-4 w-4" />
116 |       </SelectPrimitive.ItemIndicator>
117 |     </span>
118 | 
119 |     <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
120 |   </SelectPrimitive.Item>
121 | ));
122 | SelectItem.displayName = SelectPrimitive.Item.displayName;
123 | 
124 | const SelectSeparator = React.forwardRef<
125 |   React.ElementRef<typeof SelectPrimitive.Separator>,
126 |   React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
127 | >(({ className, ...props }, ref) => (
128 |   <SelectPrimitive.Separator ref={ref} className={cn("-mx-1 my-1 h-px bg-muted", className)} {...props} />
129 | ));
130 | SelectSeparator.displayName = SelectPrimitive.Separator.displayName;
131 | 
132 | export {
133 |   Select,
134 |   SelectGroup,
135 |   SelectValue,
136 |   SelectTrigger,
137 |   SelectContent,
138 |   SelectLabel,
139 |   SelectItem,
140 |   SelectSeparator,
141 |   SelectScrollUpButton,
142 |   SelectScrollDownButton,
143 | };
144 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/separator.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as SeparatorPrimitive from "@radix-ui/react-separator";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const Separator = React.forwardRef<
 7 |   React.ElementRef<typeof SeparatorPrimitive.Root>,
 8 |   React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
 9 | >(({ className, orientation = "horizontal", decorative = true, ...props }, ref) => (
10 |   <SeparatorPrimitive.Root
11 |     ref={ref}
12 |     decorative={decorative}
13 |     orientation={orientation}
14 |     className={cn("shrink-0 bg-border", orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]", className)}
15 |     {...props}
16 |   />
17 | ));
18 | Separator.displayName = SeparatorPrimitive.Root.displayName;
19 | 
20 | export { Separator };
21 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/sheet.tsx:
--------------------------------------------------------------------------------
  1 | import * as SheetPrimitive from "@radix-ui/react-dialog";
  2 | import { cva, type VariantProps } from "class-variance-authority";
  3 | import { X } from "lucide-react";
  4 | import * as React from "react";
  5 | 
  6 | import { cn } from "@/lib/utils";
  7 | 
  8 | const Sheet = SheetPrimitive.Root;
  9 | 
 10 | const SheetTrigger = SheetPrimitive.Trigger;
 11 | 
 12 | const SheetClose = SheetPrimitive.Close;
 13 | 
 14 | const SheetPortal = SheetPrimitive.Portal;
 15 | 
 16 | const SheetOverlay = React.forwardRef<
 17 |   React.ElementRef<typeof SheetPrimitive.Overlay>,
 18 |   React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
 19 | >(({ className, ...props }, ref) => (
 20 |   <SheetPrimitive.Overlay
 21 |     className={cn(
 22 |       "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
 23 |       className,
 24 |     )}
 25 |     {...props}
 26 |     ref={ref}
 27 |   />
 28 | ));
 29 | SheetOverlay.displayName = SheetPrimitive.Overlay.displayName;
 30 | 
 31 | const sheetVariants = cva(
 32 |   "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
 33 |   {
 34 |     variants: {
 35 |       side: {
 36 |         top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
 37 |         bottom:
 38 |           "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
 39 |         left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
 40 |         right:
 41 |           "inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
 42 |       },
 43 |     },
 44 |     defaultVariants: {
 45 |       side: "right",
 46 |     },
 47 |   },
 48 | );
 49 | 
 50 | interface SheetContentProps
 51 |   extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
 52 |     VariantProps<typeof sheetVariants> {}
 53 | 
 54 | const SheetContent = React.forwardRef<React.ElementRef<typeof SheetPrimitive.Content>, SheetContentProps>(
 55 |   ({ side = "right", className, children, ...props }, ref) => (
 56 |     <SheetPortal>
 57 |       <SheetOverlay />
 58 |       <SheetPrimitive.Content ref={ref} className={cn(sheetVariants({ side }), className)} {...props}>
 59 |         {children}
 60 |         <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity data-[state=open]:bg-secondary hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none">
 61 |           <X className="h-4 w-4" />
 62 |           <span className="sr-only">Close</span>
 63 |         </SheetPrimitive.Close>
 64 |       </SheetPrimitive.Content>
 65 |     </SheetPortal>
 66 |   ),
 67 | );
 68 | SheetContent.displayName = SheetPrimitive.Content.displayName;
 69 | 
 70 | const SheetHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
 71 |   <div className={cn("flex flex-col space-y-2 text-center sm:text-left", className)} {...props} />
 72 | );
 73 | SheetHeader.displayName = "SheetHeader";
 74 | 
 75 | const SheetFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
 76 |   <div className={cn("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className)} {...props} />
 77 | );
 78 | SheetFooter.displayName = "SheetFooter";
 79 | 
 80 | const SheetTitle = React.forwardRef<
 81 |   React.ElementRef<typeof SheetPrimitive.Title>,
 82 |   React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
 83 | >(({ className, ...props }, ref) => (
 84 |   <SheetPrimitive.Title ref={ref} className={cn("text-lg font-semibold text-foreground", className)} {...props} />
 85 | ));
 86 | SheetTitle.displayName = SheetPrimitive.Title.displayName;
 87 | 
 88 | const SheetDescription = React.forwardRef<
 89 |   React.ElementRef<typeof SheetPrimitive.Description>,
 90 |   React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
 91 | >(({ className, ...props }, ref) => (
 92 |   <SheetPrimitive.Description ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
 93 | ));
 94 | SheetDescription.displayName = SheetPrimitive.Description.displayName;
 95 | 
 96 | export {
 97 |   Sheet,
 98 |   SheetClose,
 99 |   SheetContent,
100 |   SheetDescription,
101 |   SheetFooter,
102 |   SheetHeader,
103 |   SheetOverlay,
104 |   SheetPortal,
105 |   SheetTitle,
106 |   SheetTrigger,
107 | };
108 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/sidebar.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import { Slot } from "@radix-ui/react-slot";
  3 | import { VariantProps, cva } from "class-variance-authority";
  4 | import { PanelLeft } from "lucide-react";
  5 | 
  6 | import { useIsMobile } from "@/hooks/use-mobile";
  7 | import { cn } from "@/lib/utils";
  8 | import { Button } from "@/components/ui/button";
  9 | import { Input } from "@/components/ui/input";
 10 | import { Separator } from "@/components/ui/separator";
 11 | import { Sheet, SheetContent } from "@/components/ui/sheet";
 12 | import { Skeleton } from "@/components/ui/skeleton";
 13 | import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
 14 | 
 15 | const SIDEBAR_COOKIE_NAME = "sidebar:state";
 16 | const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;
 17 | const SIDEBAR_WIDTH = "16rem";
 18 | const SIDEBAR_WIDTH_MOBILE = "18rem";
 19 | const SIDEBAR_WIDTH_ICON = "3rem";
 20 | const SIDEBAR_KEYBOARD_SHORTCUT = "b";
 21 | 
 22 | type SidebarContext = {
 23 |   state: "expanded" | "collapsed";
 24 |   open: boolean;
 25 |   setOpen: (open: boolean) => void;
 26 |   openMobile: boolean;
 27 |   setOpenMobile: (open: boolean) => void;
 28 |   isMobile: boolean;
 29 |   toggleSidebar: () => void;
 30 | };
 31 | 
 32 | const SidebarContext = React.createContext<SidebarContext | null>(null);
 33 | 
 34 | function useSidebar() {
 35 |   const context = React.useContext(SidebarContext);
 36 |   if (!context) {
 37 |     throw new Error("useSidebar must be used within a SidebarProvider.");
 38 |   }
 39 | 
 40 |   return context;
 41 | }
 42 | 
 43 | const SidebarProvider = React.forwardRef<
 44 |   HTMLDivElement,
 45 |   React.ComponentProps<"div"> & {
 46 |     defaultOpen?: boolean;
 47 |     open?: boolean;
 48 |     onOpenChange?: (open: boolean) => void;
 49 |   }
 50 | >(({ defaultOpen = true, open: openProp, onOpenChange: setOpenProp, className, style, children, ...props }, ref) => {
 51 |   const isMobile = useIsMobile();
 52 |   const [openMobile, setOpenMobile] = React.useState(false);
 53 | 
 54 |   // This is the internal state of the sidebar.
 55 |   // We use openProp and setOpenProp for control from outside the component.
 56 |   const [_open, _setOpen] = React.useState(defaultOpen);
 57 |   const open = openProp ?? _open;
 58 |   const setOpen = React.useCallback(
 59 |     (value: boolean | ((value: boolean) => boolean)) => {
 60 |       const openState = typeof value === "function" ? value(open) : value;
 61 |       if (setOpenProp) {
 62 |         setOpenProp(openState);
 63 |       } else {
 64 |         _setOpen(openState);
 65 |       }
 66 | 
 67 |       // This sets the cookie to keep the sidebar state.
 68 |       document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;
 69 |     },
 70 |     [setOpenProp, open],
 71 |   );
 72 | 
 73 |   // Helper to toggle the sidebar.
 74 |   const toggleSidebar = React.useCallback(() => {
 75 |     return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open);
 76 |   }, [isMobile, setOpen, setOpenMobile]);
 77 | 
 78 |   // Adds a keyboard shortcut to toggle the sidebar.
 79 |   React.useEffect(() => {
 80 |     const handleKeyDown = (event: KeyboardEvent) => {
 81 |       if (event.key === SIDEBAR_KEYBOARD_SHORTCUT && (event.metaKey || event.ctrlKey)) {
 82 |         event.preventDefault();
 83 |         toggleSidebar();
 84 |       }
 85 |     };
 86 | 
 87 |     window.addEventListener("keydown", handleKeyDown);
 88 |     return () => window.removeEventListener("keydown", handleKeyDown);
 89 |   }, [toggleSidebar]);
 90 | 
 91 |   // We add a state so that we can do data-state="expanded" or "collapsed".
 92 |   // This makes it easier to style the sidebar with Tailwind classes.
 93 |   const state = open ? "expanded" : "collapsed";
 94 | 
 95 |   const contextValue = React.useMemo<SidebarContext>(
 96 |     () => ({
 97 |       state,
 98 |       open,
 99 |       setOpen,
100 |       isMobile,
101 |       openMobile,
102 |       setOpenMobile,
103 |       toggleSidebar,
104 |     }),
105 |     [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar],
106 |   );
107 | 
108 |   return (
109 |     <SidebarContext.Provider value={contextValue}>
110 |       <TooltipProvider delayDuration={0}>
111 |         <div
112 |           style={
113 |             {
114 |               "--sidebar-width": SIDEBAR_WIDTH,
115 |               "--sidebar-width-icon": SIDEBAR_WIDTH_ICON,
116 |               ...style,
117 |             } as React.CSSProperties
118 |           }
119 |           className={cn("group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar", className)}
120 |           ref={ref}
121 |           {...props}
122 |         >
123 |           {children}
124 |         </div>
125 |       </TooltipProvider>
126 |     </SidebarContext.Provider>
127 |   );
128 | });
129 | SidebarProvider.displayName = "SidebarProvider";
130 | 
131 | const Sidebar = React.forwardRef<
132 |   HTMLDivElement,
133 |   React.ComponentProps<"div"> & {
134 |     side?: "left" | "right";
135 |     variant?: "sidebar" | "floating" | "inset";
136 |     collapsible?: "offcanvas" | "icon" | "none";
137 |   }
138 | >(({ side = "left", variant = "sidebar", collapsible = "offcanvas", className, children, ...props }, ref) => {
139 |   const { isMobile, state, openMobile, setOpenMobile } = useSidebar();
140 | 
141 |   if (collapsible === "none") {
142 |     return (
143 |       <div
144 |         className={cn("flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground", className)}
145 |         ref={ref}
146 |         {...props}
147 |       >
148 |         {children}
149 |       </div>
150 |     );
151 |   }
152 | 
153 |   if (isMobile) {
154 |     return (
155 |       <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>
156 |         <SheetContent
157 |           data-sidebar="sidebar"
158 |           data-mobile="true"
159 |           className="w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden"
160 |           style={
161 |             {
162 |               "--sidebar-width": SIDEBAR_WIDTH_MOBILE,
163 |             } as React.CSSProperties
164 |           }
165 |           side={side}
166 |         >
167 |           <div className="flex h-full w-full flex-col">{children}</div>
168 |         </SheetContent>
169 |       </Sheet>
170 |     );
171 |   }
172 | 
173 |   return (
174 |     <div
175 |       ref={ref}
176 |       className="group peer hidden text-sidebar-foreground md:block"
177 |       data-state={state}
178 |       data-collapsible={state === "collapsed" ? collapsible : ""}
179 |       data-variant={variant}
180 |       data-side={side}
181 |     >
182 |       {/* This is what handles the sidebar gap on desktop */}
183 |       <div
184 |         className={cn(
185 |           "relative h-svh w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear",
186 |           "group-data-[collapsible=offcanvas]:w-0",
187 |           "group-data-[side=right]:rotate-180",
188 |           variant === "floating" || variant === "inset"
189 |             ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]"
190 |             : "group-data-[collapsible=icon]:w-[--sidebar-width-icon]",
191 |         )}
192 |       />
193 |       <div
194 |         className={cn(
195 |           "fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex",
196 |           side === "left"
197 |             ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]"
198 |             : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
199 |           // Adjust the padding for floating and inset variants.
200 |           variant === "floating" || variant === "inset"
201 |             ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]"
202 |             : "group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l",
203 |           className,
204 |         )}
205 |         {...props}
206 |       >
207 |         <div
208 |           data-sidebar="sidebar"
209 |           className="flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow"
210 |         >
211 |           {children}
212 |         </div>
213 |       </div>
214 |     </div>
215 |   );
216 | });
217 | Sidebar.displayName = "Sidebar";
218 | 
219 | const SidebarTrigger = React.forwardRef<React.ElementRef<typeof Button>, React.ComponentProps<typeof Button>>(
220 |   ({ className, onClick, ...props }, ref) => {
221 |     const { toggleSidebar } = useSidebar();
222 | 
223 |     return (
224 |       <Button
225 |         ref={ref}
226 |         data-sidebar="trigger"
227 |         variant="ghost"
228 |         size="icon"
229 |         className={cn("h-7 w-7", className)}
230 |         onClick={(event) => {
231 |           onClick?.(event);
232 |           toggleSidebar();
233 |         }}
234 |         {...props}
235 |       >
236 |         <PanelLeft />
237 |         <span className="sr-only">Toggle Sidebar</span>
238 |       </Button>
239 |     );
240 |   },
241 | );
242 | SidebarTrigger.displayName = "SidebarTrigger";
243 | 
244 | const SidebarRail = React.forwardRef<HTMLButtonElement, React.ComponentProps<"button">>(
245 |   ({ className, ...props }, ref) => {
246 |     const { toggleSidebar } = useSidebar();
247 | 
248 |     return (
249 |       <button
250 |         ref={ref}
251 |         data-sidebar="rail"
252 |         aria-label="Toggle Sidebar"
253 |         tabIndex={-1}
254 |         onClick={toggleSidebar}
255 |         title="Toggle Sidebar"
256 |         className={cn(
257 |           "absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] group-data-[side=left]:-right-4 group-data-[side=right]:left-0 hover:after:bg-sidebar-border sm:flex",
258 |           "[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize",
259 |           "[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize",
260 |           "group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar",
261 |           "[[data-side=left][data-collapsible=offcanvas]_&]:-right-2",
262 |           "[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",
263 |           className,
264 |         )}
265 |         {...props}
266 |       />
267 |     );
268 |   },
269 | );
270 | SidebarRail.displayName = "SidebarRail";
271 | 
272 | const SidebarInset = React.forwardRef<HTMLDivElement, React.ComponentProps<"main">>(({ className, ...props }, ref) => {
273 |   return (
274 |     <main
275 |       ref={ref}
276 |       className={cn(
277 |         "relative flex min-h-svh flex-1 flex-col bg-background",
278 |         "peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow",
279 |         className,
280 |       )}
281 |       {...props}
282 |     />
283 |   );
284 | });
285 | SidebarInset.displayName = "SidebarInset";
286 | 
287 | const SidebarInput = React.forwardRef<React.ElementRef<typeof Input>, React.ComponentProps<typeof Input>>(
288 |   ({ className, ...props }, ref) => {
289 |     return (
290 |       <Input
291 |         ref={ref}
292 |         data-sidebar="input"
293 |         className={cn(
294 |           "h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring",
295 |           className,
296 |         )}
297 |         {...props}
298 |       />
299 |     );
300 |   },
301 | );
302 | SidebarInput.displayName = "SidebarInput";
303 | 
304 | const SidebarHeader = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(({ className, ...props }, ref) => {
305 |   return <div ref={ref} data-sidebar="header" className={cn("flex flex-col gap-2 p-2", className)} {...props} />;
306 | });
307 | SidebarHeader.displayName = "SidebarHeader";
308 | 
309 | const SidebarFooter = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(({ className, ...props }, ref) => {
310 |   return <div ref={ref} data-sidebar="footer" className={cn("flex flex-col gap-2 p-2", className)} {...props} />;
311 | });
312 | SidebarFooter.displayName = "SidebarFooter";
313 | 
314 | const SidebarSeparator = React.forwardRef<React.ElementRef<typeof Separator>, React.ComponentProps<typeof Separator>>(
315 |   ({ className, ...props }, ref) => {
316 |     return (
317 |       <Separator
318 |         ref={ref}
319 |         data-sidebar="separator"
320 |         className={cn("mx-2 w-auto bg-sidebar-border", className)}
321 |         {...props}
322 |       />
323 |     );
324 |   },
325 | );
326 | SidebarSeparator.displayName = "SidebarSeparator";
327 | 
328 | const SidebarContent = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(({ className, ...props }, ref) => {
329 |   return (
330 |     <div
331 |       ref={ref}
332 |       data-sidebar="content"
333 |       className={cn(
334 |         "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
335 |         className,
336 |       )}
337 |       {...props}
338 |     />
339 |   );
340 | });
341 | SidebarContent.displayName = "SidebarContent";
342 | 
343 | const SidebarGroup = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(({ className, ...props }, ref) => {
344 |   return (
345 |     <div
346 |       ref={ref}
347 |       data-sidebar="group"
348 |       className={cn("relative flex w-full min-w-0 flex-col p-2", className)}
349 |       {...props}
350 |     />
351 |   );
352 | });
353 | SidebarGroup.displayName = "SidebarGroup";
354 | 
355 | const SidebarGroupLabel = React.forwardRef<HTMLDivElement, React.ComponentProps<"div"> & { asChild?: boolean }>(
356 |   ({ className, asChild = false, ...props }, ref) => {
357 |     const Comp = asChild ? Slot : "div";
358 | 
359 |     return (
360 |       <Comp
361 |         ref={ref}
362 |         data-sidebar="group-label"
363 |         className={cn(
364 |           "flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
365 |           "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",
366 |           className,
367 |         )}
368 |         {...props}
369 |       />
370 |     );
371 |   },
372 | );
373 | SidebarGroupLabel.displayName = "SidebarGroupLabel";
374 | 
375 | const SidebarGroupAction = React.forwardRef<HTMLButtonElement, React.ComponentProps<"button"> & { asChild?: boolean }>(
376 |   ({ className, asChild = false, ...props }, ref) => {
377 |     const Comp = asChild ? Slot : "button";
378 | 
379 |     return (
380 |       <Comp
381 |         ref={ref}
382 |         data-sidebar="group-action"
383 |         className={cn(
384 |           "absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
385 |           // Increases the hit area of the button on mobile.
386 |           "after:absolute after:-inset-2 after:md:hidden",
387 |           "group-data-[collapsible=icon]:hidden",
388 |           className,
389 |         )}
390 |         {...props}
391 |       />
392 |     );
393 |   },
394 | );
395 | SidebarGroupAction.displayName = "SidebarGroupAction";
396 | 
397 | const SidebarGroupContent = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
398 |   ({ className, ...props }, ref) => (
399 |     <div ref={ref} data-sidebar="group-content" className={cn("w-full text-sm", className)} {...props} />
400 |   ),
401 | );
402 | SidebarGroupContent.displayName = "SidebarGroupContent";
403 | 
404 | const SidebarMenu = React.forwardRef<HTMLUListElement, React.ComponentProps<"ul">>(({ className, ...props }, ref) => (
405 |   <ul ref={ref} data-sidebar="menu" className={cn("flex w-full min-w-0 flex-col gap-1", className)} {...props} />
406 | ));
407 | SidebarMenu.displayName = "SidebarMenu";
408 | 
409 | const SidebarMenuItem = React.forwardRef<HTMLLIElement, React.ComponentProps<"li">>(({ className, ...props }, ref) => (
410 |   <li ref={ref} data-sidebar="menu-item" className={cn("group/menu-item relative", className)} {...props} />
411 | ));
412 | SidebarMenuItem.displayName = "SidebarMenuItem";
413 | 
414 | const sidebarMenuButtonVariants = cva(
415 |   "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
416 |   {
417 |     variants: {
418 |       variant: {
419 |         default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
420 |         outline:
421 |           "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]",
422 |       },
423 |       size: {
424 |         default: "h-8 text-sm",
425 |         sm: "h-7 text-xs",
426 |         lg: "h-12 text-sm group-data-[collapsible=icon]:!p-0",
427 |       },
428 |     },
429 |     defaultVariants: {
430 |       variant: "default",
431 |       size: "default",
432 |     },
433 |   },
434 | );
435 | 
436 | const SidebarMenuButton = React.forwardRef<
437 |   HTMLButtonElement,
438 |   React.ComponentProps<"button"> & {
439 |     asChild?: boolean;
440 |     isActive?: boolean;
441 |     tooltip?: string | React.ComponentProps<typeof TooltipContent>;
442 |   } & VariantProps<typeof sidebarMenuButtonVariants>
443 | >(({ asChild = false, isActive = false, variant = "default", size = "default", tooltip, className, ...props }, ref) => {
444 |   const Comp = asChild ? Slot : "button";
445 |   const { isMobile, state } = useSidebar();
446 | 
447 |   const button = (
448 |     <Comp
449 |       ref={ref}
450 |       data-sidebar="menu-button"
451 |       data-size={size}
452 |       data-active={isActive}
453 |       className={cn(sidebarMenuButtonVariants({ variant, size }), className)}
454 |       {...props}
455 |     />
456 |   );
457 | 
458 |   if (!tooltip) {
459 |     return button;
460 |   }
461 | 
462 |   if (typeof tooltip === "string") {
463 |     tooltip = {
464 |       children: tooltip,
465 |     };
466 |   }
467 | 
468 |   return (
469 |     <Tooltip>
470 |       <TooltipTrigger asChild>{button}</TooltipTrigger>
471 |       <TooltipContent side="right" align="center" hidden={state !== "collapsed" || isMobile} {...tooltip} />
472 |     </Tooltip>
473 |   );
474 | });
475 | SidebarMenuButton.displayName = "SidebarMenuButton";
476 | 
477 | const SidebarMenuAction = React.forwardRef<
478 |   HTMLButtonElement,
479 |   React.ComponentProps<"button"> & {
480 |     asChild?: boolean;
481 |     showOnHover?: boolean;
482 |   }
483 | >(({ className, asChild = false, showOnHover = false, ...props }, ref) => {
484 |   const Comp = asChild ? Slot : "button";
485 | 
486 |   return (
487 |     <Comp
488 |       ref={ref}
489 |       data-sidebar="menu-action"
490 |       className={cn(
491 |         "absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform peer-hover/menu-button:text-sidebar-accent-foreground hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
492 |         // Increases the hit area of the button on mobile.
493 |         "after:absolute after:-inset-2 after:md:hidden",
494 |         "peer-data-[size=sm]/menu-button:top-1",
495 |         "peer-data-[size=default]/menu-button:top-1.5",
496 |         "peer-data-[size=lg]/menu-button:top-2.5",
497 |         "group-data-[collapsible=icon]:hidden",
498 |         showOnHover &&
499 |           "group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0",
500 |         className,
501 |       )}
502 |       {...props}
503 |     />
504 |   );
505 | });
506 | SidebarMenuAction.displayName = "SidebarMenuAction";
507 | 
508 | const SidebarMenuBadge = React.forwardRef<HTMLDivElement, React.ComponentProps<"div">>(
509 |   ({ className, ...props }, ref) => (
510 |     <div
511 |       ref={ref}
512 |       data-sidebar="menu-badge"
513 |       className={cn(
514 |         "pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground",
515 |         "peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
516 |         "peer-data-[size=sm]/menu-button:top-1",
517 |         "peer-data-[size=default]/menu-button:top-1.5",
518 |         "peer-data-[size=lg]/menu-button:top-2.5",
519 |         "group-data-[collapsible=icon]:hidden",
520 |         className,
521 |       )}
522 |       {...props}
523 |     />
524 |   ),
525 | );
526 | SidebarMenuBadge.displayName = "SidebarMenuBadge";
527 | 
528 | const SidebarMenuSkeleton = React.forwardRef<
529 |   HTMLDivElement,
530 |   React.ComponentProps<"div"> & {
531 |     showIcon?: boolean;
532 |   }
533 | >(({ className, showIcon = false, ...props }, ref) => {
534 |   // Random width between 50 to 90%.
535 |   const width = React.useMemo(() => {
536 |     return `${Math.floor(Math.random() * 40) + 50}%`;
537 |   }, []);
538 | 
539 |   return (
540 |     <div
541 |       ref={ref}
542 |       data-sidebar="menu-skeleton"
543 |       className={cn("flex h-8 items-center gap-2 rounded-md px-2", className)}
544 |       {...props}
545 |     >
546 |       {showIcon && <Skeleton className="size-4 rounded-md" data-sidebar="menu-skeleton-icon" />}
547 |       <Skeleton
548 |         className="h-4 max-w-[--skeleton-width] flex-1"
549 |         data-sidebar="menu-skeleton-text"
550 |         style={
551 |           {
552 |             "--skeleton-width": width,
553 |           } as React.CSSProperties
554 |         }
555 |       />
556 |     </div>
557 |   );
558 | });
559 | SidebarMenuSkeleton.displayName = "SidebarMenuSkeleton";
560 | 
561 | const SidebarMenuSub = React.forwardRef<HTMLUListElement, React.ComponentProps<"ul">>(
562 |   ({ className, ...props }, ref) => (
563 |     <ul
564 |       ref={ref}
565 |       data-sidebar="menu-sub"
566 |       className={cn(
567 |         "mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5",
568 |         "group-data-[collapsible=icon]:hidden",
569 |         className,
570 |       )}
571 |       {...props}
572 |     />
573 |   ),
574 | );
575 | SidebarMenuSub.displayName = "SidebarMenuSub";
576 | 
577 | const SidebarMenuSubItem = React.forwardRef<HTMLLIElement, React.ComponentProps<"li">>(({ ...props }, ref) => (
578 |   <li ref={ref} {...props} />
579 | ));
580 | SidebarMenuSubItem.displayName = "SidebarMenuSubItem";
581 | 
582 | const SidebarMenuSubButton = React.forwardRef<
583 |   HTMLAnchorElement,
584 |   React.ComponentProps<"a"> & {
585 |     asChild?: boolean;
586 |     size?: "sm" | "md";
587 |     isActive?: boolean;
588 |   }
589 | >(({ asChild = false, size = "md", isActive, className, ...props }, ref) => {
590 |   const Comp = asChild ? Slot : "a";
591 | 
592 |   return (
593 |     <Comp
594 |       ref={ref}
595 |       data-sidebar="menu-sub-button"
596 |       data-size={size}
597 |       data-active={isActive}
598 |       className={cn(
599 |         "flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring aria-disabled:pointer-events-none aria-disabled:opacity-50 hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground",
600 |         "data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground",
601 |         size === "sm" && "text-xs",
602 |         size === "md" && "text-sm",
603 |         "group-data-[collapsible=icon]:hidden",
604 |         className,
605 |       )}
606 |       {...props}
607 |     />
608 |   );
609 | });
610 | SidebarMenuSubButton.displayName = "SidebarMenuSubButton";
611 | 
612 | export {
613 |   Sidebar,
614 |   SidebarContent,
615 |   SidebarFooter,
616 |   SidebarGroup,
617 |   SidebarGroupAction,
618 |   SidebarGroupContent,
619 |   SidebarGroupLabel,
620 |   SidebarHeader,
621 |   SidebarInput,
622 |   SidebarInset,
623 |   SidebarMenu,
624 |   SidebarMenuAction,
625 |   SidebarMenuBadge,
626 |   SidebarMenuButton,
627 |   SidebarMenuItem,
628 |   SidebarMenuSkeleton,
629 |   SidebarMenuSub,
630 |   SidebarMenuSubButton,
631 |   SidebarMenuSubItem,
632 |   SidebarProvider,
633 |   SidebarRail,
634 |   SidebarSeparator,
635 |   SidebarTrigger,
636 |   useSidebar,
637 | };
638 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/skeleton.tsx:
--------------------------------------------------------------------------------
1 | import { cn } from "@/lib/utils";
2 | 
3 | function Skeleton({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {
4 |   return <div className={cn("animate-pulse rounded-md bg-muted", className)} {...props} />;
5 | }
6 | 
7 | export { Skeleton };
8 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/slider.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as SliderPrimitive from "@radix-ui/react-slider";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const Slider = React.forwardRef<
 7 |   React.ElementRef<typeof SliderPrimitive.Root>,
 8 |   React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>
 9 | >(({ className, ...props }, ref) => (
10 |   <SliderPrimitive.Root
11 |     ref={ref}
12 |     className={cn("relative flex w-full touch-none select-none items-center", className)}
13 |     {...props}
14 |   >
15 |     <SliderPrimitive.Track className="relative h-2 w-full grow overflow-hidden rounded-full bg-secondary">
16 |       <SliderPrimitive.Range className="absolute h-full bg-primary" />
17 |     </SliderPrimitive.Track>
18 |     <SliderPrimitive.Thumb className="block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50" />
19 |   </SliderPrimitive.Root>
20 | ));
21 | Slider.displayName = SliderPrimitive.Root.displayName;
22 | 
23 | export { Slider };
24 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/sonner.tsx:
--------------------------------------------------------------------------------
 1 | import { useTheme } from "next-themes";
 2 | import { Toaster as Sonner, toast } from "sonner";
 3 | 
 4 | type ToasterProps = React.ComponentProps<typeof Sonner>;
 5 | 
 6 | const Toaster = ({ ...props }: ToasterProps) => {
 7 |   const { theme = "system" } = useTheme();
 8 | 
 9 |   return (
10 |     <Sonner
11 |       theme={theme as ToasterProps["theme"]}
12 |       className="toaster group"
13 |       toastOptions={{
14 |         classNames: {
15 |           toast:
16 |             "group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",
17 |           description: "group-[.toast]:text-muted-foreground",
18 |           actionButton: "group-[.toast]:bg-primary group-[.toast]:text-primary-foreground",
19 |           cancelButton: "group-[.toast]:bg-muted group-[.toast]:text-muted-foreground",
20 |         },
21 |       }}
22 |       {...props}
23 |     />
24 |   );
25 | };
26 | 
27 | export { Toaster, toast };
28 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/switch.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as SwitchPrimitives from "@radix-ui/react-switch";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const Switch = React.forwardRef<
 7 |   React.ElementRef<typeof SwitchPrimitives.Root>,
 8 |   React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
 9 | >(({ className, ...props }, ref) => (
10 |   <SwitchPrimitives.Root
11 |     className={cn(
12 |       "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50",
13 |       className,
14 |     )}
15 |     {...props}
16 |     ref={ref}
17 |   >
18 |     <SwitchPrimitives.Thumb
19 |       className={cn(
20 |         "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0",
21 |       )}
22 |     />
23 |   </SwitchPrimitives.Root>
24 | ));
25 | Switch.displayName = SwitchPrimitives.Root.displayName;
26 | 
27 | export { Switch };
28 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/table.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | 
 3 | import { cn } from "@/lib/utils";
 4 | 
 5 | const Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(
 6 |   ({ className, ...props }, ref) => (
 7 |     <div className="relative w-full overflow-auto">
 8 |       <table ref={ref} className={cn("w-full caption-bottom text-sm", className)} {...props} />
 9 |     </div>
10 |   ),
11 | );
12 | Table.displayName = "Table";
13 | 
14 | const TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(
15 |   ({ className, ...props }, ref) => <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />,
16 | );
17 | TableHeader.displayName = "TableHeader";
18 | 
19 | const TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(
20 |   ({ className, ...props }, ref) => (
21 |     <tbody ref={ref} className={cn("[&_tr:last-child]:border-0", className)} {...props} />
22 |   ),
23 | );
24 | TableBody.displayName = "TableBody";
25 | 
26 | const TableFooter = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(
27 |   ({ className, ...props }, ref) => (
28 |     <tfoot ref={ref} className={cn("border-t bg-muted/50 font-medium [&>tr]:last:border-b-0", className)} {...props} />
29 |   ),
30 | );
31 | TableFooter.displayName = "TableFooter";
32 | 
33 | const TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(
34 |   ({ className, ...props }, ref) => (
35 |     <tr
36 |       ref={ref}
37 |       className={cn("border-b transition-colors data-[state=selected]:bg-muted hover:bg-muted/50", className)}
38 |       {...props}
39 |     />
40 |   ),
41 | );
42 | TableRow.displayName = "TableRow";
43 | 
44 | const TableHead = React.forwardRef<HTMLTableCellElement, React.ThHTMLAttributes<HTMLTableCellElement>>(
45 |   ({ className, ...props }, ref) => (
46 |     <th
47 |       ref={ref}
48 |       className={cn(
49 |         "h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0",
50 |         className,
51 |       )}
52 |       {...props}
53 |     />
54 |   ),
55 | );
56 | TableHead.displayName = "TableHead";
57 | 
58 | const TableCell = React.forwardRef<HTMLTableCellElement, React.TdHTMLAttributes<HTMLTableCellElement>>(
59 |   ({ className, ...props }, ref) => (
60 |     <td ref={ref} className={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)} {...props} />
61 |   ),
62 | );
63 | TableCell.displayName = "TableCell";
64 | 
65 | const TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(
66 |   ({ className, ...props }, ref) => (
67 |     <caption ref={ref} className={cn("mt-4 text-sm text-muted-foreground", className)} {...props} />
68 |   ),
69 | );
70 | TableCaption.displayName = "TableCaption";
71 | 
72 | export { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption };
73 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/tabs.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as TabsPrimitive from "@radix-ui/react-tabs";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const Tabs = TabsPrimitive.Root;
 7 | 
 8 | const TabsList = React.forwardRef<
 9 |   React.ElementRef<typeof TabsPrimitive.List>,
10 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
11 | >(({ className, ...props }, ref) => (
12 |   <TabsPrimitive.List
13 |     ref={ref}
14 |     className={cn(
15 |       "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
16 |       className,
17 |     )}
18 |     {...props}
19 |   />
20 | ));
21 | TabsList.displayName = TabsPrimitive.List.displayName;
22 | 
23 | const TabsTrigger = React.forwardRef<
24 |   React.ElementRef<typeof TabsPrimitive.Trigger>,
25 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
26 | >(({ className, ...props }, ref) => (
27 |   <TabsPrimitive.Trigger
28 |     ref={ref}
29 |     className={cn(
30 |       "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
31 |       className,
32 |     )}
33 |     {...props}
34 |   />
35 | ));
36 | TabsTrigger.displayName = TabsPrimitive.Trigger.displayName;
37 | 
38 | const TabsContent = React.forwardRef<
39 |   React.ElementRef<typeof TabsPrimitive.Content>,
40 |   React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
41 | >(({ className, ...props }, ref) => (
42 |   <TabsPrimitive.Content
43 |     ref={ref}
44 |     className={cn(
45 |       "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
46 |       className,
47 |     )}
48 |     {...props}
49 |   />
50 | ));
51 | TabsContent.displayName = TabsPrimitive.Content.displayName;
52 | 
53 | export { Tabs, TabsList, TabsTrigger, TabsContent };
54 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/textarea.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | 
 3 | import { cn } from "@/lib/utils";
 4 | 
 5 | export interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}
 6 | 
 7 | const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({ className, ...props }, ref) => {
 8 |   return (
 9 |     <textarea
10 |       className={cn(
11 |         "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
12 |         className,
13 |       )}
14 |       ref={ref}
15 |       {...props}
16 |     />
17 |   );
18 | });
19 | Textarea.displayName = "Textarea";
20 | 
21 | export { Textarea };
22 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/toast.tsx:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | import * as ToastPrimitives from "@radix-ui/react-toast";
  3 | import { cva, type VariantProps } from "class-variance-authority";
  4 | import { X } from "lucide-react";
  5 | 
  6 | import { cn } from "@/lib/utils";
  7 | 
  8 | const ToastProvider = ToastPrimitives.Provider;
  9 | 
 10 | const ToastViewport = React.forwardRef<
 11 |   React.ElementRef<typeof ToastPrimitives.Viewport>,
 12 |   React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
 13 | >(({ className, ...props }, ref) => (
 14 |   <ToastPrimitives.Viewport
 15 |     ref={ref}
 16 |     className={cn(
 17 |       "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
 18 |       className,
 19 |     )}
 20 |     {...props}
 21 |   />
 22 | ));
 23 | ToastViewport.displayName = ToastPrimitives.Viewport.displayName;
 24 | 
 25 | const toastVariants = cva(
 26 |   "group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
 27 |   {
 28 |     variants: {
 29 |       variant: {
 30 |         default: "border bg-background text-foreground",
 31 |         destructive: "destructive group border-destructive bg-destructive text-destructive-foreground",
 32 |       },
 33 |     },
 34 |     defaultVariants: {
 35 |       variant: "default",
 36 |     },
 37 |   },
 38 | );
 39 | 
 40 | const Toast = React.forwardRef<
 41 |   React.ElementRef<typeof ToastPrimitives.Root>,
 42 |   React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> & VariantProps<typeof toastVariants>
 43 | >(({ className, variant, ...props }, ref) => {
 44 |   return <ToastPrimitives.Root ref={ref} className={cn(toastVariants({ variant }), className)} {...props} />;
 45 | });
 46 | Toast.displayName = ToastPrimitives.Root.displayName;
 47 | 
 48 | const ToastAction = React.forwardRef<
 49 |   React.ElementRef<typeof ToastPrimitives.Action>,
 50 |   React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
 51 | >(({ className, ...props }, ref) => (
 52 |   <ToastPrimitives.Action
 53 |     ref={ref}
 54 |     className={cn(
 55 |       "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors group-[.destructive]:border-muted/40 hover:bg-secondary group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 group-[.destructive]:focus:ring-destructive disabled:pointer-events-none disabled:opacity-50",
 56 |       className,
 57 |     )}
 58 |     {...props}
 59 |   />
 60 | ));
 61 | ToastAction.displayName = ToastPrimitives.Action.displayName;
 62 | 
 63 | const ToastClose = React.forwardRef<
 64 |   React.ElementRef<typeof ToastPrimitives.Close>,
 65 |   React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
 66 | >(({ className, ...props }, ref) => (
 67 |   <ToastPrimitives.Close
 68 |     ref={ref}
 69 |     className={cn(
 70 |       "absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity group-hover:opacity-100 group-[.destructive]:text-red-300 hover:text-foreground group-[.destructive]:hover:text-red-50 focus:opacity-100 focus:outline-none focus:ring-2 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
 71 |       className,
 72 |     )}
 73 |     toast-close=""
 74 |     {...props}
 75 |   >
 76 |     <X className="h-4 w-4" />
 77 |   </ToastPrimitives.Close>
 78 | ));
 79 | ToastClose.displayName = ToastPrimitives.Close.displayName;
 80 | 
 81 | const ToastTitle = React.forwardRef<
 82 |   React.ElementRef<typeof ToastPrimitives.Title>,
 83 |   React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
 84 | >(({ className, ...props }, ref) => (
 85 |   <ToastPrimitives.Title ref={ref} className={cn("text-sm font-semibold", className)} {...props} />
 86 | ));
 87 | ToastTitle.displayName = ToastPrimitives.Title.displayName;
 88 | 
 89 | const ToastDescription = React.forwardRef<
 90 |   React.ElementRef<typeof ToastPrimitives.Description>,
 91 |   React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
 92 | >(({ className, ...props }, ref) => (
 93 |   <ToastPrimitives.Description ref={ref} className={cn("text-sm opacity-90", className)} {...props} />
 94 | ));
 95 | ToastDescription.displayName = ToastPrimitives.Description.displayName;
 96 | 
 97 | type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>;
 98 | 
 99 | type ToastActionElement = React.ReactElement<typeof ToastAction>;
100 | 
101 | export {
102 |   type ToastProps,
103 |   type ToastActionElement,
104 |   ToastProvider,
105 |   ToastViewport,
106 |   Toast,
107 |   ToastTitle,
108 |   ToastDescription,
109 |   ToastClose,
110 |   ToastAction,
111 | };
112 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/toaster.tsx:
--------------------------------------------------------------------------------
 1 | import { useToast } from "@/hooks/use-toast";
 2 | import { Toast, ToastClose, ToastDescription, ToastProvider, ToastTitle, ToastViewport } from "@/components/ui/toast";
 3 | 
 4 | export function Toaster() {
 5 |   const { toasts } = useToast();
 6 | 
 7 |   return (
 8 |     <ToastProvider>
 9 |       {toasts.map(function ({ id, title, description, action, ...props }) {
10 |         return (
11 |           <Toast key={id} {...props}>
12 |             <div className="grid gap-1">
13 |               {title && <ToastTitle>{title}</ToastTitle>}
14 |               {description && <ToastDescription>{description}</ToastDescription>}
15 |             </div>
16 |             {action}
17 |             <ToastClose />
18 |           </Toast>
19 |         );
20 |       })}
21 |       <ToastViewport />
22 |     </ToastProvider>
23 |   );
24 | }
25 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/toggle-group.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as ToggleGroupPrimitive from "@radix-ui/react-toggle-group";
 3 | import { type VariantProps } from "class-variance-authority";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | import { toggleVariants } from "@/components/ui/toggle";
 7 | 
 8 | const ToggleGroupContext = React.createContext<VariantProps<typeof toggleVariants>>({
 9 |   size: "default",
10 |   variant: "default",
11 | });
12 | 
13 | const ToggleGroup = React.forwardRef<
14 |   React.ElementRef<typeof ToggleGroupPrimitive.Root>,
15 |   React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> & VariantProps<typeof toggleVariants>
16 | >(({ className, variant, size, children, ...props }, ref) => (
17 |   <ToggleGroupPrimitive.Root ref={ref} className={cn("flex items-center justify-center gap-1", className)} {...props}>
18 |     <ToggleGroupContext.Provider value={{ variant, size }}>{children}</ToggleGroupContext.Provider>
19 |   </ToggleGroupPrimitive.Root>
20 | ));
21 | 
22 | ToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName;
23 | 
24 | const ToggleGroupItem = React.forwardRef<
25 |   React.ElementRef<typeof ToggleGroupPrimitive.Item>,
26 |   React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> & VariantProps<typeof toggleVariants>
27 | >(({ className, children, variant, size, ...props }, ref) => {
28 |   const context = React.useContext(ToggleGroupContext);
29 | 
30 |   return (
31 |     <ToggleGroupPrimitive.Item
32 |       ref={ref}
33 |       className={cn(
34 |         toggleVariants({
35 |           variant: context.variant || variant,
36 |           size: context.size || size,
37 |         }),
38 |         className,
39 |       )}
40 |       {...props}
41 |     >
42 |       {children}
43 |     </ToggleGroupPrimitive.Item>
44 |   );
45 | });
46 | 
47 | ToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName;
48 | 
49 | export { ToggleGroup, ToggleGroupItem };
50 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/toggle.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as TogglePrimitive from "@radix-ui/react-toggle";
 3 | import { cva, type VariantProps } from "class-variance-authority";
 4 | 
 5 | import { cn } from "@/lib/utils";
 6 | 
 7 | const toggleVariants = cva(
 8 |   "inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground",
 9 |   {
10 |     variants: {
11 |       variant: {
12 |         default: "bg-transparent",
13 |         outline: "border border-input bg-transparent hover:bg-accent hover:text-accent-foreground",
14 |       },
15 |       size: {
16 |         default: "h-10 px-3",
17 |         sm: "h-9 px-2.5",
18 |         lg: "h-11 px-5",
19 |       },
20 |     },
21 |     defaultVariants: {
22 |       variant: "default",
23 |       size: "default",
24 |     },
25 |   },
26 | );
27 | 
28 | const Toggle = React.forwardRef<
29 |   React.ElementRef<typeof TogglePrimitive.Root>,
30 |   React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> & VariantProps<typeof toggleVariants>
31 | >(({ className, variant, size, ...props }, ref) => (
32 |   <TogglePrimitive.Root ref={ref} className={cn(toggleVariants({ variant, size, className }))} {...props} />
33 | ));
34 | 
35 | Toggle.displayName = TogglePrimitive.Root.displayName;
36 | 
37 | export { Toggle, toggleVariants };
38 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/tooltip.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | import * as TooltipPrimitive from "@radix-ui/react-tooltip";
 3 | 
 4 | import { cn } from "@/lib/utils";
 5 | 
 6 | const TooltipProvider = TooltipPrimitive.Provider;
 7 | 
 8 | const Tooltip = TooltipPrimitive.Root;
 9 | 
10 | const TooltipTrigger = TooltipPrimitive.Trigger;
11 | 
12 | const TooltipContent = React.forwardRef<
13 |   React.ElementRef<typeof TooltipPrimitive.Content>,
14 |   React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
15 | >(({ className, sideOffset = 4, ...props }, ref) => (
16 |   <TooltipPrimitive.Content
17 |     ref={ref}
18 |     sideOffset={sideOffset}
19 |     className={cn(
20 |       "z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
21 |       className,
22 |     )}
23 |     {...props}
24 |   />
25 | ));
26 | TooltipContent.displayName = TooltipPrimitive.Content.displayName;
27 | 
28 | export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider };
29 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/components/ui/use-toast.ts:
--------------------------------------------------------------------------------
1 | import { useToast, toast } from "@/hooks/use-toast";
2 | 
3 | export { useToast, toast };
4 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/hooks/use-mobile.tsx:
--------------------------------------------------------------------------------
 1 | import * as React from "react";
 2 | 
 3 | const MOBILE_BREAKPOINT = 768;
 4 | 
 5 | export function useIsMobile() {
 6 |   const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined);
 7 | 
 8 |   React.useEffect(() => {
 9 |     const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);
10 |     const onChange = () => {
11 |       setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
12 |     };
13 |     mql.addEventListener("change", onChange);
14 |     setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
15 |     return () => mql.removeEventListener("change", onChange);
16 |   }, []);
17 | 
18 |   return !!isMobile;
19 | }
20 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/hooks/use-toast.ts:
--------------------------------------------------------------------------------
  1 | import * as React from "react";
  2 | 
  3 | import type { ToastActionElement, ToastProps } from "@/components/ui/toast";
  4 | 
  5 | const TOAST_LIMIT = 1;
  6 | const TOAST_REMOVE_DELAY = 1000000;
  7 | 
  8 | type ToasterToast = ToastProps & {
  9 |   id: string;
 10 |   title?: React.ReactNode;
 11 |   description?: React.ReactNode;
 12 |   action?: ToastActionElement;
 13 | };
 14 | 
 15 | const actionTypes = {
 16 |   ADD_TOAST: "ADD_TOAST",
 17 |   UPDATE_TOAST: "UPDATE_TOAST",
 18 |   DISMISS_TOAST: "DISMISS_TOAST",
 19 |   REMOVE_TOAST: "REMOVE_TOAST",
 20 | } as const;
 21 | 
 22 | let count = 0;
 23 | 
 24 | function genId() {
 25 |   count = (count + 1) % Number.MAX_SAFE_INTEGER;
 26 |   return count.toString();
 27 | }
 28 | 
 29 | type ActionType = typeof actionTypes;
 30 | 
 31 | type Action =
 32 |   | {
 33 |       type: ActionType["ADD_TOAST"];
 34 |       toast: ToasterToast;
 35 |     }
 36 |   | {
 37 |       type: ActionType["UPDATE_TOAST"];
 38 |       toast: Partial<ToasterToast>;
 39 |     }
 40 |   | {
 41 |       type: ActionType["DISMISS_TOAST"];
 42 |       toastId?: ToasterToast["id"];
 43 |     }
 44 |   | {
 45 |       type: ActionType["REMOVE_TOAST"];
 46 |       toastId?: ToasterToast["id"];
 47 |     };
 48 | 
 49 | interface State {
 50 |   toasts: ToasterToast[];
 51 | }
 52 | 
 53 | const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();
 54 | 
 55 | const addToRemoveQueue = (toastId: string) => {
 56 |   if (toastTimeouts.has(toastId)) {
 57 |     return;
 58 |   }
 59 | 
 60 |   const timeout = setTimeout(() => {
 61 |     toastTimeouts.delete(toastId);
 62 |     dispatch({
 63 |       type: "REMOVE_TOAST",
 64 |       toastId: toastId,
 65 |     });
 66 |   }, TOAST_REMOVE_DELAY);
 67 | 
 68 |   toastTimeouts.set(toastId, timeout);
 69 | };
 70 | 
 71 | export const reducer = (state: State, action: Action): State => {
 72 |   switch (action.type) {
 73 |     case "ADD_TOAST":
 74 |       return {
 75 |         ...state,
 76 |         toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
 77 |       };
 78 | 
 79 |     case "UPDATE_TOAST":
 80 |       return {
 81 |         ...state,
 82 |         toasts: state.toasts.map((t) => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),
 83 |       };
 84 | 
 85 |     case "DISMISS_TOAST": {
 86 |       const { toastId } = action;
 87 | 
 88 |       // ! Side effects ! - This could be extracted into a dismissToast() action,
 89 |       // but I'll keep it here for simplicity
 90 |       if (toastId) {
 91 |         addToRemoveQueue(toastId);
 92 |       } else {
 93 |         state.toasts.forEach((toast) => {
 94 |           addToRemoveQueue(toast.id);
 95 |         });
 96 |       }
 97 | 
 98 |       return {
 99 |         ...state,
100 |         toasts: state.toasts.map((t) =>
101 |           t.id === toastId || toastId === undefined
102 |             ? {
103 |                 ...t,
104 |                 open: false,
105 |               }
106 |             : t,
107 |         ),
108 |       };
109 |     }
110 |     case "REMOVE_TOAST":
111 |       if (action.toastId === undefined) {
112 |         return {
113 |           ...state,
114 |           toasts: [],
115 |         };
116 |       }
117 |       return {
118 |         ...state,
119 |         toasts: state.toasts.filter((t) => t.id !== action.toastId),
120 |       };
121 |   }
122 | };
123 | 
124 | const listeners: Array<(state: State) => void> = [];
125 | 
126 | let memoryState: State = { toasts: [] };
127 | 
128 | function dispatch(action: Action) {
129 |   memoryState = reducer(memoryState, action);
130 |   listeners.forEach((listener) => {
131 |     listener(memoryState);
132 |   });
133 | }
134 | 
135 | type Toast = Omit<ToasterToast, "id">;
136 | 
137 | function toast({ ...props }: Toast) {
138 |   const id = genId();
139 | 
140 |   const update = (props: ToasterToast) =>
141 |     dispatch({
142 |       type: "UPDATE_TOAST",
143 |       toast: { ...props, id },
144 |     });
145 |   const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id });
146 | 
147 |   dispatch({
148 |     type: "ADD_TOAST",
149 |     toast: {
150 |       ...props,
151 |       id,
152 |       open: true,
153 |       onOpenChange: (open) => {
154 |         if (!open) dismiss();
155 |       },
156 |     },
157 |   });
158 | 
159 |   return {
160 |     id: id,
161 |     dismiss,
162 |     update,
163 |   };
164 | }
165 | 
166 | function useToast() {
167 |   const [state, setState] = React.useState<State>(memoryState);
168 | 
169 |   React.useEffect(() => {
170 |     listeners.push(setState);
171 |     return () => {
172 |       const index = listeners.indexOf(setState);
173 |       if (index > -1) {
174 |         listeners.splice(index, 1);
175 |       }
176 |     };
177 |   }, [state]);
178 | 
179 |   return {
180 |     ...state,
181 |     toast,
182 |     dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
183 |   };
184 | }
185 | 
186 | export { useToast, toast };
187 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/index.css:
--------------------------------------------------------------------------------
  1 | @tailwind base;
  2 | @tailwind components;
  3 | @tailwind utilities;
  4 | 
  5 | /* TruthLens Design System - All colors, gradients, fonts, etc defined here. 
  6 | All colors MUST be HSL.
  7 | */
  8 | 
  9 | @layer base {
 10 |   :root {
 11 |     /* TruthLens Brand Colors */
 12 |     --truthlens-primary: 214 71% 70%; /* #667eea */
 13 |     --truthlens-secondary: 255 47% 62%; /* #764ba2 */
 14 |     --truthlens-gradient: linear-gradient(135deg, hsl(214 71% 70%) 0%, hsl(255 47% 62%) 100%);
 15 |     
 16 |     /* Background System */
 17 |     --background: 220 14% 96%; /* #f7f8fc */
 18 |     --foreground: 210 11% 15%; /* #222 */
 19 |     
 20 |     /* Card System */
 21 |     --card: 0 0% 100%; /* white */
 22 |     --card-foreground: 210 11% 15%;
 23 |     --card-shadow: 0 4px 12px hsl(220 14% 80% / 0.15);
 24 |     --card-shadow-hover: 0 8px 25px hsl(220 14% 70% / 0.2);
 25 |     
 26 |     /* Interactive Elements */
 27 |     --primary: 214 71% 70%;
 28 |     --primary-foreground: 0 0% 100%;
 29 |     --primary-hover: 214 71% 65%;
 30 |     
 31 |     --secondary: 220 13% 91%;
 32 |     --secondary-foreground: 210 11% 15%;
 33 |     
 34 |     /* Muted Colors */
 35 |     --muted: 220 9% 46%; /* #6b7280 */
 36 |     --muted-foreground: 220 9% 46%;
 37 |     
 38 |     /* Accent Colors for Categories */
 39 |     --accent-health: 142 71% 45%; /* Green for health */
 40 |     --accent-political: 213 93% 68%; /* Indigo for politics */
 41 |     --accent-finance: 45 93% 58%; /* Amber for finance */
 42 |     
 43 |     /* Borders and Inputs */
 44 |     --border: 220 13% 91%; /* #e5e7eb */
 45 |     --input: 220 13% 91%;
 46 |     --ring: 214 71% 70%;
 47 |     
 48 |     /* Spacing and Layout */
 49 |     --radius: 0.75rem;
 50 | 
 51 |     --sidebar-background: 0 0% 98%;
 52 | 
 53 |     --sidebar-foreground: 240 5.3% 26.1%;
 54 | 
 55 |     --sidebar-primary: 240 5.9% 10%;
 56 | 
 57 |     --sidebar-primary-foreground: 0 0% 98%;
 58 | 
 59 |     --sidebar-accent: 240 4.8% 95.9%;
 60 | 
 61 |     --sidebar-accent-foreground: 240 5.9% 10%;
 62 | 
 63 |     --sidebar-border: 220 13% 91%;
 64 | 
 65 |     --sidebar-ring: 217.2 91.2% 59.8%;
 66 |   }
 67 | 
 68 |   .dark {
 69 |     /* Dark Mode for TruthLens */
 70 |     --background: 222 47% 11%;
 71 |     --foreground: 210 40% 98%;
 72 |     
 73 |     --card: 222 47% 11%;
 74 |     --card-foreground: 210 40% 98%;
 75 |     --card-shadow: 0 4px 12px hsl(222 47% 5% / 0.3);
 76 |     --card-shadow-hover: 0 8px 25px hsl(222 47% 5% / 0.5);
 77 |     
 78 |     --primary: 214 71% 70%;
 79 |     --primary-foreground: 222 47% 11%;
 80 |     --primary-hover: 214 71% 75%;
 81 |     
 82 |     --secondary: 217 33% 18%;
 83 |     --secondary-foreground: 210 40% 98%;
 84 |     
 85 |     --muted: 215 20% 65%;
 86 |     --muted-foreground: 215 20% 65%;
 87 |     
 88 |     --border: 217 33% 18%;
 89 |     --input: 217 33% 18%;
 90 |     --ring: 214 71% 70%;
 91 |     --sidebar-background: 240 5.9% 10%;
 92 |     --sidebar-foreground: 240 4.8% 95.9%;
 93 |     --sidebar-primary: 224.3 76.3% 48%;
 94 |     --sidebar-primary-foreground: 0 0% 100%;
 95 |     --sidebar-accent: 240 3.7% 15.9%;
 96 |     --sidebar-accent-foreground: 240 4.8% 95.9%;
 97 |     --sidebar-border: 240 3.7% 15.9%;
 98 |     --sidebar-ring: 217.2 91.2% 59.8%;
 99 |   }
100 | }
101 | 
102 | @layer base {
103 |   * {
104 |     @apply border-border;
105 |   }
106 | 
107 |   body {
108 |     @apply bg-background text-foreground;
109 |     font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
110 |     line-height: 1.6;
111 |   }
112 |   
113 |   html {
114 |     scroll-behavior: smooth;
115 |   }
116 | }
117 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/lib/utils.ts:
--------------------------------------------------------------------------------
1 | import { clsx, type ClassValue } from "clsx";
2 | import { twMerge } from "tailwind-merge";
3 | 
4 | export function cn(...inputs: ClassValue[]) {
5 |   return twMerge(clsx(inputs));
6 | }
7 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/main.tsx:
--------------------------------------------------------------------------------
1 | import { createRoot } from "react-dom/client";
2 | import App from "./App.tsx";
3 | import "./index.css";
4 | 
5 | createRoot(document.getElementById("root")!).render(<App />);
6 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/pages/Archive.tsx:
--------------------------------------------------------------------------------
  1 | import React, { useState } from "react";
  2 | import { Button } from "@/components/ui/button";
  3 | import { Input } from "@/components/ui/input";
  4 | import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
  5 | import TruthLensHeader from "@/components/TruthLensHeader";
  6 | import TruthLensFooter from "@/components/TruthLensFooter";
  7 | 
  8 | const Archive = () => {
  9 |   const [selectedFilter, setSelectedFilter] = useState("All Cases");
 10 |   const [selectedCategory, setSelectedCategory] = useState("All");
 11 | 
 12 |   const stats = [
 13 |     { number: "3,247", label: "TOTAL CASES" },
 14 |     { number: "2,891", label: "✅ VERIFIED" },
 15 |     { number: "356", label: "❌ FALSE" }
 16 |   ];
 17 | 
 18 |   const filters = ["All Cases", "✅ Verified", "⚠️ Caution", "❌ False"];
 19 |   const categories = [
 20 |     { name: "All", icon: "📊" },
 21 |     { name: "Health", icon: "🏥" },
 22 |     { name: "Politics", icon: "🗳️" },
 23 |     { name: "Finance", icon: "💰" },
 24 |     { name: "Social", icon: "📱" }
 25 |   ];
 26 | 
 27 |   const cases = [
 28 |     {
 29 |       id: 1,
 30 |       category: "Health",
 31 |       icon: "🏥",
 32 |       date: "2024-01-15",
 33 |       title: "False claim about vaccine side effects spreading on WhatsApp",
 34 |       status: "❌ False",
 35 |       statusColor: "bg-red-500/10 text-red-600"
 36 |     },
 37 |     {
 38 |       id: 2,
 39 |       category: "Politics",
 40 |       icon: "🗳️", 
 41 |       date: "2024-01-14",
 42 |       title: "Manipulated video of political leader's speech",
 43 |       status: "✅ Verified",
 44 |       statusColor: "bg-green-500/10 text-green-600"
 45 |     },
 46 |     {
 47 |       id: 3,
 48 |       category: "Finance",
 49 |       icon: "💰",
 50 |       date: "2024-01-13",
 51 |       title: "Investment scam promising guaranteed returns",
 52 |       status: "⚠️ Caution",
 53 |       statusColor: "bg-amber-500/10 text-amber-600"
 54 |     }
 55 |   ];
 56 | 
 57 |   return (
 58 |     <div className="min-h-screen flex flex-col">
 59 |       <TruthLensHeader />
 60 |       <main className="flex-1">
 61 |         {/* Hero Section */}
 62 |         <section className="relative py-16 lg:py-20 overflow-hidden">
 63 |           <div 
 64 |             className="absolute inset-0 opacity-10"
 65 |             style={{ background: "var(--truthlens-gradient)" }}
 66 |           />
 67 |           <div className="container relative mx-auto px-4 lg:px-6">
 68 |             <div className="text-center mb-12">
 69 |               <h1 className="text-4xl md:text-5xl font-bold text-foreground mb-6">
 70 |                 Misinformation Archive
 71 |               </h1>
 72 |               <p className="text-xl text-muted-foreground max-w-3xl mx-auto mb-8">
 73 |                 Browse verified cases of misinformation detection
 74 |               </p>
 75 |               
 76 |               {/* Stats Cards */}
 77 |               <div className="grid md:grid-cols-3 gap-6 max-w-4xl mx-auto">
 78 |                 {stats.map((stat, index) => (
 79 |                   <div key={index} className="bg-card rounded-xl shadow-sm border border-border p-6">
 80 |                     <div className="text-3xl font-bold text-truthlens-primary mb-2">
 81 |                       {stat.number}
 82 |                     </div>
 83 |                     <div className="text-sm font-medium text-muted-foreground">
 84 |                       {stat.label}
 85 |                     </div>
 86 |                   </div>
 87 |                 ))}
 88 |               </div>
 89 |             </div>
 90 |           </div>
 91 |         </section>
 92 | 
 93 |         {/* Main Content */}
 94 |         <section className="py-8">
 95 |           <div className="container mx-auto px-4 lg:px-6">
 96 |             <div className="flex flex-col lg:flex-row gap-8">
 97 |               {/* Main Content Area */}
 98 |               <div className="flex-1">
 99 |                 <Card className="mb-8">
100 |                   <CardContent className="p-6">
101 |                     {/* Search Bar */}
102 |                     <div className="mb-6">
103 |                       <Input 
104 |                         placeholder="Search misinformation cases..."
105 |                         className="w-full"
106 |                       />
107 |                     </div>
108 |                     
109 |                     {/* Filter Buttons */}
110 |                     <div className="flex flex-wrap gap-3 mb-6">
111 |                       {filters.map((filter) => (
112 |                         <Button
113 |                           key={filter}
114 |                           variant={selectedFilter === filter ? "default" : "outline"}
115 |                           size="sm"
116 |                           onClick={() => setSelectedFilter(filter)}
117 |                         >
118 |                           {filter}
119 |                         </Button>
120 |                       ))}
121 |                     </div>
122 |                     
123 |                     {/* Category Filters */}
124 |                     <div className="flex flex-wrap gap-3">
125 |                       {categories.map((category) => (
126 |                         <Button
127 |                           key={category.name}
128 |                           variant={selectedCategory === category.name ? "default" : "ghost"}
129 |                           size="sm"
130 |                           onClick={() => setSelectedCategory(category.name)}
131 |                         >
132 |                           {category.icon} {category.name}
133 |                         </Button>
134 |                       ))}
135 |                     </div>
136 |                   </CardContent>
137 |                 </Card>
138 | 
139 |                 {/* Results Grid */}
140 |                 <div className="grid gap-6 mb-8">
141 |                   {cases.map((case_) => (
142 |                     <Card key={case_.id} className="hover:shadow-md transition-shadow">
143 |                       <CardContent className="p-6">
144 |                         <div className="flex items-start justify-between mb-4">
145 |                           <div className="flex items-center gap-3">
146 |                             <div className="text-2xl">{case_.icon}</div>
147 |                             <div>
148 |                               <div className="text-sm text-muted-foreground">{case_.date}</div>
149 |                               <div className="font-medium text-card-foreground">{case_.category}</div>
150 |                             </div>
151 |                           </div>
152 |                           <div className={`px-3 py-1 rounded-full text-sm font-medium ${case_.statusColor}`}>
153 |                             {case_.status}
154 |                           </div>
155 |                         </div>
156 |                         
157 |                         <h3 className="text-lg font-semibold text-card-foreground mb-4">
158 |                           {case_.title}
159 |                         </h3>
160 |                         
161 |                         <Button variant="ghost" size="sm" className="text-primary hover:text-primary-hover">
162 |                           View Details →
163 |                         </Button>
164 |                       </CardContent>
165 |                     </Card>
166 |                   ))}
167 |                 </div>
168 | 
169 |                 <div className="text-center">
170 |                   <Button variant="outline" size="lg">
171 |                     Load More Cases
172 |                   </Button>
173 |                 </div>
174 |               </div>
175 | 
176 |               {/* Sidebar */}
177 |               <div className="lg:w-80">
178 |                 <Card>
179 |                   <CardHeader>
180 |                     <CardTitle className="text-lg">Contributing to the Database</CardTitle>
181 |                   </CardHeader>
182 |                   <CardContent>
183 |                     <p className="text-muted-foreground mb-4">
184 |                       Help us build a comprehensive database of misinformation cases by contributing your analysis and research.
185 |                     </p>
186 |                     <Button className="w-full">
187 |                       Contribute Analysis →
188 |                     </Button>
189 |                   </CardContent>
190 |                 </Card>
191 |               </div>
192 |             </div>
193 |           </div>
194 |         </section>
195 |       </main>
196 |       <TruthLensFooter />
197 |     </div>
198 |   );
199 | };
200 | 
201 | export default Archive;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/pages/Authority.tsx:
--------------------------------------------------------------------------------
  1 | import React, { useState } from "react";
  2 | import { Button } from "@/components/ui/button";
  3 | import { Input } from "@/components/ui/input";
  4 | import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
  5 | import { Label } from "@/components/ui/label";
  6 | import TruthLensHeader from "@/components/TruthLensHeader";
  7 | import TruthLensFooter from "@/components/TruthLensFooter";
  8 | 
  9 | const Authority = () => {
 10 |   const [isLoggedIn, setIsLoggedIn] = useState(false);
 11 | 
 12 |   const dashboardStats = [
 13 |     { icon: "📊", number: "1,247", label: "TOTAL" },
 14 |     { icon: "📅", number: "23", label: "TODAY'S" },
 15 |     { icon: "⏳", number: "15", label: "PENDING" },
 16 |     { icon: "🚨", number: "3", label: "HIGH PRIORITY" }
 17 |   ];
 18 | 
 19 |   const reports = [
 20 |     {
 21 |       id: 1,
 22 |       title: "Health misinformation campaign detected",
 23 |       category: "Health",
 24 |       priority: "High",
 25 |       date: "2024-01-15",
 26 |       status: "Under Review"
 27 |     },
 28 |     {
 29 |       id: 2,
 30 |       title: "Political deepfake video spreading",
 31 |       category: "Politics", 
 32 |       priority: "Critical",
 33 |       date: "2024-01-15",
 34 |       status: "Action Required"
 35 |     },
 36 |     {
 37 |       id: 3,
 38 |       title: "Financial scam targeting seniors",
 39 |       category: "Finance",
 40 |       priority: "Medium",
 41 |       date: "2024-01-14", 
 42 |       status: "Investigating"
 43 |     }
 44 |   ];
 45 | 
 46 |   const trendingCategories = [
 47 |     { name: "Health Misinformation", percentage: 67, color: "bg-accent-health" },
 48 |     { name: "Political Claims", percentage: 45, color: "bg-accent-political" },
 49 |     { name: "Financial Scams", percentage: 32, color: "bg-accent-finance" }
 50 |   ];
 51 | 
 52 |   if (!isLoggedIn) {
 53 |     return (
 54 |       <div className="min-h-screen flex flex-col">
 55 |         <TruthLensHeader />
 56 |         <main className="flex-1">
 57 |           {/* Hero Section */}
 58 |           <section className="relative py-16 lg:py-20 overflow-hidden">
 59 |             <div 
 60 |               className="absolute inset-0 opacity-10"
 61 |               style={{ background: "var(--truthlens-gradient)" }}
 62 |             />
 63 |             <div className="container relative mx-auto px-4 lg:px-6">
 64 |               <div className="max-w-2xl mx-auto">
 65 |                 <div className="text-center mb-12">
 66 |                   <div className="text-6xl mb-6">🛡️</div>
 67 |                   <h1 className="text-4xl md:text-5xl font-bold text-foreground mb-6">
 68 |                     Authority Access
 69 |                   </h1>
 70 |                   <p className="text-xl text-muted-foreground">
 71 |                     Real-time monitoring and reporting tools for verified authorities
 72 |                   </p>
 73 |                 </div>
 74 | 
 75 |                 <Card className="shadow-lg">
 76 |                   <CardContent className="p-8">
 77 |                     <div className="space-y-6">
 78 |                       <div>
 79 |                         <Label htmlFor="authority-id">Authority ID</Label>
 80 |                         <Input 
 81 |                           id="authority-id"
 82 |                           placeholder="Enter your authority identification"
 83 |                           className="mt-2"
 84 |                         />
 85 |                       </div>
 86 |                       <div>
 87 |                         <Label htmlFor="access-key">Access Key</Label>
 88 |                         <Input 
 89 |                           id="access-key"
 90 |                           type="password"
 91 |                           placeholder="Enter your secure access key"
 92 |                           className="mt-2"
 93 |                         />
 94 |                       </div>
 95 |                       <Button 
 96 |                         className="w-full"
 97 |                         size="lg"
 98 |                         onClick={() => setIsLoggedIn(true)}
 99 |                       >
100 |                         Access Dashboard
101 |                       </Button>
102 |                     </div>
103 |                   </CardContent>
104 |                 </Card>
105 | 
106 |                 <Card className="mt-6 bg-secondary/20">
107 |                   <CardHeader>
108 |                     <CardTitle className="text-lg">Demo Credentials</CardTitle>
109 |                   </CardHeader>
110 |                   <CardContent>
111 |                     <p className="text-sm text-muted-foreground mb-2">
112 |                       <strong>Authority ID:</strong> DEMO_AUTH_2024
113 |                     </p>
114 |                     <p className="text-sm text-muted-foreground">
115 |                       <strong>Access Key:</strong> demo_secure_key_123
116 |                     </p>
117 |                   </CardContent>
118 |                 </Card>
119 |               </div>
120 |             </div>
121 |           </section>
122 |         </main>
123 |         <TruthLensFooter />
124 |       </div>
125 |     );
126 |   }
127 | 
128 |   return (
129 |     <div className="min-h-screen flex flex-col">
130 |       <TruthLensHeader />
131 |       <main className="flex-1">
132 |         {/* Dashboard Header */}
133 |         <section className="bg-card border-b border-border">
134 |           <div className="container mx-auto px-4 lg:px-6">
135 |             <div className="flex items-center justify-between py-6">
136 |               <h1 className="text-2xl font-bold text-foreground">Authority Dashboard</h1>
137 |               <Button variant="outline" onClick={() => setIsLoggedIn(false)}>
138 |                 Logout
139 |               </Button>
140 |             </div>
141 |           </div>
142 |         </section>
143 | 
144 |         {/* Stats Grid */}
145 |         <section className="py-8">
146 |           <div className="container mx-auto px-4 lg:px-6">
147 |             <div className="grid md:grid-cols-4 gap-6 mb-8">
148 |               {dashboardStats.map((stat, index) => (
149 |                 <Card key={index}>
150 |                   <CardContent className="p-6 text-center">
151 |                     <div className="text-2xl mb-2">{stat.icon}</div>
152 |                     <div className="text-2xl font-bold text-truthlens-primary mb-1">
153 |                       {stat.number}
154 |                     </div>
155 |                     <div className="text-sm font-medium text-muted-foreground">
156 |                       {stat.label}
157 |                     </div>
158 |                   </CardContent>
159 |                 </Card>
160 |               ))}
161 |             </div>
162 | 
163 |             <div className="grid lg:grid-cols-3 gap-8">
164 |               {/* Reports Table */}
165 |               <div className="lg:col-span-2">
166 |                 <Card>
167 |                   <CardHeader>
168 |                     <CardTitle>Recent Reports</CardTitle>
169 |                   </CardHeader>
170 |                   <CardContent>
171 |                     <div className="space-y-4">
172 |                       {reports.map((report) => (
173 |                         <div 
174 |                           key={report.id}
175 |                           className="flex items-center justify-between p-4 bg-secondary/10 rounded-lg"
176 |                         >
177 |                           <div className="flex-1">
178 |                             <h3 className="font-medium text-card-foreground mb-1">
179 |                               {report.title}
180 |                             </h3>
181 |                             <div className="flex items-center gap-4 text-sm text-muted-foreground">
182 |                               <span>{report.category}</span>
183 |                               <span>•</span>
184 |                               <span>{report.date}</span>
185 |                               <span>•</span>
186 |                               <span className={
187 |                                 report.priority === 'Critical' ? 'text-red-600' :
188 |                                 report.priority === 'High' ? 'text-amber-600' : 'text-green-600'
189 |                               }>
190 |                                 {report.priority}
191 |                               </span>
192 |                             </div>
193 |                           </div>
194 |                           <div className="text-sm font-medium text-primary">
195 |                             {report.status}
196 |                           </div>
197 |                         </div>
198 |                       ))}
199 |                     </div>
200 |                   </CardContent>
201 |                 </Card>
202 |               </div>
203 | 
204 |               {/* Trending Categories */}
205 |               <div>
206 |                 <Card>
207 |                   <CardHeader>
208 |                     <CardTitle>Trending Categories</CardTitle>
209 |                   </CardHeader>
210 |                   <CardContent className="space-y-4">
211 |                     {trendingCategories.map((category, index) => (
212 |                       <div key={index}>
213 |                         <div className="flex justify-between mb-2">
214 |                           <span className="text-sm font-medium text-card-foreground">
215 |                             {category.name}
216 |                           </span>
217 |                           <span className="text-sm text-muted-foreground">
218 |                             {category.percentage}%
219 |                           </span>
220 |                         </div>
221 |                         <div className="w-full bg-secondary/20 rounded-full h-2">
222 |                           <div 
223 |                             className={`h-2 rounded-full ${category.color}/70`}
224 |                             style={{ width: `${category.percentage}%` }}
225 |                           />
226 |                         </div>
227 |                       </div>
228 |                     ))}
229 |                   </CardContent>
230 |                 </Card>
231 | 
232 |                 <Card className="mt-6">
233 |                   <CardHeader>
234 |                     <CardTitle>Quick Actions</CardTitle>
235 |                   </CardHeader>
236 |                   <CardContent className="space-y-3">
237 |                     <Button className="w-full" variant="outline">
238 |                       Generate Report
239 |                     </Button>
240 |                     <Button className="w-full" variant="outline">
241 |                       Export Data
242 |                     </Button>
243 |                     <Button className="w-full">
244 |                       Emergency Alert
245 |                     </Button>
246 |                   </CardContent>
247 |                 </Card>
248 |               </div>
249 |             </div>
250 |           </div>
251 |         </section>
252 |       </main>
253 |       <TruthLensFooter />
254 |     </div>
255 |   );
256 | };
257 | 
258 | export default Authority;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/pages/Index.tsx:
--------------------------------------------------------------------------------
 1 | import React from "react";
 2 | import TruthLensHeader from "@/components/TruthLensHeader";
 3 | import HeroSection from "@/components/HeroSection"; 
 4 | import HowItWorksSection from "@/components/HowItWorksSection";
 5 | import TrendsSection from "@/components/TrendsSection";
 6 | import EducationSection from "@/components/EducationSection";
 7 | import FinalCTASection from "@/components/FinalCTASection";
 8 | import TruthLensFooter from "@/components/TruthLensFooter";
 9 | 
10 | const Index = () => {
11 |   return (
12 |     <div id="truthlens-root" className="min-h-screen flex flex-col">
13 |       <TruthLensHeader />
14 |       <main className="flex-1">
15 |         <HeroSection />
16 |         <HowItWorksSection />
17 |         <TrendsSection />
18 |         <EducationSection />
19 |         <FinalCTASection />
20 |       </main>
21 |       <TruthLensFooter />
22 |     </div>
23 |   );
24 | };
25 | 
26 | export default Index;
27 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/pages/Learn.tsx:
--------------------------------------------------------------------------------
  1 | import React, { useState } from "react";
  2 | import { Button } from "@/components/ui/button";
  3 | import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
  4 | import TruthLensHeader from "@/components/TruthLensHeader";
  5 | import TruthLensFooter from "@/components/TruthLensFooter";
  6 | 
  7 | const Learn = () => {
  8 |   const [activeTab, setActiveTab] = useState("overview");
  9 | 
 10 |   const tabs = [
 11 |     { id: "overview", icon: "📚", label: "Overview" },
 12 |     { id: "source", icon: "🔍", label: "Source Verification" },
 13 |     { id: "image", icon: "🖼️", label: "Image Analysis" },
 14 |     { id: "data", icon: "📊", label: "Data Verification" },
 15 |     { id: "emotional", icon: "💭", label: "Emotional Manipulation" },
 16 |     { id: "test", icon: "🎯", label: "Test Your Skills" }
 17 |   ];
 18 | 
 19 |   const stats = [
 20 |     { icon: "📈", number: "89%", label: "Success Rate After Training" },
 21 |     { icon: "👥", number: "25K+", label: "Users Trained" },
 22 |     { icon: "🎓", number: "12", label: "Learning Modules" },
 23 |     { icon: "⏱️", number: "30min", label: "Average Completion Time" }
 24 |   ];
 25 | 
 26 |   const misinformationTypes = [
 27 |     {
 28 |       icon: "🔄",
 29 |       title: "Recycled Content",
 30 |       description: "Old content presented as new or current events",
 31 |       examples: "Historical photos used for recent events"
 32 |     },
 33 |     {
 34 |       icon: "🎭",
 35 |       title: "Manipulated Media",
 36 |       description: "Edited images, videos, or audio content",
 37 |       examples: "Deepfakes, photo editing, voice synthesis"
 38 |     },
 39 |     {
 40 |       icon: "📰",
 41 |       title: "False Context",
 42 |       description: "Real content shared with misleading information",
 43 |       examples: "Correct image with wrong location or date"
 44 |     },
 45 |     {
 46 |       icon: "🔮",
 47 |       title: "Fabricated Content",
 48 |       description: "Completely fake information created from scratch",
 49 |       examples: "Made-up statistics, fictional quotes"
 50 |     }
 51 |   ];
 52 | 
 53 |   const skillLevels = [
 54 |     { level: "Beginner", progress: 100, description: "Basic misinformation recognition" },
 55 |     { level: "Intermediate", progress: 75, description: "Advanced verification techniques" },
 56 |     { level: "Expert", progress: 45, description: "Complex analysis and fact-checking" }
 57 |   ];
 58 | 
 59 |   const renderTabContent = () => {
 60 |     switch (activeTab) {
 61 |       case "overview":
 62 |         return (
 63 |           <div className="space-y-8">
 64 |             <div>
 65 |               <h3 className="text-2xl font-bold text-foreground mb-4">Understanding Misinformation</h3>
 66 |               <p className="text-muted-foreground mb-6 leading-relaxed">
 67 |                 Misinformation is false or inaccurate information that is spread regardless of intent. 
 68 |                 In the digital age, it spreads faster than ever before, making fact-checking skills essential 
 69 |                 for every internet user.
 70 |               </p>
 71 |               
 72 |               <div className="grid md:grid-cols-4 gap-6 mb-8">
 73 |                 {stats.map((stat, index) => (
 74 |                   <div key={index} className="text-center">
 75 |                     <div className="text-3xl mb-2">{stat.icon}</div>
 76 |                     <div className="text-2xl font-bold text-truthlens-primary mb-1">
 77 |                       {stat.number}
 78 |                     </div>
 79 |                     <div className="text-sm text-muted-foreground">
 80 |                       {stat.label}
 81 |                     </div>
 82 |                   </div>
 83 |                 ))}
 84 |               </div>
 85 |             </div>
 86 | 
 87 |             <div>
 88 |               <h3 className="text-xl font-semibold text-foreground mb-6">Types of Misinformation</h3>
 89 |               <div className="grid md:grid-cols-2 gap-6">
 90 |                 {misinformationTypes.map((type, index) => (
 91 |                   <Card key={index} className="hover:shadow-md transition-shadow">
 92 |                     <CardContent className="p-6">
 93 |                       <div className="flex items-start gap-3 mb-3">
 94 |                         <div className="text-2xl">{type.icon}</div>
 95 |                         <div>
 96 |                           <h4 className="font-semibold text-card-foreground">{type.title}</h4>
 97 |                         </div>
 98 |                       </div>
 99 |                       <p className="text-muted-foreground text-sm mb-3">
100 |                         {type.description}
101 |                       </p>
102 |                       <p className="text-xs text-muted-foreground italic">
103 |                         <strong>Examples:</strong> {type.examples}
104 |                       </p>
105 |                     </CardContent>
106 |                   </Card>
107 |                 ))}
108 |               </div>
109 |             </div>
110 |           </div>
111 |         );
112 |       
113 |       case "test":
114 |         return (
115 |           <div className="space-y-8">
116 |             <div>
117 |               <h3 className="text-2xl font-bold text-foreground mb-4">Test Your Skills</h3>
118 |               <p className="text-muted-foreground mb-6">
119 |                 Practice identifying misinformation with our interactive challenges.
120 |               </p>
121 |             </div>
122 | 
123 |             <div className="grid md:grid-cols-3 gap-6 mb-8">
124 |               {skillLevels.map((skill, index) => (
125 |                 <Card key={index}>
126 |                   <CardContent className="p-6">
127 |                     <div className="flex justify-between items-center mb-3">
128 |                       <h4 className="font-semibold text-card-foreground">{skill.level}</h4>
129 |                       <span className="text-sm text-muted-foreground">{skill.progress}%</span>
130 |                     </div>
131 |                     <div className="w-full bg-secondary/20 rounded-full h-2 mb-3">
132 |                       <div 
133 |                         className="h-2 rounded-full bg-truthlens-primary"
134 |                         style={{ width: `${skill.progress}%` }}
135 |                       />
136 |                     </div>
137 |                     <p className="text-sm text-muted-foreground mb-4">
138 |                       {skill.description}
139 |                     </p>
140 |                     <Button variant="outline" size="sm" className="w-full">
141 |                       {skill.progress === 100 ? "Review" : "Continue"}
142 |                     </Button>
143 |                   </CardContent>
144 |                 </Card>
145 |               ))}
146 |             </div>
147 | 
148 |             <Card className="bg-secondary/10">
149 |               <CardContent className="p-6 text-center">
150 |                 <h4 className="text-xl font-semibold text-foreground mb-3">
151 |                   Ready for the Challenge?
152 |                 </h4>
153 |                 <p className="text-muted-foreground mb-4">
154 |                   Take our comprehensive fact-checking assessment and earn your certification.
155 |                 </p>
156 |                 <Button size="lg">
157 |                   Start Assessment
158 |                 </Button>
159 |               </CardContent>
160 |             </Card>
161 |           </div>
162 |         );
163 |       
164 |       default:
165 |         return (
166 |           <div className="text-center py-12">
167 |             <div className="text-4xl mb-4">🚧</div>
168 |             <h3 className="text-xl font-semibold text-foreground mb-2">Coming Soon</h3>
169 |             <p className="text-muted-foreground">
170 |               This learning module is currently being developed.
171 |             </p>
172 |           </div>
173 |         );
174 |     }
175 |   };
176 | 
177 |   return (
178 |     <div className="min-h-screen flex flex-col">
179 |       <TruthLensHeader />
180 |       <main className="flex-1">
181 |         {/* Hero Section */}
182 |         <section className="relative py-16 lg:py-20 overflow-hidden">
183 |           <div 
184 |             className="absolute inset-0 opacity-10"
185 |             style={{ background: "var(--truthlens-gradient)" }}
186 |           />
187 |           <div className="container relative mx-auto px-4 lg:px-6">
188 |             <div className="text-center mb-12">
189 |               <h1 className="text-4xl md:text-5xl font-bold text-foreground mb-6">
190 |                 Learn to Identify Misinformation
191 |               </h1>
192 |               <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
193 |                 Educational resources to become a digital fact-checker
194 |               </p>
195 |             </div>
196 |           </div>
197 |         </section>
198 | 
199 |         {/* Navigation Tabs */}
200 |         <section className="py-8 bg-card border-b border-border">
201 |           <div className="container mx-auto px-4 lg:px-6">
202 |             <div className="flex flex-wrap gap-2 justify-center">
203 |               {tabs.map((tab) => (
204 |                 <Button
205 |                   key={tab.id}
206 |                   variant={activeTab === tab.id ? "default" : "ghost"}
207 |                   size="sm"
208 |                   onClick={() => setActiveTab(tab.id)}
209 |                   className="flex items-center gap-2"
210 |                 >
211 |                   <span>{tab.icon}</span>
212 |                   <span className="hidden sm:inline">{tab.label}</span>
213 |                 </Button>
214 |               ))}
215 |             </div>
216 |           </div>
217 |         </section>
218 | 
219 |         {/* Content Sections */}
220 |         <section className="py-12">
221 |           <div className="container mx-auto px-4 lg:px-6">
222 |             <div className="max-w-4xl mx-auto">
223 |               {renderTabContent()}
224 |             </div>
225 |           </div>
226 |         </section>
227 |       </main>
228 |       <TruthLensFooter />
229 |     </div>
230 |   );
231 | };
232 | 
233 | export default Learn;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/pages/NotFound.tsx:
--------------------------------------------------------------------------------
 1 | import { useLocation } from "react-router-dom";
 2 | import { useEffect } from "react";
 3 | 
 4 | const NotFound = () => {
 5 |   const location = useLocation();
 6 | 
 7 |   useEffect(() => {
 8 |     console.error("404 Error: User attempted to access non-existent route:", location.pathname);
 9 |   }, [location.pathname]);
10 | 
11 |   return (
12 |     <div className="flex min-h-screen items-center justify-center bg-gray-100">
13 |       <div className="text-center">
14 |         <h1 className="mb-4 text-4xl font-bold">404</h1>
15 |         <p className="mb-4 text-xl text-gray-600">Oops! Page not found</p>
16 |         <a href="/" className="text-blue-500 underline hover:text-blue-700">
17 |           Return to Home
18 |         </a>
19 |       </div>
20 |     </div>
21 |   );
22 | };
23 | 
24 | export default NotFound;
25 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/pages/Results-2323.tsx:
--------------------------------------------------------------------------------
  1 | import React from "react";
  2 | import { Button } from "@/components/ui/button";
  3 | import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
  4 | import { useNavigate, useLocation, Navigate } from "react-router-dom";
  5 | import TruthLensHeader from "@/components/TruthLensHeader";
  6 | import TruthLensFooter from "@/components/TruthLensFooter";
  7 | 
  8 | interface LocationState {
  9 |   content?: string;
 10 |   text?: string;
 11 |   url?: string;
 12 |   verdict?: string;
 13 |   confidence_score?: number;
 14 |   confidence_percent?: number;
 15 |   summary?: string;
 16 |   analysis_id?: string;
 17 |   detailed_analysis?: {
 18 |     evidence?: string[];
 19 |     sources?: string[];
 20 |     factcheck_results?: Array<{
 21 |       verdict: string;
 22 |       original_rating?: string;
 23 |       source: string;
 24 |       url?: string;
 25 |       date?: string;
 26 |       summary?: string;
 27 |     }>;
 28 |   };
 29 | }
 30 | 
 31 | const Results = () => {
 32 |   const navigate = useNavigate();
 33 |   const location = useLocation();
 34 |   const state = (location.state as LocationState) || {};
 35 | 
 36 |   // Redirect back if no state
 37 |   if (!state || Object.keys(state).length === 0) {
 38 |     return <Navigate to="/" replace />;
 39 |   }
 40 | 
 41 |   // Compute percent confidence from decimal if needed
 42 |   const percent =
 43 |     state.confidence_percent ??
 44 |     Math.round((state.confidence_score ?? 0) * 100);
 45 | 
 46 |   const verdict = state.verdict ?? "inconclusive";
 47 | 
 48 |   const analysisResult = {
 49 |     content:
 50 |       state.content ??
 51 |       state.text ??
 52 |       state.url ??
 53 |       "Content analyzed for misinformation",
 54 |     riskLevel:
 55 |       verdict === "false"
 56 |         ? "High"
 57 |         : verdict === "true"
 58 |         ? "Low"
 59 |         : "Medium",
 60 |     riskColor:
 61 |       verdict === "false"
 62 |         ? "bg-red-500/10 text-red-600"
 63 |         : verdict === "true"
 64 |         ? "bg-green-500/10 text-green-600"
 65 |         : "bg-amber-500/10 text-amber-600",
 66 |     credibilityScore: percent,
 67 |     analysisConfidence: percent,
 68 |     evidence:
 69 |       state.detailed_analysis?.evidence && state.detailed_analysis.evidence.length > 0
 70 |         ? state.detailed_analysis.evidence
 71 |         : ["Automated analysis completed"],
 72 |     sources:
 73 |       state.detailed_analysis?.sources?.map((name) => ({
 74 |         name,
 75 |         verified: true,
 76 |         credibility:
 77 |           name.includes("Fact Check") ||
 78 |           name.includes("Snopes") ||
 79 |           name.includes("FactCheck")
 80 |             ? "High"
 81 |             : "Medium",
 82 |       })) || [
 83 |         {
 84 |           name: "TruthLens Analysis Engine",
 85 |           verified: true,
 86 |           credibility: "High",
 87 |         },
 88 |       ],
 89 |     recommendations: [
 90 |       "Cross-check with reliable sources",
 91 |       "Verify the original publication",
 92 |       "Look for official statements",
 93 |     ],
 94 |     verdict,
 95 |     summary: state.summary ?? "",
 96 |     analysisId: state.analysis_id ?? "",
 97 |     factcheckResults: state.detailed_analysis?.factcheck_results || [],
 98 |   };
 99 | 
100 |   return (
101 |     <div className="min-h-screen flex flex-col">
102 |       <TruthLensHeader />
103 |       <main className="flex-1">
104 |         {/* Header */}
105 |         <section className="bg-card border-b border-border">
106 |           <div className="container mx-auto px-4 lg:px-6">
107 |             <div className="flex items-center gap-4 py-6">
108 |               <Button variant="ghost" onClick={() => navigate(-1)}>
109 |                 ← Back
110 |               </Button>
111 |               <h1 className="text-2xl font-bold text-foreground">
112 |                 Analysis Results
113 |               </h1>
114 |             </div>
115 |           </div>
116 |         </section>
117 | 
118 |         <div className="container mx-auto px-4 lg:px-6 py-8">
119 |           <div className="max-w-4xl mx-auto space-y-8">
120 | 
121 |             {/* Risk Assessment */}
122 |             <Card>
123 |               <CardHeader>
124 |                 <CardTitle className="flex items-center justify-between">
125 |                   <span>Risk Assessment</span>
126 |                   <div
127 |                     className={`px-4 py-2 rounded-full text-sm font-semibold ${analysisResult.riskColor}`}
128 |                   >
129 |                     {analysisResult.riskLevel} Risk
130 |                   </div>
131 |                 </CardTitle>
132 |               </CardHeader>
133 |               <CardContent>
134 |                 <div className="grid md:grid-cols-2 gap-6">
135 |                   <div>
136 |                     <h4 className="font-semibold text-card-foreground mb-2">
137 |                       Credibility Score
138 |                     </h4>
139 |                     <div className="flex items-center gap-3">
140 |                       <div className="flex-1 bg-secondary/20 rounded-full h-3">
141 |                         <div
142 |                           className={`h-3 rounded-full ${
143 |                             analysisResult.credibilityScore >= 80
144 |                               ? "bg-green-500"
145 |                               : analysisResult.credibilityScore >= 60
146 |                               ? "bg-amber-500"
147 |                               : "bg-red-500"
148 |                           }`}
149 |                           style={{
150 |                             width: `${analysisResult.credibilityScore}%`,
151 |                           }}
152 |                         />
153 |                       </div>
154 |                       <span className="font-bold text-lg">
155 |                         {analysisResult.credibilityScore}%
156 |                       </span>
157 |                     </div>
158 |                   </div>
159 |                   <div>
160 |                     <h4 className="font-semibold text-card-foreground mb-2">
161 |                       Analysis Confidence
162 |                     </h4>
163 |                     <div className="flex items-center gap-3">
164 |                       <div className="flex-1 bg-secondary/20 rounded-full h-3">
165 |                         <div
166 |                           className="h-3 rounded-full bg-truthlens-primary"
167 |                           style={{
168 |                             width: `${analysisResult.analysisConfidence}%`,
169 |                           }}
170 |                         />
171 |                       </div>
172 |                       <span className="font-bold text-lg">
173 |                         {analysisResult.analysisConfidence}%
174 |                       </span>
175 |                     </div>
176 |                   </div>
177 |                 </div>
178 |               </CardContent>
179 |             </Card>
180 | 
181 |             {/* Content Analysis */}
182 |             <Card>
183 |               <CardHeader>
184 |                 <CardTitle>Content Analysis</CardTitle>
185 |               </CardHeader>
186 |               <CardContent>
187 |                 <div className="bg-secondary/10 rounded-lg p-4 mb-6">
188 |                   <h4 className="font-medium text-card-foreground mb-2">
189 |                     Analyzed Content:
190 |                   </h4>
191 |                   <p className="text-muted-foreground italic">
192 |                     "{analysisResult.content}"
193 |                   </p>
194 |                 </div>
195 | 
196 |                 {analysisResult.summary && (
197 |                   <div className="bg-blue-50 dark:bg-blue-950/20 rounded-lg p-4 mb-6">
198 |                     <h4 className="font-medium text-card-foreground mb-2">
199 |                       Analysis Summary:
200 |                     </h4>
201 |                     <p className="text-muted-foreground">
202 |                       {analysisResult.summary}
203 |                     </p>
204 |                   </div>
205 |                 )}
206 | 
207 |                 <div className="mb-6">
208 |                   <h4 className="font-semibold text-card-foreground mb-2">
209 |                     Verdict:
210 |                   </h4>
211 |                   <div
212 |                     className={`inline-flex px-4 py-2 rounded-full text-sm font-semibold ${analysisResult.riskColor}`}
213 |                   >
214 |                     {analysisResult.verdict.toUpperCase()}
215 |                   </div>
216 |                 </div>
217 | 
218 |                 <div className="space-y-3">
219 |                   <h4 className="font-semibold text-card-foreground">
220 |                     Detected Issues:
221 |                   </h4>
222 |                   {analysisResult.evidence.map((line, idx) => (
223 |                     <div
224 |                       key={idx}
225 |                       className="flex items-start gap-3 p-3 bg-card border border-border rounded-lg"
226 |                     >
227 |                       <div className="w-2 h-2 rounded-full mt-2 bg-red-500" />
228 |                       <div>
229 |                         <div className="text-sm text-muted-foreground">
230 |                           {line}
231 |                         </div>
232 |                       </div>
233 |                       <div className="ml-auto px-2 py-1 rounded text-xs font-medium bg-red-500/10 text-red-600">
234 |                         {verdict === "false" ? "High" : "Low"}
235 |                       </div>
236 |                     </div>
237 |                   ))}
238 |                 </div>
239 |               </CardContent>
240 |             </Card>
241 | 
242 |             {/* Fact-Check Results */}
243 |             {analysisResult.factcheckResults.length > 0 && (
244 |               <Card>
245 |                 <CardHeader>
246 |                   <CardTitle>
247 |                     Fact-Check Results (
248 |                     {analysisResult.factcheckResults.length} found)
249 |                   </CardTitle>
250 |                 </CardHeader>
251 |                 <CardContent>
252 |                   <div className="space-y-4">
253 |                     {analysisResult.factcheckResults
254 |                       .slice(0, 5)
255 |                       .map((fc, idx) => (
256 |                         <div
257 |                           key={idx}
258 |                           className="border-l-4 border-red-500 pl-4 bg-red-50 dark:bg-red-950/20 p-3 rounded"
259 |                         >
260 |                           <div className="font-semibold text-red-700">
261 |                             {fc.source} → {fc.verdict}
262 |                           </div>
263 |                           <div className="text-sm text-muted-foreground mt-1">
264 |                             {fc.summary || fc.original_rating}
265 |                           </div>
266 |                         </div>
267 |                       ))}
268 |                   </div>
269 |                 </CardContent>
270 |               </Card>
271 |             )}
272 | 
273 |             {/* Source Verification */}
274 |             <Card>
275 |               <CardHeader>
276 |                 <CardTitle>Source Verification</CardTitle>
277 |               </CardHeader>
278 |               <CardContent>
279 |                 <div className="space-y-3">
280 |                   {analysisResult.sources.map((source, idx) => (
281 |                     <div
282 |                       key={idx}
283 |                       className="flex items-center justify-between p-3 bg-secondary/5 rounded-lg"
284 |                     >
285 |                       <div className="flex items-center gap-3">
286 |                         <div
287 |                           className={`w-3 h-3 rounded-full ${
288 |                             source.verified ? "bg-green-500" : "bg-red-500"
289 |                           }`}
290 |                         />
291 |                         <span className="font-medium text-card-foreground">
292 |                           {source.name}
293 |                         </span>
294 |                       </div>
295 |                       <div
296 |                         className={`px-3 py-1 rounded-full text-sm font-medium ${
297 |                           source.credibility === "High"
298 |                             ? "bg-green-500/10 text-green-600"
299 |                             : source.credibility === "Medium"
300 |                             ? "bg-amber-500/10 text-amber-600"
301 |                             : "bg-red-500/10 text-red-600"
302 |                         }`}
303 |                       >
304 |                         {source.credibility} Credibility
305 |                       </div>
306 |                     </div>
307 |                   ))}
308 |                 </div>
309 |               </CardContent>
310 |             </Card>
311 | 
312 |             {/* Recommendations */}
313 |             <Card>
314 |               <CardHeader>
315 |                 <CardTitle>Recommendations</CardTitle>
316 |               </CardHeader>
317 |               <CardContent>
318 |                 <div className="space-y-3">
319 |                   {analysisResult.recommendations.map((rec, idx) => (
320 |                     <div key={idx} className="flex items-start gap-3">
321 |                       <div className="w-6 h-6 bg-truthlens-primary/10 text-truthlens-primary rounded-full flex items-center justify-center text-sm font-bold mt-0.5">
322 |                         {idx + 1}
323 |                       </div>
324 |                       <p className="text-muted-foreground">{rec}</p>
325 |                     </div>
326 |                   ))}
327 |                 </div>
328 |               </CardContent>
329 |             </Card>
330 | 
331 |             {/* Analysis ID */}
332 |             {analysisResult.analysisId && (
333 |               <Card>
334 |                 <CardContent className="pt-6">
335 |                   <div className="text-center text-sm text-muted-foreground">
336 |                     Analysis ID:{" "}
337 |                     <code className="bg-secondary px-2 py-1 rounded">
338 |                       {analysisResult.analysisId}
339 |                     </code>
340 |                   </div>
341 |                 </CardContent>
342 |               </Card>
343 |             )}
344 | 
345 |             {/* Action Buttons */}
346 |             <div className="flex flex-col sm:flex-row gap-4 justify-center">
347 |               <Button size="lg" onClick={() => navigate("/")}>
348 |                 Analyze Another
349 |               </Button>
350 |               <Button size="lg" variant="outline">
351 |                 Report Issue
352 |               </Button>
353 |               <Button size="lg" variant="outline">
354 |                 Share Results
355 |               </Button>
356 |             </div>
357 |           </div>
358 |         </div>
359 |       </main>
360 |       <TruthLensFooter />
361 |     </div>
362 |   );
363 | };
364 | 
365 | export default Results;
366 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/pages/Results.tsx:
--------------------------------------------------------------------------------
  1 | import React, { useState, useEffect } from "react";
  2 | import { Button } from "@/components/ui/button";
  3 | import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
  4 | import { Progress } from "@/components/ui/progress";
  5 | import { Badge } from "@/components/ui/badge";
  6 | import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
  7 | import { useNavigate, useLocation, Navigate } from "react-router-dom";
  8 | import {
  9 |   ArrowLeft,
 10 |   Eye,
 11 |   FileText,
 12 |   Brain,
 13 |   GraduationCap,
 14 |   Search,
 15 |   Star,
 16 |   CheckCircle,
 17 |   Clock,
 18 |   Loader2,
 19 |   Download,
 20 |   Flag,
 21 |   Share2,
 22 | } from "lucide-react";
 23 | import TruthLensHeader from "@/components/TruthLensHeader";
 24 | import TruthLensFooter from "@/components/TruthLensFooter";
 25 | import { streamAnalysis } from "@/api/client";
 26 | 
 27 | // 1. Update interface to fetch the educational block from backend
 28 | interface LocationState {
 29 |   content?: string;
 30 |   text?: string;
 31 |   url?: string;
 32 |   verdict?: string;
 33 |   confidence_score?: number;
 34 |   confidence_percent?: number;
 35 |   summary?: string;
 36 |   analysis_id?: string;
 37 |   detailed_analysis?: any;
 38 |   educational?: any;
 39 | }
 40 | 
 41 | const Results = () => {
 42 |   const navigate = useNavigate();
 43 |   const location = useLocation();
 44 |   const state = (location.state as LocationState) || {};
 45 | 
 46 |   // Redirect if no state
 47 |   if (!state || Object.keys(state).length === 0) {
 48 |     return <Navigate to="/" replace />;
 49 |   }
 50 | 
 51 |   // 🚀 NEW: Streaming state
 52 |   const [isStreaming, setIsStreaming] = useState(false);
 53 |   const [streamingMessage, setStreamingMessage] = useState<string>("");
 54 |   const [streamingData, setStreamingData] = useState<any>({});
 55 |   const [streamingError, setStreamingError] = useState<string>("");
 56 |   
 57 |   // Original state
 58 |   const [viewMode, setViewMode] = useState<"summary" | "full">("summary");
 59 |   const [expandedCards, setExpandedCards] = useState<string[]>([]);
 60 | 
 61 |   // Get content to analyze
 62 |   const contentToAnalyze = state.content ?? state.text ?? state.url ?? "";
 63 | 
 64 |   // 🚀 NEW: Start streaming when viewMode switches to "full"
 65 |   useEffect(() => {
 66 |     if (viewMode === "full" && !isStreaming && contentToAnalyze && !streamingData.misinformation_analysis) {
 67 |       startLiveAnalysis();
 68 |     }
 69 |   }, [viewMode, contentToAnalyze]);
 70 | 
 71 |   const startLiveAnalysis = async () => {
 72 |     if (!contentToAnalyze.trim()) return;
 73 |     
 74 |     setIsStreaming(true);
 75 |     setStreamingError("");
 76 |     setStreamingData({});
 77 | 
 78 |     try {
 79 |       await streamAnalysis(
 80 |         "/api/v1/verify-stream",
 81 |         {
 82 |           content_type: "text",
 83 |           content: contentToAnalyze,
 84 |           language: "en"
 85 |         },
 86 |         // onMessage callback
 87 |         (data: any) => {
 88 |           console.log("🔴 Streaming data:", data);
 89 |           
 90 |           if (data.type === "message") {
 91 |             setStreamingMessage(data.content);
 92 |           }
 93 |           
 94 |           if (data.type === "section") {
 95 |             setStreamingData((prev: any) => ({
 96 |               ...prev,
 97 |               [data.section]: data.data
 98 |             }));
 99 |           }
100 |           
101 |           if (data.type === "complete") {
102 |             setIsStreaming(false);
103 |             setStreamingMessage("✅ Analysis complete!");
104 |           }
105 |         },
106 |         // onError callback
107 |         (error: Error) => {
108 |           console.error("🚨 Streaming error:", error);
109 |           setStreamingError(`Connection failed: ${error.message}`);
110 |           setIsStreaming(false);
111 |         },
112 |         // onComplete callback
113 |         () => {
114 |           setIsStreaming(false);
115 |         }
116 |       );
117 |     } catch (error: any) {
118 |       console.error("🚨 Stream start error:", error);
119 |       setStreamingError(`Failed to start analysis: ${error.message}`);
120 |       setIsStreaming(false);
121 |     }
122 |   };
123 | 
124 |   // 3. Map backend data to frontend variables (fallback to static data)
125 |   const educationalData = streamingData.misinformation_analysis 
126 |     ? streamingData 
127 |     : (state.educational || 
128 |        (state.detailed_analysis && state.detailed_analysis.educational) || 
129 |        {});
130 | 
131 |   // 🔧 FIXED: Content extraction functions for nested backend structure
132 |   const extractEducationalContent = (data: any, section: string): React.ReactNode => {
133 |     if (!data || typeof data !== 'object') {
134 |       return isStreaming ? (
135 |         <div className="flex items-center gap-2 text-muted-foreground py-4">
136 |           <LoadingAnimation />
137 |           <span className="ml-2">Waiting for {section.replace('_', ' ')}...</span>
138 |         </div>
139 |       ) : "Waiting for analysis...";
140 |     }
141 | 
142 |     const sectionData = data[section];
143 |     if (!sectionData || typeof sectionData !== 'object') {
144 |       return isStreaming ? (
145 |         <div className="flex items-center gap-2 text-muted-foreground py-4">
146 |           <LoadingAnimation />
147 |           <span className="ml-2">Generating content...</span>
148 |         </div>
149 |       ) : "Waiting for analysis...";
150 |     }
151 | 
152 |     // Convert object to readable text with better formatting
153 |     const content = Object.entries(sectionData)
154 |       .filter(([key, value]) => key !== 'raw_response' && typeof value === 'string')
155 |       .map(([key, value]) => (
156 |         <div key={key} className="mb-4">
157 |           <h5 className="font-semibold text-primary mb-2 capitalize">
158 |             {key.replace(/_/g, ' ')}:
159 |           </h5>
160 |           <div className="pl-4 border-l-2 border-primary/20">
161 |             <p className="whitespace-pre-line text-sm leading-relaxed">{value}</p>
162 |           </div>
163 |         </div>
164 |       ));
165 | 
166 |     return content.length > 0 ? <div>{content}</div> : "Waiting for analysis...";
167 |   };
168 | 
169 |   const analysisData = {
170 |     content: state.content ?? state.text ?? state.url,
171 |     risk: state.verdict
172 |       ? {
173 |           level:
174 |             state.verdict === "false"
175 |               ? "High"
176 |               : state.verdict === "true"
177 |               ? "Low"
178 |               : "Medium",
179 |           score:
180 |             state.confidence_percent ??
181 |             Math.round((state.confidence_score ?? 0) * 100),
182 |           confidence:
183 |             state.confidence_percent ??
184 |             Math.round((state.confidence_score ?? 0) * 100),
185 |           verdict: state.verdict,
186 |         }
187 |       : undefined,
188 |     recommendations: state.summary ? [state.summary] : [],
189 |   };
190 | 
191 |   // 4. Educational accordion configs
192 |   const educationalConfigs = [
193 |     {
194 |       id: "misinformation",
195 |       title: "🧠 Why This is Misinformation",
196 |       icon: Brain,
197 |       content_path: "misinformation_analysis",
198 |     },
199 |     {
200 |       id: "indians-know",
201 |       title: "🎓 What Indians Should Know",
202 |       icon: GraduationCap,
203 |       content_path: "indian_context",
204 |     },
205 |     {
206 |       id: "pattern-recognition",
207 |       title: "🔍 How to Spot Similar Claims",
208 |       icon: Search,
209 |       content_path: "pattern_recognition",
210 |     },
211 |     {
212 |       id: "real-story",
213 |       title: "🌟 The Real Story",
214 |       icon: Star,
215 |       content_path: "real_story",
216 |     },
217 |   ];
218 | 
219 |   // 5. Loading animation
220 |   const LoadingAnimation = () => (
221 |     <div className="flex items-center gap-2 text-muted-foreground">
222 |       <Loader2 className="w-4 h-4 animate-spin" />
223 |       <span className="text-sm">Processing analysis...</span>
224 |       <div className="flex gap-1">
225 |         {[0, 150, 300].map((d) => (
226 |           <div
227 |             key={d}
228 |             className="w-1 h-1 bg-primary rounded-full animate-bounce"
229 |             style={{ animationDelay: `${d}ms` }}
230 |           />
231 |         ))}
232 |       </div>
233 |     </div>
234 |   );
235 | 
236 |   // 6. Risk badge
237 |   const getRiskStyling = (level?: string) => {
238 |     switch (level) {
239 |       case "High":
240 |         return { bg: "bg-red-50", text: "text-red-700" };
241 |       case "Medium":
242 |         return { bg: "bg-amber-50", text: "text-amber-700" };
243 |       case "Low":
244 |         return { bg: "bg-green-50", text: "text-green-700" };
245 |       default:
246 |         return { bg: "bg-muted/20", text: "text-muted-foreground" };
247 |     }
248 |   };
249 | 
250 |   return (
251 |     <div className="min-h-screen flex flex-col">
252 |       <TruthLensHeader />
253 |       <main className="flex-1">
254 |         <section className="bg-gradient-to-br from-primary to-secondary border-b border-border">
255 |           <div className="container mx-auto px-4 lg:px-6">
256 |             <div className="flex items-center justify-between py-6">
257 |               <div className="flex items-center gap-4">
258 |                 <Button
259 |                   variant="ghost"
260 |                   size="sm"
261 |                   onClick={() => navigate("/")}
262 |                   className="text-white/90 hover:text-white hover:bg-white/10"
263 |                 >
264 |                   <ArrowLeft className="w-4 h-4 mr-2" />
265 |                   Back
266 |                 </Button>
267 |                 <div>
268 |                   <h1 className="text-2xl font-bold text-white">
269 |                     Analysis Results
270 |                   </h1>
271 |                   <div className="flex items-center gap-2 mt-1">
272 |                     {isStreaming ? (
273 |                       <>
274 |                         <Loader2 className="w-4 h-4 animate-spin text-yellow-300" />
275 |                         <span className="text-white/80 text-sm">
276 |                           {streamingMessage || "Live Analysis..."}
277 |                         </span>
278 |                       </>
279 |                     ) : analysisData.risk ? (
280 |                       <>
281 |                         <CheckCircle className="w-4 h-4 text-green-300" />
282 |                         <span className="text-white/80 text-sm">
283 |                           Analysis Complete
284 |                         </span>
285 |                       </>
286 |                     ) : (
287 |                       <>
288 |                         <Clock className="w-4 h-4 text-white/60" />
289 |                         <span className="text-white/80 text-sm">
290 |                           Awaiting Data...
291 |                         </span>
292 |                       </>
293 |                     )}
294 |                   </div>
295 |                 </div>
296 |               </div>
297 |               <div className="flex gap-1 bg-white/10 rounded-lg p-1">
298 |                 <Button
299 |                   size="sm"
300 |                   variant={viewMode === "summary" ? "default" : "ghost"}
301 |                   onClick={() => setViewMode("summary")}
302 |                   className={
303 |                     viewMode === "summary"
304 |                       ? "bg-white text-primary"
305 |                       : "text-white/90"
306 |                   }
307 |                 >
308 |                   <Eye className="w-4 h-4 mr-1" />
309 |                   Quick Summary
310 |                 </Button>
311 |                 <Button
312 |                   size="sm"
313 |                   variant={viewMode === "full" ? "default" : "ghost"}
314 |                   onClick={() => setViewMode("full")}
315 |                   className={
316 |                     viewMode === "full"
317 |                       ? "bg-white text-primary"
318 |                       : "text-white/90"
319 |                   }
320 |                 >
321 |                   <FileText className="w-4 h-4 mr-1" />
322 |                   Live Analysis
323 |                 </Button>
324 |               </div>
325 |             </div>
326 |           </div>
327 |         </section>
328 | 
329 |         <div className="container mx-auto px-4 lg:px-6 py-8">
330 |           <div className="max-w-4xl mx-auto space-y-6">
331 |             {/* 🚀 NEW: Show streaming error if any */}
332 |             {streamingError && (
333 |               <Card className="border-red-200 bg-red-50">
334 |                 <CardContent className="pt-6">
335 |                   <div className="text-red-700 text-sm">
336 |                     <strong>Connection Error:</strong> {streamingError}
337 |                     <Button
338 |                       onClick={startLiveAnalysis}
339 |                       className="ml-4"
340 |                       size="sm"
341 |                       variant="outline"
342 |                     >
343 |                       Retry Live Analysis
344 |                     </Button>
345 |                   </div>
346 |                 </CardContent>
347 |               </Card>
348 |             )}
349 | 
350 |             {viewMode === "summary" ? (
351 |               analysisData.risk ? (
352 |                 <Card className="border-l-4 border-primary">
353 |                   <CardContent className="pt-6">
354 |                     <div className="grid md:grid-cols-2 gap-6">
355 |                       <div>
356 |                         <h3 className="font-semibold mb-4">Quick Summary</h3>
357 |                         <div className="space-y-3">
358 |                           <div className="flex justify-between items-center">
359 |                             <span className="text-sm">Risk Level:</span>
360 |                             <Badge
361 |                               className={`${getRiskStyling(
362 |                                 analysisData.risk.level
363 |                               ).bg} ${
364 |                                 getRiskStyling(analysisData.risk.level).text
365 |                               }`}
366 |                             >
367 |                               {analysisData.risk.level}
368 |                             </Badge>
369 |                           </div>
370 |                           <div>
371 |                             <div className="flex justify-between mb-1">
372 |                               <span className="text-xs">Credibility</span>
373 |                               <span className="text-xs font-bold">
374 |                                 {analysisData.risk.score}%
375 |                               </span>
376 |                             </div>
377 |                             <Progress
378 |                               value={analysisData.risk.score}
379 |                               className="h-2"
380 |                             />
381 |                           </div>
382 |                         </div>
383 |                       </div>
384 |                       <div>
385 |                         <h4 className="font-semibold mb-2">
386 |                           Key Recommendation
387 |                         </h4>
388 |                         <p className="text-sm text-muted-foreground p-3 bg-muted/30 rounded-lg">
389 |                           {analysisData.recommendations?.[0] ||
390 |                             "Complete analysis to see recommendations"}
391 |                         </p>
392 |                       </div>
393 |                     </div>
394 |                   </CardContent>
395 |                 </Card>
396 |               ) : (
397 |                 <Card>
398 |                   <CardContent className="pt-6 text-center">
399 |                     <LoadingAnimation />
400 |                     <p className="text-sm text-muted-foreground mt-4">
401 |                       Switch to "Live Analysis" to see real-time results
402 |                     </p>
403 |                   </CardContent>
404 |                 </Card>
405 |               )
406 |             ) : (
407 |               <>
408 |                 {/* 🚀 NEW: Live streaming status */}
409 |                 {isStreaming && streamingMessage && (
410 |                   <Card className="border-blue-200 bg-blue-50">
411 |                     <CardContent className="pt-6">
412 |                       <div className="flex items-center gap-3 text-blue-700">
413 |                         <Loader2 className="w-5 h-5 animate-spin" />
414 |                         <span className="font-medium">{streamingMessage}</span>
415 |                       </div>
416 |                     </CardContent>
417 |                   </Card>
418 |                 )}
419 | 
420 |                 <Accordion
421 |                   type="multiple"
422 |                   value={expandedCards}
423 |                   onValueChange={setExpandedCards}
424 |                 >
425 |                   {educationalConfigs.map((cfg) => {
426 |                     const IconComponent = cfg.icon;
427 |                     const contentVal = extractEducationalContent(educationalData, cfg.content_path);
428 |                     const hasContent = streamingData[cfg.content_path] && Object.keys(streamingData[cfg.content_path]).length > 0;
429 | 
430 |                     return (
431 |                       <AccordionItem key={cfg.id} value={cfg.id}>
432 |                         <Card>
433 |                           <AccordionTrigger className="px-6 py-4">
434 |                             <div className="flex items-center gap-3">
435 |                               <IconComponent className="w-5 h-5 text-primary" />
436 |                               <div className="font-semibold">{cfg.title}</div>
437 |                               {!hasContent && isStreaming && (
438 |                                 <div className="ml-auto">
439 |                                   <Loader2 className="w-4 h-4 animate-spin text-muted-foreground" />
440 |                                 </div>
441 |                               )}
442 |                             </div>
443 |                           </AccordionTrigger>
444 |                           <AccordionContent>
445 |                             <div className="px-6 pb-4">
446 |                               {contentVal}
447 |                             </div>
448 |                           </AccordionContent>
449 |                         </Card>
450 |                       </AccordionItem>
451 |                     );
452 |                   })}
453 |                 </Accordion>
454 |               </>
455 |             )}
456 | 
457 |             {/* Actions */}
458 |             <Card className="mt-8">
459 |               <CardHeader>
460 |                 <CardTitle className="text-center">Actions</CardTitle>
461 |               </CardHeader>
462 |               <CardContent>
463 |                 <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
464 |                   <Button
465 |                     onClick={() => navigate("/")}
466 |                     variant="default"
467 |                     className="w-full"
468 |                   >
469 |                     <Search className="w-4 h-4 mr-2" />
470 |                     Analyze Another
471 |                   </Button>
472 |                   <Button variant="outline" className="w-full" disabled>
473 |                     <Flag className="w-4 h-4 mr-2" />
474 |                     Flag for Authority
475 |                   </Button>
476 |                   <Button variant="outline" className="w-full" disabled>
477 |                     <Download className="w-4 h-4 mr-2" />
478 |                     Download Report
479 |                   </Button>
480 |                   <Button variant="outline" className="w-full" disabled>
481 |                     <Share2 className="w-4 h-4 mr-2" />
482 |                     Share Results
483 |                   </Button>
484 |                 </div>
485 |                 <p className="text-xs text-muted-foreground text-center mt-4">
486 |                   More actions available after integration
487 |                 </p>
488 |               </CardContent>
489 |             </Card>
490 |           </div>
491 |         </div>
492 |       </main>
493 |       <TruthLensFooter />
494 |     </div>
495 |   );
496 | };
497 | 
498 | export default Results;
499 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/pages/Results_backup.tsx:
--------------------------------------------------------------------------------
  1 | import React from "react";
  2 | import { Button } from "@/components/ui/button";
  3 | import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
  4 | import { useNavigate } from "react-router-dom";
  5 | import TruthLensHeader from "@/components/TruthLensHeader";
  6 | import TruthLensFooter from "@/components/TruthLensFooter";
  7 | 
  8 | const Results = () => {
  9 |   const navigate = useNavigate();
 10 | 
 11 |   // Mock analysis result data
 12 |   const analysisResult = {
 13 |     content: "Breaking: Government announces new tax policy affecting middle-class families...",
 14 |     riskLevel: "Medium",
 15 |     riskColor: "bg-amber-500/10 text-amber-600",
 16 |     credibilityScore: 72,
 17 |     sources: [
 18 |       { name: "Government Official Website", credibility: "High", verified: true },
 19 |       { name: "Local News Portal", credibility: "Medium", verified: true },
 20 |       { name: "Social Media Post", credibility: "Low", verified: false }
 21 |     ],
 22 |     flags: [
 23 |       { type: "Language Pattern", severity: "Low", description: "Sensational language detected" },
 24 |       { type: "Source Quality", severity: "Medium", description: "Mixed source credibility" }
 25 |     ],
 26 |     recommendations: [
 27 |       "Verify with official government sources",
 28 |       "Cross-check with multiple news outlets",
 29 |       "Look for official press releases"
 30 |     ]
 31 |   };
 32 | 
 33 |   return (
 34 |     <div className="min-h-screen flex flex-col">
 35 |       <TruthLensHeader />
 36 |       <main className="flex-1">
 37 |         {/* Header */}
 38 |         <section className="bg-card border-b border-border">
 39 |           <div className="container mx-auto px-4 lg:px-6">
 40 |             <div className="flex items-center gap-4 py-6">
 41 |               <Button variant="ghost" onClick={() => navigate(-1)}>
 42 |                 ← Back
 43 |               </Button>
 44 |               <h1 className="text-2xl font-bold text-foreground">Analysis Results</h1>
 45 |             </div>
 46 |           </div>
 47 |         </section>
 48 | 
 49 |         <div className="container mx-auto px-4 lg:px-6 py-8">
 50 |           <div className="max-w-4xl mx-auto space-y-8">
 51 |             {/* Risk Assessment */}
 52 |             <Card>
 53 |               <CardHeader>
 54 |                 <CardTitle className="flex items-center justify-between">
 55 |                   <span>Risk Assessment</span>
 56 |                   <div className={`px-4 py-2 rounded-full text-sm font-semibold ${analysisResult.riskColor}`}>
 57 |                     {analysisResult.riskLevel} Risk
 58 |                   </div>
 59 |                 </CardTitle>
 60 |               </CardHeader>
 61 |               <CardContent>
 62 |                 <div className="grid md:grid-cols-2 gap-6">
 63 |                   <div>
 64 |                     <h4 className="font-semibold text-card-foreground mb-2">Credibility Score</h4>
 65 |                     <div className="flex items-center gap-3">
 66 |                       <div className="flex-1 bg-secondary/20 rounded-full h-3">
 67 |                         <div 
 68 |                           className={`h-3 rounded-full ${
 69 |                             analysisResult.credibilityScore >= 80 ? 'bg-green-500' :
 70 |                             analysisResult.credibilityScore >= 60 ? 'bg-amber-500' : 'bg-red-500'
 71 |                           }`}
 72 |                           style={{ width: `${analysisResult.credibilityScore}%` }}
 73 |                         />
 74 |                       </div>
 75 |                       <span className="font-bold text-lg">{analysisResult.credibilityScore}%</span>
 76 |                     </div>
 77 |                   </div>
 78 |                   <div>
 79 |                     <h4 className="font-semibold text-card-foreground mb-2">Analysis Confidence</h4>
 80 |                     <div className="flex items-center gap-3">
 81 |                       <div className="flex-1 bg-secondary/20 rounded-full h-3">
 82 |                         <div 
 83 |                           className="h-3 rounded-full bg-truthlens-primary"
 84 |                           style={{ width: "87%" }}
 85 |                         />
 86 |                       </div>
 87 |                       <span className="font-bold text-lg">87%</span>
 88 |                     </div>
 89 |                   </div>
 90 |                 </div>
 91 |               </CardContent>
 92 |             </Card>
 93 | 
 94 |             {/* Content Analysis */}
 95 |             <Card>
 96 |               <CardHeader>
 97 |                 <CardTitle>Content Analysis</CardTitle>
 98 |               </CardHeader>
 99 |               <CardContent>
100 |                 <div className="bg-secondary/10 rounded-lg p-4 mb-6">
101 |                   <h4 className="font-medium text-card-foreground mb-2">Analyzed Content:</h4>
102 |                   <p className="text-muted-foreground italic">
103 |                     "{analysisResult.content}"
104 |                   </p>
105 |                 </div>
106 | 
107 |                 {/* Flags */}
108 |                 <div className="space-y-3">
109 |                   <h4 className="font-semibold text-card-foreground">Detected Issues:</h4>
110 |                   {analysisResult.flags.map((flag, index) => (
111 |                     <div key={index} className="flex items-start gap-3 p-3 bg-card border border-border rounded-lg">
112 |                       <div className={`w-2 h-2 rounded-full mt-2 ${
113 |                         flag.severity === 'High' ? 'bg-red-500' :
114 |                         flag.severity === 'Medium' ? 'bg-amber-500' : 'bg-green-500'
115 |                       }`} />
116 |                       <div>
117 |                         <div className="font-medium text-card-foreground">{flag.type}</div>
118 |                         <div className="text-sm text-muted-foreground">{flag.description}</div>
119 |                       </div>
120 |                       <div className={`ml-auto px-2 py-1 rounded text-xs font-medium ${
121 |                         flag.severity === 'High' ? 'bg-red-500/10 text-red-600' :
122 |                         flag.severity === 'Medium' ? 'bg-amber-500/10 text-amber-600' : 
123 |                         'bg-green-500/10 text-green-600'
124 |                       }`}>
125 |                         {flag.severity}
126 |                       </div>
127 |                     </div>
128 |                   ))}
129 |                 </div>
130 |               </CardContent>
131 |             </Card>
132 | 
133 |             {/* Source Verification */}
134 |             <Card>
135 |               <CardHeader>
136 |                 <CardTitle>Source Verification</CardTitle>
137 |               </CardHeader>
138 |               <CardContent>
139 |                 <div className="space-y-3">
140 |                   {analysisResult.sources.map((source, index) => (
141 |                     <div key={index} className="flex items-center justify-between p-3 bg-secondary/5 rounded-lg">
142 |                       <div className="flex items-center gap-3">
143 |                         <div className={`w-3 h-3 rounded-full ${source.verified ? 'bg-green-500' : 'bg-red-500'}`} />
144 |                         <span className="font-medium text-card-foreground">{source.name}</span>
145 |                       </div>
146 |                       <div className={`px-3 py-1 rounded-full text-sm font-medium ${
147 |                         source.credibility === 'High' ? 'bg-green-500/10 text-green-600' :
148 |                         source.credibility === 'Medium' ? 'bg-amber-500/10 text-amber-600' :
149 |                         'bg-red-500/10 text-red-600'
150 |                       }`}>
151 |                         {source.credibility} Credibility
152 |                       </div>
153 |                     </div>
154 |                   ))}
155 |                 </div>
156 |               </CardContent>
157 |             </Card>
158 | 
159 |             {/* Recommendations */}
160 |             <Card>
161 |               <CardHeader>
162 |                 <CardTitle>Recommendations</CardTitle>
163 |               </CardHeader>
164 |               <CardContent>
165 |                 <div className="space-y-3">
166 |                   {analysisResult.recommendations.map((recommendation, index) => (
167 |                     <div key={index} className="flex items-start gap-3">
168 |                       <div className="w-6 h-6 bg-truthlens-primary/10 text-truthlens-primary rounded-full flex items-center justify-center text-sm font-bold mt-0.5">
169 |                         {index + 1}
170 |                       </div>
171 |                       <p className="text-muted-foreground">{recommendation}</p>
172 |                     </div>
173 |                   ))}
174 |                 </div>
175 |               </CardContent>
176 |             </Card>
177 | 
178 |             {/* Action Buttons */}
179 |             <div className="flex flex-col sm:flex-row gap-4 justify-center">
180 |               <Button size="lg" onClick={() => navigate("/")}>
181 |                 Analyze Another
182 |               </Button>
183 |               <Button size="lg" variant="outline">
184 |                 Report Issue
185 |               </Button>
186 |               <Button size="lg" variant="outline">
187 |                 Share Results
188 |               </Button>
189 |             </div>
190 |           </div>
191 |         </div>
192 |       </main>
193 |       <TruthLensFooter />
194 |     </div>
195 |   );
196 | };
197 | 
198 | export default Results;


--------------------------------------------------------------------------------
/truthlens-landing-page-main/src/vite-env.d.ts:
--------------------------------------------------------------------------------
1 | /// <reference types="vite/client" />
2 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/tailwind.config.ts:
--------------------------------------------------------------------------------
 1 | import type { Config } from "tailwindcss";
 2 | 
 3 | export default {
 4 |   darkMode: ["class"],
 5 |   content: ["./pages/**/*.{ts,tsx}", "./components/**/*.{ts,tsx}", "./app/**/*.{ts,tsx}", "./src/**/*.{ts,tsx}"],
 6 |   prefix: "",
 7 |   theme: {
 8 |     container: {
 9 |       center: true,
10 |       padding: "2rem",
11 |       screens: {
12 |         "2xl": "1400px",
13 |       },
14 |     },
15 |     extend: {
16 |       colors: {
17 |         border: "hsl(var(--border))",
18 |         input: "hsl(var(--input))",
19 |         ring: "hsl(var(--ring))",
20 |         background: "hsl(var(--background))",
21 |         foreground: "hsl(var(--foreground))",
22 |         primary: {
23 |           DEFAULT: "hsl(var(--primary))",
24 |           foreground: "hsl(var(--primary-foreground))",
25 |           hover: "hsl(var(--primary-hover))",
26 |         },
27 |         secondary: {
28 |           DEFAULT: "hsl(var(--secondary))",
29 |           foreground: "hsl(var(--secondary-foreground))",
30 |         },
31 |         muted: {
32 |           DEFAULT: "hsl(var(--muted))",
33 |           foreground: "hsl(var(--muted-foreground))",
34 |         },
35 |         card: {
36 |           DEFAULT: "hsl(var(--card))",
37 |           foreground: "hsl(var(--card-foreground))",
38 |         },
39 |         truthlens: {
40 |           primary: "hsl(var(--truthlens-primary))",
41 |           secondary: "hsl(var(--truthlens-secondary))",
42 |         },
43 |         accent: {
44 |           health: "hsl(var(--accent-health))",
45 |           political: "hsl(var(--accent-political))",
46 |           finance: "hsl(var(--accent-finance))",
47 |         },
48 |         sidebar: {
49 |           DEFAULT: "hsl(var(--sidebar-background))",
50 |           foreground: "hsl(var(--sidebar-foreground))",
51 |           primary: "hsl(var(--sidebar-primary))",
52 |           "primary-foreground": "hsl(var(--sidebar-primary-foreground))",
53 |           accent: "hsl(var(--sidebar-accent))",
54 |           "accent-foreground": "hsl(var(--sidebar-accent-foreground))",
55 |           border: "hsl(var(--sidebar-border))",
56 |           ring: "hsl(var(--sidebar-ring))",
57 |         },
58 |       },
59 |       borderRadius: {
60 |         lg: "var(--radius)",
61 |         md: "calc(var(--radius) - 2px)",
62 |         sm: "calc(var(--radius) - 4px)",
63 |       },
64 |       keyframes: {
65 |         "accordion-down": {
66 |           from: {
67 |             height: "0",
68 |           },
69 |           to: {
70 |             height: "var(--radix-accordion-content-height)",
71 |           },
72 |         },
73 |         "accordion-up": {
74 |           from: {
75 |             height: "var(--radix-accordion-content-height)",
76 |           },
77 |           to: {
78 |             height: "0",
79 |           },
80 |         },
81 |       },
82 |       animation: {
83 |         "accordion-down": "accordion-down 0.2s ease-out",
84 |         "accordion-up": "accordion-up 0.2s ease-out",
85 |       },
86 |     },
87 |   },
88 |   plugins: [require("tailwindcss-animate")],
89 | } satisfies Config;
90 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/tsconfig.app.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "target": "ES2020",
 4 |     "useDefineForClassFields": true,
 5 |     "lib": ["ES2020", "DOM", "DOM.Iterable"],
 6 |     "module": "ESNext",
 7 |     "skipLibCheck": true,
 8 | 
 9 |     /* Bundler mode */
10 |     "moduleResolution": "bundler",
11 |     "allowImportingTsExtensions": true,
12 |     "isolatedModules": true,
13 |     "moduleDetection": "force",
14 |     "noEmit": true,
15 |     "jsx": "react-jsx",
16 | 
17 |     /* Linting */
18 |     "strict": false,
19 |     "noUnusedLocals": false,
20 |     "noUnusedParameters": false,
21 |     "noImplicitAny": false,
22 |     "noFallthroughCasesInSwitch": false,
23 | 
24 |     "baseUrl": ".",
25 |     "paths": {
26 |       "@/*": ["./src/*"]
27 |     }
28 |   },
29 |   "include": ["src"]
30 | }
31 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/tsconfig.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "files": [],
 3 |   "references": [{ "path": "./tsconfig.app.json" }, { "path": "./tsconfig.node.json" }],
 4 |   "compilerOptions": {
 5 |     "baseUrl": ".",
 6 |     "paths": {
 7 |       "@/*": ["./src/*"]
 8 |     },
 9 |     "noImplicitAny": false,
10 |     "noUnusedParameters": false,
11 |     "skipLibCheck": true,
12 |     "allowJs": true,
13 |     "noUnusedLocals": false,
14 |     "strictNullChecks": false
15 |   }
16 | }
17 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/tsconfig.node.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "target": "ES2022",
 4 |     "lib": ["ES2023"],
 5 |     "module": "ESNext",
 6 |     "skipLibCheck": true,
 7 | 
 8 |     /* Bundler mode */
 9 |     "moduleResolution": "bundler",
10 |     "allowImportingTsExtensions": true,
11 |     "isolatedModules": true,
12 |     "moduleDetection": "force",
13 |     "noEmit": true,
14 | 
15 |     /* Linting */
16 |     "strict": true,
17 |     "noUnusedLocals": false,
18 |     "noUnusedParameters": false,
19 |     "noFallthroughCasesInSwitch": true
20 |   },
21 |   "include": ["vite.config.ts"]
22 | }
23 | 


--------------------------------------------------------------------------------
/truthlens-landing-page-main/vite.config.ts:
--------------------------------------------------------------------------------
 1 | import { defineConfig } from "vite";
 2 | import react from "@vitejs/plugin-react-swc";
 3 | import path from "path";
 4 | import { componentTagger } from "lovable-tagger";
 5 | 
 6 | // https://vitejs.dev/config/
 7 | export default defineConfig(({ mode }) => ({
 8 |   server: {
 9 |     host: "::",
10 |     port: 3000,
11 |   },
12 |   plugins: [react(), mode === "development" && componentTagger()].filter(Boolean),
13 |   resolve: {
14 |     alias: {
15 |       "@": path.resolve(__dirname, "./src"),
16 |     },
17 |   },
18 | }));
19 | 


--------------------------------------------------------------------------------